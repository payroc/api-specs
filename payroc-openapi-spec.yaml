openapi: 3.1.0
info:
  version: '1'
  title: Payroc API
  description: Api for accessing Payroc services
  contact:
    name: Payroc Helpdesk
    url: https://docs.payroc.com/api
    email: helpdesk@payroc.com
servers:
  - url: https://api.payroc.com/v1
    description: Production
  - url: https://api.uat.payroc.com/v1
    description: UAT
security:
  - bearerAuth: []
tags:
  - name: Apple Pay session
    description: An Apple Pay session authenticates the merchant's domain with Apple. After you start an Apple Pay session, you can use the Apple Pay JS API to retrieve the cardholder's encrypted payment details.
  - name: Bank accounts
    description: Validate bank account information.
  - name: Bank transfer payments
    description: Take bank-transfer payments.
  - name: Bank transfer refunds
    description: Return payments to customers' bank accounts.
  - name: Cards
    description: Validate card information.
  - name: Contacts
    description: Individuals who serve as points of contact for the business.
  - name: Currency conversion
    description: Offer dynamic currency conversion to customers.
  - name: Event Subscriptions
    description: |
      Create an event subscription so that we notify you when certain events occur, for example, when we change the status of a processing account.  
      When you subscribe to an event, provide the following information:  
        - **Event type** - The events that we should notify you about. You can subscribe to more than one event within the same request. For a list of events that you can subscribe to, go to [Events](https://docs.payroc.com/knowledge/basic-concepts/events).  
        - **Notification method** - The endpoint that we send a notification to if an event occurs. We send notifications by webhook request.  
        - **Event status** - The status of the event subscription.  
        - **Support email address** - Email address that we contact if we can't deliver notifications.  
      <br/>  
      Use our event subscriptions endpoint to do the following:  
      - [**Create event subscription**](#createEventSubscription) - Subscribe to receive notifications when events occur.  
      - [**Update event subscription**](#updateEventSubscription) - Change the details of an event subscription, for example, to receive notifications for an additional event.  
      - [**Partially update an event subscription**](#patchEventSubscription) - Change values of an existing event subscription.  
      - [**Retrieve an event subscription**](#getEventSubscription) - Retrieve all the information that we stored in an event subscription. 
      - [**List event subscriptions**](#listEventSubscriptions) - Retrieve a list of all event subscriptions associated with the ISV's account.  
      - [**Delete event subscription**](#deleteEventSubscription)
  - name: Funding accounts
    description: Financial accounts associated with entities.
  - name: Funding activity
    description: Activity associated with a payfac account.
  - name: Funding instructions
    description: Instructions on how to split fund between recipients.
  - name: Funding recipients
    description: Entities that can receive funding but not take payments
  - name: Hosted Fields
    description: Create a Hosted Fields session.
  - name: Merchant platforms
    description: |
      A merchant platform is an entity that represents a business and includes its legal information and all processing accounts.<br/><br/>
      After you create a merchant platform for a business, you can do the following:  
        - [Create and add an additional processing account to a merchant platform.](#createProcessingAccount)  
        - [Retrieve a merchant platform.](#getMerchantAccounts)  
        - [Retrieve a list of merchant platforms.](#listMerchantPlatforms)  
        - [Retrieve a list of open processing accounts that are linked to a merchant platform.](#listMerchantLocations)  
          
          
      For more information about boarding a merchant, go to our [Board a merchant](/guides/integrate/boarding) guide. 
  - name: Owners
    description: Individuals who own or control the business.
  - name: Payment instructions
    description: Submit instructions for initiating payments on physical devices running semi-integrated apps.
  - name: Payment links
    description: Create and share payment links.
  - name: Payment plans
    description: Create and manage payment plans.
  - name: Payments
    description: Take card payments.
  - name: Pricing intents
    description: Create and manage pricing intents.
  - name: Processing accounts
    description: Create and manage processing accounts.
  - name: Processing terminals
    description: Retrieve processing terminals
  - name: Refund instructions
    description: Submit instructions for initiating refunds on physical devices running semi-integrated apps.
  - name: Refunds
    description: Return payments to customers.
  - name: Secure tokens
    description: Save customers' payment details.
  - name: Settlement
    description: Settlement information
  - name: Single use tokens
    description: Create temporary single-use tokens.
  - name: Subscriptions
    description: Subscribe customers to payment plans.
  - name: Terminal orders
    description: Place and retrieve terminal orders.
paths:
  /funding-recipients:
    summary: Create and manage funding recipients.
    post:
      tags:
        - Funding recipients
      summary: Create funding recipient
      description: Create a funding recipient.
      operationId: createFundingRecipient
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: &ref_22
            type: string
            format: uuid
          examples: &ref_23
            example:
              value: 8e03978e-40d5-43e8-bc93-6894a57f9324
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_523
                - address
                - contactMethods
                - recipientType
                - taxId
                - owners
                - fundingAccounts
                - doingBusinessAs
              type: object
              title: create funding recipient
              properties: &ref_524
                recipientId:
                  type: integer
                  readOnly: true
                  example: 1
                status:
                  type: string
                  readOnly: true
                  enum:
                    - approved
                    - rejected
                    - pending
                  example: approved
                createdDate:
                  type: string
                  format: date-time
                  example: '2024-07-02T15:30:00Z'
                  readOnly: true
                lastModifiedDate:
                  type: string
                  format: date-time
                  example: '2024-07-02T15:30:00Z'
                  readOnly: true
                recipientType:
                  type: string
                  description: Type or legal structure of the funding recipient.
                  example: privateCorporation
                  enum:
                    - privateCorporation
                    - publicCorporation
                    - nonProfit
                    - government
                    - privateLlc
                    - publicLlc
                    - privatePartnership
                    - publicPartnership
                    - soleProprietor
                taxId:
                  type: string
                  description: Employer identification number (EIN) or Social Security number (SSN).
                  example: 12-3456789
                charityId:
                  type: string
                  description: Government identifier of the charity.
                doingBusinessAs:
                  type: string
                  description: Legal name that the business operates under.
                address:
                  type: object
                  description: Address of the funding recipient.
                  oneOf:
                    - required: &ref_0
                        - city
                        - country
                        - address1
                        - postalCode
                        - state
                      type: object
                      title: address
                      description: Object that contains information about the address.
                      properties: &ref_1
                        address1:
                          type: string
                          description: Address line 1.
                          example: 1 Example Ave.
                          maxLength: 150
                        address2:
                          type: string
                          description: Address line 2.
                          example: Example Address Line 2
                          maxLength: 150
                        address3:
                          type: string
                          description: Address line 3.
                          example: Example Address Line 3
                          maxLength: 150
                        city:
                          type: string
                          description: City.
                          example: Chicago
                          maxLength: 50
                        state:
                          type: string
                          description: Name of the state or state abbreviation.
                          example: Illinois
                          maxLength: 50
                        country:
                          maxLength: 2
                          minLength: 2
                          type: string
                          description: Two-digit country code for the country that the business operates in. The format follows the [ISO-3166-1](https://www.iso.org/iso-3166-country-codes.html) standard.
                          example: US
                        postalCode:
                          type: string
                          description: Zip code or postal code.
                          example: '60056'
                          maxLength: 10
                contactMethods:
                  type: array
                  minItems: 1
                  description: Array of contactMethod objects that you can use to add contact methods for the funding recipient. You must provide at least an email address.
                  items:
                    discriminator: &ref_2
                      propertyName: type
                      mapping:
                        email: '#/components/schemas/contactMethodEmail'
                        phone: '#/components/schemas/contactMethodPhone'
                        mobile: '#/components/schemas/contactMethodMobile'
                        fax: '#/components/schemas/contactMethodFax'
                    oneOf: &ref_3
                      - required: &ref_510
                          - type
                          - value
                        type: object
                        title: Email contact method
                        properties: &ref_511
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - email
                          value:
                            type: string
                            description: Email address.
                            maxLength: 50
                            example: jane.doe@example.com
                      - required: &ref_512
                          - type
                          - value
                        type: object
                        title: Phone number contact method
                        properties: &ref_513
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - phone
                          value:
                            type: string
                            description: Phone number.
                            maxLength: 15
                            example: '2025550164'
                      - required: &ref_514
                          - type
                          - value
                        type: object
                        title: Mobile number contact method
                        properties: &ref_515
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - mobile
                          value:
                            type: string
                            description: Mobile number.
                            maxLength: 15
                            example: '8445557624'
                      - required: &ref_516
                          - type
                          - value
                        type: object
                        title: Fax number contact method
                        properties: &ref_517
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - fax
                          value:
                            type: string
                            description: Fax number.
                            maxLength: 15
                            example: '2025550110'
                  example:
                    - type: email
                      value: jane.doe@example.com
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: '[Metadata](https://docs.payroc.com/api/metadata) object you can use to include custom data with your request.'
                  example:
                    yourCustomField: abc123
                owners:
                  minItems: 1
                  description: Array of owner objects that you can use to add owners to the funding recipient.
                  type: array
                  items:
                    type: object
                    title: owner
                    required: &ref_30
                      - firstName
                      - lastName
                      - dateOfBirth
                      - identifiers
                      - contactMethods
                      - relationship
                      - address
                    properties: &ref_31
                      ownerId:
                        type: integer
                        description: Unique identifier of the owner.
                        readOnly: true
                        example: 4564
                      firstName:
                        type: string
                        description: Owner's first name.
                        example: Jane
                        maxLength: 50
                      middleName:
                        type: string
                        description: Owner's middle name.
                        example: Helen
                        maxLength: 50
                      lastName:
                        type: string
                        description: Owner's last name.
                        example: Doe
                        maxLength: 50
                      dateOfBirth:
                        type: string
                        format: date
                        description: Owner's date of birth. The format of this value is **YYYY-MM-DD**.
                        example: '1964-03-22'
                      address:
                        required: *ref_0
                        type: object
                        title: address
                        description: Object that contains information about the address.
                        properties: *ref_1
                      identifiers:
                        minItems: 1
                        type: array
                        description: Array of IDs.
                        example:
                          - type: nationalId
                            value: xxxxx4320
                        items:
                          required: &ref_266
                            - type
                            - value
                          type: object
                          title: identifier
                          properties: &ref_267
                            type:
                              type: string
                              description: Type of ID provided to verify identity.
                              enum:
                                - nationalId
                            value:
                              type: string
                              description: Social Security Number (SSN) or Social Insurance Number (SIN).
                              example: xxxxx4320
                      contactMethods:
                        type: array
                        minItems: 1
                        maxItems: 4
                        uniqueItems: true
                        description: |
                          Array of contactMethod objects.  
                          **Note:** If you are adding information about an owner, you must provide at least an email address. If you are adding information about a contact, you must provide at least a contact number.   
                        items:
                          discriminator: *ref_2
                          oneOf: *ref_3
                      relationship:
                        description: Object that contains information about the owner's relationship to the business.
                        allOf:
                          - required: &ref_519
                              - isControlProng
                            type: object
                            title: Owner relationship
                            description: Object that contains information about the owner's relationship to the business.
                            properties: &ref_520
                              equityPercentage:
                                type: number
                                description: Percentage equity stake that the owner holds in the business.
                                format: percentage
                                example: 48.5
                                default: 0
                              title:
                                type: string
                                description: Owner's job title.
                                example: CFO
                              isControlProng:
                                type: boolean
                                description: Indicates if the owner is a control prong. You can identify only one control prong for a business.
                                example: true
                              isAuthorizedSignatory:
                                type: boolean
                                description: Indicates if the owner is an authorized signatory.
                                example: false
                fundingAccounts:
                  minItems: 1
                  description: Array of fundingAccount objects that you can use to add funding accounts to the funding recipient.
                  type: array
                  items:
                    required: &ref_20
                      - nameOnAccount
                      - paymentMethods
                      - type
                      - use
                    type: object
                    title: funding account
                    properties: &ref_21
                      fundingAccountId:
                        type: integer
                        description: Unique identifier of the funding account.
                        readOnly: true
                        example: 123
                      createdDate:
                        type: string
                        description: Date and time that we received your request to create the funding account in our system.
                        format: date-time
                        example: '2024-07-02T12:00:00.000Z'
                        readOnly: true
                      lastModifiedDate:
                        type: string
                        description: Date and time that the funding account was last modified.
                        format: date-time
                        example: '2024-07-02T12:00:00.000Z'
                        readOnly: true
                      status:
                        type: string
                        description: |
                          Status of the funding account. The value is one of the following:
                          - `approved` - We approved the funding account.
                          - `rejected` - We rejected the funding account.
                          - `pending` - We have not yet approved the funding account.
                          - `hold` - Our Risk team have temporarily placed a hold on the funding account.
                        readOnly: true
                        example: pending
                        enum:
                          - approved
                          - rejected
                          - pending
                          - hold
                      type:
                        type: string
                        description: Type of funding account.
                        enum:
                          - checking
                          - savings
                          - generalLedger
                        example: checking
                      use:
                        type: string
                        description: |
                          Indicates if we send funds or withdraw funds from the account.  
                          - `credit` - Send funds to the account.  
                          - `debit` - Withdraw funds from the account.  
                          - `creditAndDebit` - Send funds and withdraw funds from the account.
                        enum:
                          - credit
                          - debit
                          - creditAndDebit
                      nameOnAccount:
                        type: string
                        description: Name of the account holder.
                        example: Jane Doe
                      paymentMethods:
                        description: Array of paymentMethod objects.
                        uniqueItems: true
                        type: array
                        items: &ref_522
                          title: payment method
                          discriminator:
                            propertyName: type
                            mapping:
                              ach: '#/components/schemas/PaymentMethodAch'
                          oneOf:
                            - type: object
                              title: ACH payment method
                              properties: &ref_521
                                type:
                                  type: string
                                  description: Payment method that we use to send funds to the account.
                                  enum:
                                    - ach
                                value:
                                  required:
                                    - accountNumber
                                    - routingNumber
                                  type: object
                                  description: Object that contains information about the funding account.
                                  properties:
                                    routingNumber:
                                      maxLength: 9
                                      minLength: 9
                                      type: string
                                      description: Routing number of the funding account.
                                      example: '123456789'
                                    accountNumber:
                                      maxLength: 12
                                      minLength: 9
                                      type: string
                                      description: Account number of the funding account.
                                      example: '1234567890'
                      metadata:
                        type: object
                        additionalProperties:
                          type: string
                        description: '[Metadata](https://docs.payroc.com/api/metadata) object you can use to include custom data with your request.'
                        example:
                          yourCustomField: abc123
                      links:
                        readOnly: true
                        type: array
                        description: Array of HATEOAS links.
                        items:
                          type: object
                          readOnly: true
                          description: Object that contains HATEOAS links for the resource.
                          properties: &ref_4
                            rel:
                              type: string
                              description: Indicates the relationship between the current resource and the target resource.
                            method:
                              type: string
                              description: HTTP method that you need to use with the target resource.
                            href:
                              type: string
                              description: URL of the target resource.
                          required: &ref_5
                            - href
                            - method
                            - rel
                          example: &ref_6
                            rel: previous
                            method: get
                            href: <uri>
      responses:
        '201':
          description: Successful request. We created the funding recipient.
          content:
            application/json:
              schema:
                required: &ref_7
                  - address
                  - contactMethods
                  - recipientType
                  - taxId
                  - owners
                  - fundingAccounts
                  - doingBusinessAs
                type: object
                title: funding recipient
                properties: &ref_8
                  recipientId:
                    type: integer
                    description: Unique identifier of the funding recipient.
                    readOnly: true
                    example: 234
                  status:
                    type: string
                    description: Indicates if we have approved the funding recipient.
                    readOnly: true
                    enum:
                      - approved
                      - rejected
                      - pending
                    example: approved
                  createdDate:
                    type: string
                    description: Date the funding recipient was created.
                    format: date-time
                    example: '2024-07-02T15:30:00Z'
                    readOnly: true
                  lastModifiedDate:
                    type: string
                    description: Date the funding recipient was last modified.
                    format: date-time
                    example: '2024-07-02T15:30:00Z'
                    readOnly: true
                  recipientType:
                    type: string
                    enum:
                      - privateCorporation
                      - publicCorporation
                      - nonProfit
                      - government
                      - privateLlc
                      - publicLlc
                      - privatePartnership
                      - publicPartnership
                      - soleProprietor
                    example: privateCorporation
                    description: Type or legal structure of the funding recipient.
                  taxId:
                    type: string
                    description: Employer identification number (EIN) or Social Security number (SSN).
                    example: 12-3456789
                  charityId:
                    type: string
                    description: Government identifier of the charity.
                  doingBusinessAs:
                    type: string
                    description: Legal name that the business operates under.
                  address:
                    type: object
                    description: Address of the funding recipient.
                    oneOf:
                      - required: *ref_0
                        type: object
                        title: address
                        description: Object that contains information about the address.
                        properties: *ref_1
                  contactMethods:
                    type: array
                    minItems: 1
                    description: Array of contactMethod objects for the funding recipient.
                    items:
                      discriminator: *ref_2
                      oneOf: *ref_3
                    example:
                      - type: email
                        value: jane.doe@example.com
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: '[Metadata](https://docs.payroc.com/api/metadata) object you can use to include custom data with your request.'
                    example:
                      yourCustomField: abc123
                  owners:
                    readOnly: true
                    description: Array of owner objects associated with the funding recipient.
                    type: array
                    items:
                      type: object
                      title: owner summary
                      properties:
                        ownerId:
                          type: integer
                          description: Unique identifier of the owner.
                          example: 4564
                        link:
                          type: object
                          description: Array of HATEOAS links for viewing the owner.
                          properties:
                            rel:
                              type: string
                              example: owner
                            href:
                              type: string
                              example: https://api.payroc.com/v1/owners/4564
                            method:
                              type: string
                              example: get
                  fundingAccounts:
                    readOnly: true
                    description: Array of fundingAccount objects associated with the funding recipient.
                    type: array
                    items:
                      type: object
                      title: funding account summary
                      properties:
                        fundingAccountId:
                          type: integer
                          description: Unique identifier of the funding account.
                          example: 123
                        status:
                          type: string
                          description: Status of the funding account.
                          enum:
                            - approved
                            - rejected
                            - pending
                            - hold
                          example: pending
                        link:
                          type: object
                          description: HATEOAS links for viewing the funding account.
                          properties:
                            rel:
                              type: string
                              example: fundingAccount
                            href:
                              type: string
                              example: https://api.payroc.com/v1/funding-accounts/123
                            method:
                              type: string
                              example: get
                    example:
                      - fundingAccountId: 123
                        status: approved
                        link:
                          rel: fundingAccount
                          href: https://api.payroc.com/v1/funding-accounts/123
                          method: get
                      - fundingAccountId: 124
                        status: rejected
                        link:
                          rel: fundingAccount
                          href: https://api.payroc.com/v1/funding-accounts/124
                          method: get
          headers:
            location:
              description: URI reference to created resource.
              schema: &ref_24
                type: string
              examples: &ref_25
                example:
                  value: <uri>
        '400':
          description: Validation errors
          content:
            application/problem+json:
              schema:
                type: object
                properties: &ref_9
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#bad-request
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Bad request
                  status:
                    type: integer
                    description: Http status code
                    example: 400
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: One or more validation errors occurred, see error section for more info
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        parameter:
                          type: string
                          description: The parameter or field causing the issues
                          example: start_time
                        detail:
                          type: string
                          description: Short detail of the validation errors
                          example: invalid date
                        message:
                          type: string
                          description: Error message
                          example: Expected time, got '' for start_time
                required: &ref_10
                  - type
                  - title
                  - detail
                  - status
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: &ref_26
                    type: https://docs.payroc.com/api/errors#idempotency-key-missing
                    title: Idempotency-Key header missing
                    status: 400
                    detail: An 'Idempotency-Key' must be supplied for this request
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_11
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: start_time
                        detail: invalid date
                        message: Expected time, got '' for start_time
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: &ref_17
                    type: https://docs.payroc.com/api/errors#kyc-check-failed
                    title: Failed KYC Checks
                    status: 400
                    detail: Entity has been rejected due to failing KYC checks
        '401':
          description: Identity could not be verified
          content: &ref_12
            application/problem+json:
              schema:
                type: object
                properties: &ref_498
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-authorized
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not Authorized
                  status:
                    type: integer
                    description: Http status code
                    example: 401
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You do not have the required permissions to perform this action
                required: &ref_499
                  - type
                  - title
                  - status
                  - detail
              examples:
                notAuthorized:
                  summary: Not Authorized
                  description: Your identity could not be verified
                  value: &ref_812
                    type: https://docs.payroc.com/api/errors#not-authorized
                    title: Not Authorized
                    status: 401
                    detail: Your identity could not be verified
        '403':
          description: Do not have permissions to perform this action
          content: &ref_13
            application/problem+json:
              schema:
                type: object
                properties: &ref_500
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#forbidden
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Forbidden
                  status:
                    type: integer
                    description: Http status code
                    example: 403
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You do not have the required permissions to perform this action
                  instance:
                    type: string
                    description: Resource path the action was attempted on
                    example: https://api.payroc.com/v1/example/3
                  resource:
                    type: string
                    description: Resource the action was attempted on
                    example: exampleResource
                required: &ref_501
                  - type
                  - title
                  - status
                  - detail
              examples:
                forbidden:
                  summary: Forbidden
                  description: You do not have the required permission
                  value: &ref_813
                    type: https://docs.payroc.com/api/errors#forbidden
                    title: Forbidden
                    status: 403
                    detail: You do not have the required permissions to perform this action
                    instance: https://api.payroc.com/v1/exampleResource/3
                    resource: exampleResource
        '406':
          description: Not acceptable
          content: &ref_19
            application/problem+json:
              schema:
                type: object
                properties: &ref_502
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-acceptable
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not acceptable
                  status:
                    type: integer
                    description: Http status code
                    example: 406
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Resource does not support the representation requested.
                required: &ref_503
                  - type
                  - title
                  - status
                  - detail
              examples:
                notAcceptable:
                  summary: Not acceptable
                  description: Requested representation not supported
                  value: &ref_815
                    type: https://docs.payroc.com/api/errors#not-acceptable
                    title: Not acceptable
                    status: 406
                    detail: Resource does not support the representation requested
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: &ref_27
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#resource-already-exists
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Resource already exists
                  status:
                    type: integer
                    description: Http status code
                    example: 409
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: The resource you attempted to create already exists
                  instance:
                    type: string
                    description: Resource path to the existing resource
                    example: https://api.payroc.com/v1/example/3
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        parameter:
                          type: string
                          description: The parameter or field causing the issues
                          example: start_time
                        detail:
                          type: string
                          description: Short detail of the validation errors
                          example: invalid date
                        message:
                          type: string
                          description: Error message
                          example: Expected time, got '' for start_time
                  link:
                    type: object
                    readOnly: true
                    description: Object that contains HATEOAS links for the resource.
                    properties: *ref_4
                    required: *ref_5
                    example: *ref_6
                required: &ref_28
                  - type
                  - title
                  - status
                  - detail
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: &ref_29
                    type: https://docs.payroc.com/api/errors#idempotency-key-in-use
                    title: Idempotency-Key in use
                    status: 409
                    detail: '''Idempotency-Key'' is already in use against a different request'
        '500':
          description: An error has occured
          content: &ref_14
            application/problem+json:
              schema:
                type: object
                properties: &ref_508
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#api-error
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Api error
                  status:
                    type: integer
                    description: Http status code
                    example: 500
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Unable to process your request at this time
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                          example: Service offline
                required: &ref_509
                  - type
                  - title
                  - status
                  - detail
              examples:
                apiError:
                  summary: Api error
                  description: Unable to process your request.
                  value: &ref_814
                    type: https://docs.payroc.com/api/errors#api-error
                    title: Api error
                    status: 500
                    detail: We are unable to process your request at this time
                    errors:
                      - message: Service offline
    get:
      tags:
        - Funding recipients
      summary: List funding recipients
      description: Retrieve a list of all funding recipients associated with the ISV.
      operationId: listFundingRecipients
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: &ref_32
            type: string
          examples: &ref_33
            example:
              value: '2571'
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: &ref_34
            type: string
          examples: &ref_35
            example:
              value: '8516'
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: &ref_36
            type: integer
            default: 10
            maximum: 100
          examples: &ref_37
            example:
              value: 25
      responses:
        '200':
          description: Successful request. Returns a paginated list of all funding recipients.
          content:
            application/json:
              schema:
                type: object
                title: paginated funding recipients
                allOf: &ref_518
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: &ref_38
                      limit:
                        type: number
                        description: Maximum number of results that we return for each page.
                        example: 25
                      count:
                        type: number
                        description: Number of results that we returned.
                        example: 23
                      hasMore:
                        type: boolean
                        description: Indicates that further results are available.
                        example: false
                      links:
                        type: array
                        description: Reference links to navigate to the previous page of results or to the next page of results.
                        example:
                          - rel: previous
                            method: get
                            href: <uri>
                          - rel: next
                            method: get
                            href: <uri>
                        items:
                          type: object
                          readOnly: true
                          description: Object that contains HATEOAS links for the resource.
                          properties: *ref_4
                          required: *ref_5
                          example: *ref_6
                  - type: object
                    properties:
                      data:
                        type: array
                        description: An array of funding recipients
                        items:
                          required: *ref_7
                          type: object
                          title: funding recipient
                          properties: *ref_8
              examples:
                paginatedFundingRecipients:
                  summary: Paginated funding recipients.
                  description: Paginated list of funding recipients.
                  value: &ref_811
                    limit: 10
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-recipients?before=234&limit=10
                    data:
                      - recipientId: 234
                        status: approved
                        createdDate: '2024-07-02T15:30:00Z'
                        lastModifiedDate: '2024-07-02T15:30:00Z'
                        recipientType: privateCorporation
                        taxId: 12-3456789
                        doingBusinessAs: Pizza Doe
                        address:
                          address1: 1 Example Ave.
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: phone
                            value: '2025550164'
                        metadata:
                          yourCustomField: abc123
                        owners:
                          - ownerId: 4564
                            link:
                              rel: owner
                              method: get
                              href: https://api.payroc.com/v1/owners/4564
                        fundingAccounts:
                          - fundingAccountId: 123
                            status: approved
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/123
                          - fundingAccountId: 124
                            status: hold
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/124
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: &ref_55
                    limit: 10
                    count: 0
                    hasMore: false
                    links: []
                    data: []
        '400':
          description: Invalid request
          content: &ref_15
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                badRequest:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '500':
          description: An error has occured
          content: *ref_14
  /funding-recipients/{recipientId}:
    get:
      tags:
        - Funding recipients
      summary: Retrieve a funding recipient
      description: Retrieve a specific funding recipient.
      operationId: getFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: &ref_16
            type: integer
          example: 234
      responses:
        '200':
          description: Successful request. Returns the requested funding recipient.
          content:
            application/json:
              schema:
                required: *ref_7
                type: object
                title: funding recipient
                properties: *ref_8
              examples:
                fundingRecipient:
                  summary: Funding recipient.
                  description: Funding recipients.
                  value: &ref_816
                    recipientId: 234
                    status: approved
                    createdDate: '2024-07-02T15:30:00Z'
                    lastModifiedDate: '2024-07-02T15:30:00Z'
                    recipientType: privateCorporation
                    taxId: 12-3456789
                    doingBusinessAs: Pizza Doe
                    address:
                      address1: 1 Example Ave.
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    contactMethods:
                      - type: phone
                        value: '2025550164'
                    metadata:
                      yourCustomField: abc123
                    owners:
                      - ownerId: 4564
                        link:
                          rel: owner
                          method: get
                          href: https://api.payroc.com/v1/owners/4564
                    fundingAccounts:
                      - fundingAccountId: 123
                        status: approved
                        link:
                          rel: fundingAccount
                          method: get
                          href: https://api.payroc.com/v1/funding-accounts/123
                      - fundingAccountId: 124
                        status: hold
                        link:
                          rel: fundingAccount
                          method: get
                          href: https://api.payroc.com/v1/funding-accounts/124
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: &ref_18
            application/problem+json:
              schema:
                type: object
                properties: &ref_315
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-found
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not found
                  status:
                    type: integer
                    description: Http status code
                    example: 404
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Specified resource was not found
                  resource:
                    type: string
                    description: Resource that was not found
                    example: exampleResource
                required: &ref_316
                  - type
                  - title
                  - status
                  - detail
              examples:
                notFound:
                  summary: Not found
                  description: Resource could not be found
                  value: &ref_317
                    type: https://docs.payroc.com/api/errors#not-found
                    title: Not found
                    status: 404
                    detail: Resource not found
                    resource: (The Type of the Resource)
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Funding recipients
      summary: Update funding recipient
      description: Update a funding recipient. If you make significant changes, we may need to approve the funding recipient again.
      operationId: updateFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_7
              type: object
              title: funding recipient
              properties: *ref_8
      responses:
        '204':
          description: Successful request. We updated the funding recipient.
        '400':
          description: Validation errors
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_17
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Funding recipients
      summary: Delete funding recipient
      description: Delete a funding recipient. This includes funding accounts and owners linked to the funding recipient.
      operationId: deleteFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
      responses:
        '204':
          description: Successful request. We deleted the funding recipient.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /funding-recipients/{recipientId}/funding-accounts:
    get:
      tags:
        - Funding recipients
      summary: List funding accounts
      description: Retrieve all funding accounts associated with the funding recipient.
      operationId: listFundRecipientFundingAccounts
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
      responses:
        '200':
          description: Successful request. Returns a list of all funding accounts associated with the funding recipient.
          content:
            application/json:
              schema:
                type: array
                items:
                  required: *ref_20
                  type: object
                  title: funding account
                  properties: *ref_21
              examples:
                fundingAccounts:
                  summary: List of funding accounts
                  description: List of funding accounts.
                  value: &ref_817
                    - fundingAccountId: 123
                      createdDate: '2024-07-02T15:30:00Z'
                      lastModifiedDate: '2024-07-02T15:30:00Z'
                      status: approved
                      type: checking
                      use: credit
                      nameOnAccount: Jane Doe
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****6789'
                            accountNumber: '******7890'
                      metadata:
                        yourCustomField: abc123
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/funding-recipient/234
                          method: get
                    - fundingAccountId: 124
                      createdDate: '2024-07-02T15:30:00Z'
                      lastModifiedDate: '2024-07-02T15:30:00Z'
                      status: pending
                      type: checking
                      use: debit
                      nameOnAccount: Jane Doe
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****8725'
                            accountNumber: '******3491'
                      metadata:
                        yourCustomField: abc123
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/funding-recipient/235
                          method: get
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    post:
      tags:
        - Funding recipients
      summary: Create funding account
      description: Create a new funding account, and add it to the funding recipient.
      operationId: createFundRecipientFundingAccount
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_20
              type: object
              title: funding account
              properties: *ref_21
      responses:
        '201':
          description: Successful request. We created the funding account and added it to the funding recipient.
          content:
            application/json:
              schema:
                required: *ref_20
                type: object
                title: funding account
                properties: *ref_21
              examples:
                fundingAccount:
                  summary: Funding account
                  description: Funding accounts.
                  value: &ref_818
                    fundingAccountId: 123
                    createdDate: '2024-07-02T15:30:00Z'
                    lastModifiedDate: '2024-07-02T15:30:00Z'
                    status: approved
                    type: checking
                    use: credit
                    nameOnAccount: Jane Doe
                    paymentMethods:
                      - type: ach
                        value:
                          routingNumber: '*****6789'
                          accountNumber: '******7890'
                    metadata:
                      yourCustomField: abc123
                    links:
                      - rel: parent
                        href: https://api.payroc.com/v1/funding-recipient/234
                        method: get
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation errors
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_17
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
  /funding-recipients/{recipientId}/owners:
    get:
      tags:
        - Funding recipients
      summary: List funding recipient owners
      description: Retrieve all owners associated with the funding recipient.
      operationId: listFundRecipientOwners
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
      responses:
        '200':
          description: Successful request. Returns a list of all owners associated with the funding recipient.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  title: owner
                  required: *ref_30
                  properties: *ref_31
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    post:
      tags:
        - Funding recipients
      summary: Create funding recipient owner
      description: Create a new owner, and add it to the funding recipient.
      operationId: createFundRecipientOwner
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          schema: *ref_16
          example: 234
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: owner
              required: *ref_30
              properties: *ref_31
      responses:
        '201':
          description: Successful request. We created the owner and added it to the funding recipient.
          content:
            application/json:
              schema:
                type: object
                title: owner
                required: *ref_30
                properties: *ref_31
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation errors
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_17
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
  /funding-accounts:
    get:
      tags:
        - Funding accounts
      summary: List funding accounts
      description: Retrieve a list of all funding accounts associated with the ISV.
      operationId: listFundingAccount
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a paginated list of all funding accounts.
          content:
            application/json:
              schema:
                type: object
                title: paginated funding accounts
                allOf: &ref_525
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: |
                          Array of funding account objects for the processing account. Each processing account must have:  

                          - One funding account that accepts both credits to the account and debits from the account.  

                          OR  

                          - Two funding accounts - one for credits to the account, and another account for debits from the account.  
                        items:
                          required: *ref_20
                          type: object
                          title: funding account
                          properties: *ref_21
                    required:
                      - data
              examples:
                fundingAccountExample:
                  summary: Paginated funding accounts
                  value: &ref_819
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-accounts?before=123&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-accounts?after=124&limit=2
                    data:
                      - fundingAccountId: 123
                        createdDate: '2024-07-02T15:30:00Z'
                        lastModifiedDate: '2024-07-02T15:30:00Z'
                        status: approved
                        type: checking
                        use: credit
                        nameOnAccount: Jane Doe
                        paymentMethods:
                          - type: ach
                            value:
                              routingNumber: '*****6789'
                              accountNumber: '******7890'
                        metadata:
                          yourCustomField: abc123
                        links:
                          - rel: parent
                            href: https://api.payroc.com/v1/merchants/4525644354
                            method: get
                      - fundingAccountId: 124
                        createdDate: '2024-07-02T15:30:00Z'
                        lastModifiedDate: '2024-07-02T15:30:00Z'
                        status: pending
                        type: checking
                        use: debit
                        nameOnAccount: Jane Doe
                        paymentMethods:
                          - type: ach
                            value:
                              routingNumber: '*****8725'
                              accountNumber: '******3491'
                        metadata:
                          yourCustomField: abc123
                        links:
                          - rel: parent
                            href: https://api.payroc.com/v1/funding-recipient/234
                            method: get
                noResults:
                  summary: No results found
                  description: No results found
                  value: &ref_820
                    limit: 10
                    count: 0
                    hasMore: false
                    links: []
                    data: []
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /funding-accounts/{fundingAccountId}:
    get:
      tags:
        - Funding accounts
      summary: Retrieve funding account
      description: Retrieve a specific funding account.
      operationId: getFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          schema: &ref_39
            type: integer
          examples: &ref_40
            example:
              value: 123
      responses:
        '200':
          description: Successful request. Returns the requested funding account.
          content:
            application/json:
              schema:
                required: *ref_20
                type: object
                title: funding account
                properties: *ref_21
              examples:
                fundingAccountExample:
                  summary: Masked funding account example.
                  value: &ref_821
                    fundingAccountId: 123
                    createdDate: '2024-07-02T15:30:00Z'
                    lastModifiedDate: '2024-07-02T15:30:00Z'
                    status: pending
                    type: checking
                    use: credit
                    nameOnAccount: Jane Doe
                    paymentMethods:
                      - type: ach
                        value:
                          routingNumber: '*****6789'
                          accountNumber: '******7890'
                    metadata:
                      yourCustomField: abc123
                    links:
                      - rel: parent
                        href: https://api.payroc.com/v1/merchants/4525644354
                        method: get
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Funding accounts
      summary: Update funding account
      description: Update a funding account.
      operationId: updateFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          schema: *ref_39
          examples: *ref_40
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_20
              type: object
              title: funding account
              properties: *ref_21
      responses:
        '204':
          description: Successful request. We updated the funding account.
        '400':
          description: Validation errors
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_17
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Funding accounts
      summary: Delete funding account
      description: Delete a funding account.
      operationId: deleteFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          schema: *ref_39
          examples: *ref_40
      responses:
        '204':
          description: Successful request. We deleted the funding account.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /owners/{ownerId}:
    get:
      tags:
        - Owners
      summary: Retrieve owner
      description: |
        Use this method to retrieve details about an owner of a processing account or an owner associated with a funding recipient.  

        To retrieve an owner, you need their ownerId. Our gateway returned the ownerId in the response of the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method or the [Create Funding Recipient Owner](https://docs.payroc.com/api/schema/funding/funding-recipients/create-owner) method.  

        **Note:** If you don't have the ownerId, use the [Retrieve Processing Account](https://docs.payroc.com/api/schema/boarding/processing-accounts/retrieve) method if you are searching for a processing account owner, or use the [List Funding Recipient Owners](https://docs.payroc.com/api/schema/funding/funding-recipients/list-owners) method if you are searching for a funding recipient owner.  

        Our gateway returns the following information about an owner:  
        - Name, date of birth, and address.  
        - Contact details, including their email address.  
        - Relationship to the business, including whether they are a control prong or authorized signatory, and their equity stake in the business. 
      operationId: getOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier that we assigned to the owner.
          required: true
          schema: &ref_41
            type: integer
          examples: &ref_42
            example:
              value: 4564
      responses:
        '200':
          description: Successful request. Returns the requested owner.
          content:
            application/json:
              schema:
                type: object
                title: owner
                required: *ref_30
                properties: *ref_31
              examples:
                retrievedOwner:
                  summary: Retrieve owner
                  description: Retrieve a specific owner.
                  value: &ref_822
                    ownerId: 4564
                    firstName: Jane
                    middleName: Helen
                    lastName: Doe
                    dateOfBirth: '1964-03-22'
                    address:
                      address1: 1 Example Ave.
                      address2: Example Address Line 2
                      address3: Example Address Line 3
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    identifiers:
                      - type: nationalId
                        value: xxxxx4320
                    contactMethods:
                      - type: email
                        value: jane.doe@example.com
                    relationship:
                      equityPercentage: 48.5
                      title: CFO
                      isControlProng: true
                      isAuthorizedSignatory: false
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Owners
      summary: Update owner
      description: |
        > **Important:** You can't update the details of an owner of a processing account.  

        Use this method to update the details of an owner associated with a funding recipient.  

        To update an owner, you need their ownerId. Our gateway returned the ownerId in the response of the [Create Funding Recipient](https://docs.payroc.com/api/schema/funding/funding-recipients/create) method and the [Create Funding Recipient Owner](https://docs.payroc.com/api/schema/funding/funding-recipients/create-owner) method.   

        **Note:** If you don't have the ownerId, use the [List Funding Recipient Owners](https://docs.payroc.com/api/schema/funding/funding-recipients/list-owners) method, the [Retrieve Funding Recipient](https://docs.payroc.com/api/schema/funding/funding-recipients/retrieve) method, or the [List Funding Recipients](https://docs.payroc.com/api/schema/funding/funding-recipients/list) method to search for the funding recipient owner.  

        You can update the following details about an owner:  

        - Personal details, including their name, date of birth, and address.  
        - Identification details, including their identification type and number.  
        - Contact details, including their email address.  
        - Relationship to the business, including whether they are a control prong.  
      operationId: updateOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier that we assigned to the owner.
          required: true
          schema: *ref_41
          examples: *ref_42
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: owner
              required: *ref_30
              properties: *ref_31
            examples:
              updateOwner:
                summary: Update owner
                description: Update a specific owner.
                value: &ref_823
                  firstName: Jane
                  middleName: Helen
                  lastName: Doe
                  dateOfBirth: '1964-03-22'
                  address:
                    address1: 1 Example Ave.
                    address2: Example Address Line 2
                    address3: Example Address Line 3
                    city: Chicago
                    state: Illinois
                    country: US
                    postalCode: '60056'
                  identifiers:
                    - type: nationalId
                      value: 000-00-4320
                  contactMethods:
                    - type: email
                      value: jane.doe@example.com
                  relationship:
                    equityPercentage: 48.5
                    title: CFO
                    isControlProng: true
                    isAuthorizedSignatory: false
      responses:
        '204':
          description: Successful request. We updated the owner.
        '400':
          description: Validation errors.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_17
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Owners
      summary: Delete owner
      description: |
        > **Important:** You can't delete an owner of a processing account. 

        Use this method to delete an owner associated with a funding recipient. You can delete an owner only if the funding recipient has more than one owner.  

        To delete an owner, you need their ownerId. Our gateway returned the ownerId in the response of the [Create Funding Recipient](https://docs.payroc.com/api/schema/funding/funding-recipients/create) method and the [Create Funding Recipient Owner](https://docs.payroc.com/api/schema/funding/funding-recipients/create-owner) method.  

        **Note:** If you don't have the ownerId, use the [List Funding Recipient Owners](https://docs.payroc.com/api/schema/funding/funding-recipients/list-owners) method, the [Retrieve Funding Recipient](https://docs.payroc.com/api/schema/funding/funding-recipients/retrieve) method, or the [List Funding Recipients](https://docs.payroc.com/api/schema/funding/funding-recipients/list) method to search for the funding recipient owner.  
      operationId: deleteOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier that we assigned to the owner.
          required: true
          schema: *ref_41
          examples: *ref_42
      responses:
        '204':
          description: Successful request. We deleted the owner.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /pricing-intents:
    summary: Provides capabilities to list and create pricing intents.
    get:
      summary: List pricing intents
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of pricing intents associated with the ISV.  

        **Note:** If you want to view a specific pricing intent and you have its pricingIntentId, use our [Retrieve Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/retrieve) method.  

        Our gateway returns the following information about each pricing intent in the list:  

        - Information about the fees, including the base fees, gateway fees, and processor fees.  
        - Status of the pricing intent, including whether we approved the pricing intent.  

        For each pricing intent, we also return its pricingIntentId which you can use to perform follow-on actions.  
      operationId: listPricingIntents
      tags:
        - Pricing intents
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful response. Returns a list of pricing intents.
          content:
            application/json:
              schema:
                type: object
                title: paginated pricing intents
                description: Object that contains information about your pricing intents.
                allOf: &ref_565
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of pricing intent objects.
                        items:
                          type: object
                          title: pricing intent
                          description: Object that contains information about a pricing intent.
                          oneOf: &ref_56
                            - type: object
                              title: pricing intent version 5.0
                              description: Object that contains information about a pricing intent for Merchant Processing Agreement (MPA) 5.0.
                              allOf: &ref_564
                                - type: object
                                  title: base pricing intent
                                  description: Object that contains information about the base fees.
                                  properties: &ref_526
                                    id:
                                      type: string
                                      description: Unique identifier of the pricing intent.
                                      readOnly: true
                                    createdDate:
                                      type: string
                                      example: '2024-07-02T09:00:00'
                                      format: date-time
                                      description: Date and time that we received your request to create the pricing intent. We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                                      readOnly: true
                                    lastUpdatedDate:
                                      type: string
                                      example: '2024-07-02T09:00:00'
                                      format: date-time
                                      description: Date and time that the pricing intent was last modified. We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                                      readOnly: true
                                    status:
                                      type: string
                                      description: |
                                        Status of the pricing intent. The value can be one of the following:
                                        - `active` - We have approved the pricing intent.
                                        - `pendingReview` - We have not yet reviewed the pricing intent.
                                        - `rejected` - We have rejected the pricing intent.
                                      readOnly: true
                                      enum:
                                        - active
                                        - pendingReview
                                        - rejected
                                    key:
                                      type: string
                                      description: Unique identifier that you can assign to the pricing intent for your own records.
                                    metadata:
                                      type: object
                                      additionalProperties:
                                        type: string
                                      description: '[Metadata](https://docs.payroc.com/api/metadata) object that contains your custom data.'
                                      example:
                                        yourCustomField: abc123
                                  required: &ref_527
                                    - key
                                - type: object
                                  title: US pricing agreement version 5.0
                                  description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 5.0.
                                  required: &ref_264
                                    - country
                                    - version
                                    - base
                                  properties: &ref_265
                                    country:
                                      type: string
                                      description: Two-digit code for the country that the pricing intent applies to. The format follows the [ISO-3166-1](https://www.iso.org/iso-3166-country-codes.html) standard.
                                      enum:
                                        - US
                                    version:
                                      type: string
                                      description: Version of the MPA.
                                      enum:
                                        - '5.0'
                                    base:
                                      type: object
                                      title: US base fees
                                      description: Object that contains information about U.S. base fees.
                                      properties: &ref_292
                                        addressVerification:
                                          description: Fee for each address verification request. The value is in the currency's lowest denomination, for example, cents.
                                          type:
                                            - integer
                                            - 'null'
                                          example: 5
                                          minimum: 0
                                        annualFee:
                                          type: object
                                          description: Object that contains information about the annual fee.
                                          properties:
                                            billInMonth:
                                              type: string
                                              description: Indicates whether we collect the annual fee in June or December.
                                              default: december
                                              enum:
                                                - june
                                                - december
                                              example: june
                                            amount:
                                              description: Annual fee. The value is in the currency's lowest denomination, for example, cents.
                                              type: integer
                                              minimum: 0
                                              example: 100
                                          required:
                                            - amount
                                        regulatoryAssistanceProgram:
                                          type:
                                            - integer
                                            - 'null'
                                          description: Annual fee for the regulatory assistance program. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 15
                                        pciNonCompliance:
                                          type: integer
                                          description: Fee that we apply each month if you aren't compliant with PCI standards. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 7495
                                          default: 7495
                                        merchantAdvantage:
                                          type:
                                            - integer
                                            - 'null'
                                          description: Monthly fee for Payroc Advantage. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 10
                                        platinumSecurity:
                                          description: Object that contains information about the Platinum Security fee.
                                          type: object
                                          discriminator:
                                            propertyName: billingFrequency
                                            mapping:
                                              monthly: '#/components/schemas/baseUsMonthly'
                                              annual: '#/components/schemas/baseUsAnnual'
                                          oneOf:
                                            - type: object
                                              title: Monthly platinum security
                                              required: &ref_528
                                                - billingFrequency
                                              properties: &ref_529
                                                billingFrequency:
                                                  type: string
                                                  description: Indicates whether we bill your account monthly or annually.
                                                  enum:
                                                    - monthly
                                                amount:
                                                  readOnly: true
                                                  description: Fee for Platinum Security. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  example: 1295
                                                  default: 1295
                                            - type: object
                                              title: Annual platinum security
                                              required: &ref_530
                                                - billingFrequency
                                              properties: &ref_531
                                                billingFrequency:
                                                  type: string
                                                  description: Indicates whether we bill your account monthly or annually.
                                                  enum:
                                                    - annual
                                                amount:
                                                  readOnly: true
                                                  description: Fee for the Platinum Security, this is returned in the lowest unit of currency. For example, cents.
                                                  type: integer
                                                  example: 15540
                                                  default: 15540
                                        maintenance:
                                          type: integer
                                          description: Monthly fee for maintenance. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 500
                                          example: 1995
                                        minimum:
                                          type: integer
                                          description: Monthly fee that we charge when the merchant doesn't meet the minimum fee amount. This monthly fee is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 100
                                        voiceAuthorization:
                                          type: integer
                                          description: Fee for each voice authorization. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 95
                                          default: 95
                                        chargeback:
                                          type: integer
                                          description: Fee for each chargeback. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 2500
                                          default: 2500
                                        retrieval:
                                          type: integer
                                          description: Fee for each retrieval. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 1500
                                          default: 1500
                                        batch:
                                          type: integer
                                          description: Fee for each batch. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 5
                                        earlyTermination:
                                          type: integer
                                          description: Fee for early termination. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 57500
                                          default: 57500
                                      required: &ref_293
                                        - addressVerification
                                        - annualFee
                                        - regulatoryAssistanceProgram
                                        - merchantAdvantage
                                        - batch
                                        - maintenance
                                        - minimum
                                    processor:
                                      type: object
                                      title: US processor fees
                                      description: Object that contains information about U.S. processor fees.
                                      properties:
                                        card:
                                          type: object
                                          description: Object that contains information about card fees.
                                          discriminator:
                                            propertyName: planType
                                            mapping:
                                              interchangePlus: '#/components/schemas/interchangePlus'
                                              interchangePlusPlus: '#/components/schemas/interchangePlusPlus'
                                              tiered3: '#/components/schemas/tiered3'
                                              tiered4: '#/components/schemas/tiered4'
                                              tiered6: '#/components/schemas/tiered6'
                                              flatRate: '#/components/schemas/flatRate'
                                              consumerChoice: '#/components/schemas/consumerChoice'
                                              rewardPayChoice: '#/components/schemas/rewardPayChoice'
                                          oneOf:
                                            - type: object
                                              title: Interchange Plus Plan
                                              description: Object that contains information about Interchange Plus.
                                              properties: &ref_294
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - interchangePlus
                                                fees:
                                                  description: Object that contains information about the fees.
                                                  type: object
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                                      type: object
                                                      title: Processor Fee
                                                      properties: &ref_43
                                                        volume:
                                                          description: Percentage of total transaction amount that the processor charges the merchant.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          optBlue: '#/components/schemas/interchangePlusAmexOptBlue'
                                                          direct: '#/components/schemas/interchangePlusAmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required: &ref_532
                                                            - type
                                                            - volume
                                                            - transaction
                                                          properties: &ref_533
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - optBlue
                                                            volume:
                                                              description: Percentage of the total transaction amount that the processor charges the merchant.
                                                              allOf:
                                                                - description: Percentage value up to 2 decimal places.
                                                                  title: percentage
                                                                  type: number
                                                                  format: double
                                                                  minimum: 0
                                                                  maximum: 100
                                                                  example: 1.25
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_534
                                                            - type
                                                            - transaction
                                                          properties: &ref_535
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: &ref_44
                                                        - additionalDiscount
                                                        - transaction
                                                        - monthlyAccess
                                                      properties: &ref_45
                                                        additionalDiscount:
                                                          description: Percentage of additional discount.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                        monthlyAccess:
                                                          description: Monthly access fee for using PIN-debit services. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: &ref_46
                                                        - transaction
                                                      properties: &ref_47
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    enhancedInterchange:
                                                      type: object
                                                      description: Object that contains the fees for enhanced interchange services.
                                                      required: &ref_48
                                                        - enrollment
                                                        - creditToMerchant
                                                      properties: &ref_49
                                                        enrollment:
                                                          description: Enrollment fee for the enhanced interchange services. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                        creditToMerchant:
                                                          description: Percentage of additional discount.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: &ref_50
                                                        - transaction
                                                      properties: &ref_51
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_295
                                                - planType
                                                - fees
                                            - type: object
                                              title: Interchange Plus Plus
                                              description: Object that contains information about Interchange Plus Plus.
                                              properties: &ref_540
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - interchangePlusPlus
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                                      type: object
                                                      required: &ref_52
                                                        - qualifiedRate
                                                        - midQualRate
                                                        - nonQualRate
                                                      properties: &ref_53
                                                        qualifiedRate:
                                                          description: Object that contains the fees for a qualified transaction.
                                                          type: object
                                                          title: Processor Fee
                                                          properties: *ref_43
                                                        midQualRate:
                                                          description: Object that contains the fees for a mid-qualified transaction.
                                                          type: object
                                                          title: Processor Fee
                                                          properties: *ref_43
                                                        nonQualRate:
                                                          description: Object that contains the fees for a non-qualified transaction.
                                                          type: object
                                                          title: Processor Fee
                                                          properties: *ref_43
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          optBlue: '#/components/schemas/interchangePlusPlusAmexOptBlue'
                                                          direct: '#/components/schemas/interchangePlusPlusAmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required: &ref_536
                                                            - type
                                                            - qualifiedRate
                                                            - midQualRate
                                                            - nonQualRate
                                                          properties: &ref_537
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - optBlue
                                                            qualifiedRate:
                                                              description: Object that contains the fees for a qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            midQualRate:
                                                              description: Object that contains the fees for a mid-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            nonQualRate:
                                                              description: Object that contains the fees for a non-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_538
                                                            - type
                                                            - transaction
                                                          properties: &ref_539
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    enhancedInterchange:
                                                      type: object
                                                      description: Object that contains the fees for enhanced interchange services.
                                                      required: *ref_48
                                                      properties: *ref_49
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_541
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with three tiers
                                              description: Object that contains information about tiered pricing with three tiers.
                                              properties: &ref_296
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered3
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                                      type: object
                                                      required: *ref_52
                                                      properties: *ref_53
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          optBlue: '#/components/schemas/tiered3AmexOptBlue'
                                                          direct: '#/components/schemas/tiered3AmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required: &ref_542
                                                            - type
                                                            - qualifiedRate
                                                            - midQualRate
                                                            - nonQualRate
                                                          properties: &ref_543
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - optBlue
                                                            qualifiedRate:
                                                              description: Object that contains the fees for a qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            midQualRate:
                                                              description: Object that contains the fees for a mid-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            nonQualRate:
                                                              description: Object that contains the fees for a non-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_544
                                                            - type
                                                            - transaction
                                                          properties: &ref_545
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_297
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with four tiers
                                              description: Object that contains information about tiered pricing with four tiers.
                                              properties: &ref_298
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered4
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                                      type: object
                                                      allOf: &ref_54
                                                        - type: object
                                                          required: *ref_52
                                                          properties: *ref_53
                                                        - type: object
                                                          required:
                                                            - premiumRate
                                                          properties:
                                                            premiumRate:
                                                              description: Object that contains the fees for a premium rate transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          optBlue: '#/components/schemas/tiered4AmexOptBlue'
                                                          direct: '#/components/schemas/tiered4AmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required: &ref_546
                                                            - type
                                                            - qualifiedRate
                                                            - midQualRate
                                                            - nonQualRate
                                                          properties: &ref_547
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - optBlue
                                                            qualifiedRate:
                                                              description: Object that contains the fees for a qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            midQualRate:
                                                              description: Object that contains the fees for a mid-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            nonQualRate:
                                                              description: Object that contains the fees for a non-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_548
                                                            - type
                                                            - transaction
                                                          properties: &ref_549
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_299
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with six tiers
                                              description: Object that contains information about tiered pricing with six tiers.
                                              properties: &ref_300
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered6
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                                      type: object
                                                      allOf: &ref_550
                                                        - type: object
                                                          allOf: *ref_54
                                                        - type: object
                                                          required:
                                                            - regulatedCheckCard
                                                            - unregulatedCheckCard
                                                          properties:
                                                            regulatedCheckCard:
                                                              description: Object that contains the fees for a regulated debit-card transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            unregulatedCheckCard:
                                                              description: Object that contains the fees for an unregulated debit-card transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          optBlue: '#/components/schemas/tiered6AmexOptBlue'
                                                          direct: '#/components/schemas/tiered6AmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required: &ref_551
                                                            - type
                                                            - qualifiedRate
                                                            - midQualRate
                                                            - nonQualRate
                                                          properties: &ref_552
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - optBlue
                                                            qualifiedRate:
                                                              description: Object that contains the fees for a qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            midQualRate:
                                                              description: Object that contains the fees for a mid-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                            nonQualRate:
                                                              description: Object that contains the fees for a non-qualified transaction.
                                                              type: object
                                                              title: Processor Fee
                                                              properties: *ref_43
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_553
                                                            - type
                                                            - transaction
                                                          properties: &ref_554
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_301
                                                - planType
                                                - fees
                                            - type: object
                                              title: Flat Rate Plan
                                              description: Object that contains information about Flat Rate.
                                              properties: &ref_302
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - flatRate
                                                fees:
                                                  description: Object that contains information about the Flat Rate fees.
                                                  type: object
                                                  properties:
                                                    standardCards:
                                                      description: Object that contains the fees for standard card transactions.
                                                      type: object
                                                      title: Processor Fee
                                                      properties: *ref_43
                                                    amex:
                                                      description: Object that contains the fees for American Express transactions.
                                                      discriminator:
                                                        propertyName: type
                                                        mapping:
                                                          direct: '#/components/schemas/flatRateAmexDirect'
                                                      oneOf:
                                                        - type: object
                                                          title: American Express Direct
                                                          required: &ref_555
                                                            - type
                                                            - transaction
                                                          properties: &ref_556
                                                            type:
                                                              type: string
                                                              description: Type of American Express program.
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - standardCards
                                              required: &ref_303
                                                - planType
                                                - fees
                                            - type: object
                                              title: Consumer Choice Plan
                                              description: Object that contains information about ConsumerChoice.
                                              properties: &ref_304
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - consumerChoice
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    monthlySubscription:
                                                      description: Fee for the monthly subscription for the processing plan. The value is in the currency's lowest denomination, for example, cents.
                                                      allOf:
                                                        - type: integer
                                                          minimum: 0
                                                    volume:
                                                      description: Merchant-authorized percentage on non-cash transactions.
                                                      allOf:
                                                        - description: Percentage value up to 2 decimal places.
                                                          title: percentage
                                                          type: number
                                                          format: double
                                                          minimum: 0
                                                          maximum: 100
                                                          example: 1.25
                                                    pinDebit:
                                                      type: object
                                                      description: Object that contains the fees for PIN-debit transactions.
                                                      required: *ref_44
                                                      properties: *ref_45
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      description: Object that contains the fees for EBT transactions.
                                                      required: *ref_46
                                                      properties: *ref_47
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - monthlySubscription
                                                    - volume
                                              required: &ref_305
                                                - planType
                                                - fees
                                            - type: object
                                              title: RewardPayChoice Plan
                                              description: Object that contains information about RewardPayChoice.
                                              properties: &ref_306
                                                planType:
                                                  description: Type of processing plan.
                                                  type: string
                                                  enum:
                                                    - rewardPayChoice
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    monthlySubscription:
                                                      description: Fee for the monthly subscription for the processing plan. The value is in the currency's lowest denomination, for example, cents.
                                                      allOf:
                                                        - type: integer
                                                          minimum: 0
                                                    debit:
                                                      description: Object that contains information about fees for debit transactions.
                                                      properties:
                                                        option:
                                                          description: Indicates if debit transactions should be charged at interchange plus or flat rate pricing.
                                                          type: string
                                                          enum:
                                                            - interchangePlus
                                                            - flatRate
                                                        volume:
                                                          description: Percentage of the total transaction that the processor charges the merchant.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                      required:
                                                        - volume
                                                        - transaction
                                                    credit:
                                                      type: object
                                                      description: Object that contains information about fees for credit transactions.
                                                      properties:
                                                        tips:
                                                          description: Indicates how the merchant manages tips.
                                                          type: string
                                                          enum:
                                                            - noTips
                                                            - prompt
                                                            - tipAdjust
                                                        cardChargePercentage:
                                                          description: Percentage of the total transaction amount that the processor charges the cardholder.
                                                          type: number
                                                          readOnly: true
                                                          default: 3
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        merchantChargePercentage:
                                                          description: Percentage of the total transaction amount that the processor charges the merchant.
                                                          type: number
                                                          readOnly: true
                                                          default: 0.9
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        merchantChargePerTransaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    specialityCards:
                                                      type: object
                                                      description: Object that contains the fees for speciality cards.
                                                      required: *ref_50
                                                      properties: *ref_51
                                                  required:
                                                    - monthlySubscription
                                                    - debit
                                                    - credit
                                              required: &ref_307
                                                - planType
                                                - fees
                                        ach:
                                          type: object
                                          description: Object that contains the fees for ACH transactions.
                                          properties: &ref_308
                                            fees:
                                              description: Object that contains processing fees for ACH transactions.
                                              type: object
                                              properties:
                                                transaction:
                                                  description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 50
                                                batch:
                                                  description: Fee for each batch. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 1000
                                                returns:
                                                  description: Fee for each return. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 400
                                                unauthorizedReturn:
                                                  description: Fee for each unauthorized return. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 1999
                                                statement:
                                                  description: Fee for each statement. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 800
                                                monthlyMinimum:
                                                  description: Minimum monthly value of transactions. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 20000
                                                accountVerification:
                                                  description: Fee for each account verification. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 100
                                                discountRateUnder10000:
                                                  description: Percentage discount for ACH transfers less than $10,000.
                                                  allOf:
                                                    - description: Percentage value up to 2 decimal places.
                                                      title: percentage
                                                      type: number
                                                      format: double
                                                      minimum: 0
                                                      maximum: 100
                                                      example: 1.25
                                                discountRateAbove10000:
                                                  description: Percentage discount for ACH transfers equal to or more than $10,000.
                                                  allOf:
                                                    - description: Percentage value up to 2 decimal places.
                                                      title: percentage
                                                      type: number
                                                      format: double
                                                      minimum: 0
                                                      maximum: 100
                                                      example: 1.25
                                              required:
                                                - transaction
                                                - batch
                                                - returns
                                                - unauthorizedReturn
                                                - statement
                                                - monthlyMinimum
                                                - accountVerification
                                                - discountRateUnder10000
                                                - discountRateAbove10000
                                    gateway:
                                      type: object
                                      description: Object that contains information about the gateway fees for MPA 5.0.
                                      title: gateway fees
                                      properties: &ref_557
                                        fees:
                                          type: object
                                          description: Object that contains information about the gateway fees.
                                          properties:
                                            monthly:
                                              description: Monthly fee for the gateway. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            setup:
                                              description: Fee for setting up your account with the gateway. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            perTransaction:
                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            perDeviceMonthly:
                                              description: Monthly fee for each device. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                          required:
                                            - monthly
                                            - setup
                                            - perTransaction
                                            - perDeviceMonthly
                                      required: &ref_558
                                        - fees
                                    services:
                                      title: US version 5.0 services array
                                      description: Object that contains information about our additional services that the merchant can sign up for.
                                      type: array
                                      items: &ref_563
                                        title: US version 5.0 service
                                        type: object
                                        description: Object that contains information about the Hardware Advantage Plan.
                                        discriminator: &ref_561
                                          propertyName: name
                                          mapping:
                                            hardwareAdvantagePlan: '#/components/schemas/hardwareAdvantagePlan'
                                        oneOf: &ref_562
                                          - type: object
                                            description: Object that contains information about the Hardware Advantage Plan.
                                            properties: &ref_559
                                              name:
                                                type: string
                                                description: Name of the service.
                                                enum:
                                                  - hardwareAdvantagePlan
                                                example: hardwareAdvantagePlan
                                              enabled:
                                                description: Indicates if the merchant has signed up for the Hardware Advantage Plan.
                                                type: boolean
                                                default: true
                                                example: true
                                            required: &ref_560
                                              - name
                                              - enabled
                                      uniqueItems: true
              examples:
                paginatedResults:
                  summary: Paginated pricing intent
                  description: Example of a paginated pricing intent.
                  value: &ref_824
                    limit: 1
                    count: 1
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/pricing-intents?before=5&limit=1
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/pricing-intents?after=5&limit=1
                    data:
                      - id: '5'
                        createdDate: '2024-07-02T09:00:00'
                        lastUpdatedDate: '2024-07-02T09:00:00'
                        status: pendingReview
                        key: base
                        country: US
                        version: '5.0'
                        base:
                          addressVerification: 5
                          annualFee:
                            billInMonth: june
                            amount: 100
                          regulatoryAssistanceProgram: 15
                          pciNonCompliance: 4995
                          merchantAdvantage: 10
                          platinumSecurity:
                            billingFrequency: monthly
                            amount: 1295
                          maintenance: 500
                          minimum: 100
                          voiceAuthorization: 95
                          chargeback: 2500
                          retrieval: 1500
                          batch: 1000
                          earlyTermination: 57500
                        processor:
                          card:
                            planType: interchangePlus
                            fees:
                              mastercardVisaDiscover:
                                volume: 1.25
                                transaction: 5
                              amex:
                                type: optBlue
                                volume: 1.25
                                transaction: 10
                              pinDebit:
                                additionalDiscount: 1.25
                                transaction: 10
                                monthlyAccess: 1200
                              electronicBenefitsTransfer:
                                transaction: 10
                              enhancedInterchange:
                                enrollment: 1000
                                creditToMerchant: 5.25
                              specialityCards:
                                transaction: 10
                          ach:
                            fees:
                              transaction: 50
                              batch: 1000
                              returns: 400
                              unauthorizedReturn: 1999
                              statement: 800
                              monthlyMinimum: 20000
                              accountVerification: 100
                              discountRateUnder10000: 5.25
                              discountRateAbove10000: 10
                        gateway:
                          fees:
                            monthly: 1000
                            setup: 25000
                            perTransaction: 0
                            perDeviceMonthly: 0
                        services:
                          - name: hardwareAdvantagePlan
                            enabled: true
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '500':
          description: An error has occured
          content: *ref_14
    post:
      summary: Create pricing intent
      description: "Use this method to create a pricing intent that you can assign to a processing account.  \n\nIn the request, you must provide the following:\n-\tProcessing fees, including the pricing program and the fee to process each transaction.\n-\tGateway fees, including the fee for each transaction handled by our gateway.\n-\tBase fees, including maintenance and PCI fees.\n\nIn the response, our gateway returns information about the pricing intent and the pricingIntentId, which you need for the following methods:\n-\t[Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) - Assign the pricing intent to a processing account, when you create the merchant platform and its processing accounts.\n-\t[Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) - Assign the pricing intent to a processing account.\n-\t[Retrieve Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/retrieve) - Retrieve information about a pricing intent.\n-\t[Update Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/update) - Update the details of a pricing intent. \n-\t[Delete Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/delete) - Delete a pricing intent.\n-\t[Partially Update Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/partially-update) - Partially update the details of a pricing intent.\n"
      tags:
        - Pricing intents
      operationId: createPricingIntent
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: pricing intent
              description: Object that contains information about a pricing intent.
              oneOf: *ref_56
            examples:
              interchangePlus:
                summary: Interchange Plus
                description: Create a pricing intent.
                value: &ref_825
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: interchangePlus
                      fees:
                        mastercardVisaDiscover:
                          volume: 0.12
                          transaction: 0
                        amex:
                          type: optBlue
                          volume: 0.12
                          transaction: 0
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              interchangePlusTiered3:
                summary: Interchange Plus Plus
                description: Create a pricing intent.
                value: &ref_826
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: interchangePlusPlus
                      fees:
                        mastercardVisaDiscover:
                          qualifiedRate:
                            volume: 0.35
                            transaction: 10
                          midQualRate:
                            volume: 0.35
                            transaction: 10
                          nonQualRate:
                            volume: 0.35
                            transaction: 10
                        amex:
                          type: optBlue
                          qualifiedRate:
                            volume: 0.5
                            transaction: 10
                          midQualRate:
                            volume: 0.75
                            transaction: 10
                          nonQualRate:
                            volume: 0.75
                            transaction: 10
                        pinDebit:
                          additionalDiscount: 1.25
                          transaction: 10
                          monthlyAccess: 1200
                        electronicBenefitsTransfer:
                          transaction: 10
                        enhancedInterchange:
                          enrollment: 1000
                          creditToMerchant: 50
                        specialityCards:
                          transaction: 10
                    ach:
                      fees:
                        transaction: 50
                        batch: 5
                        returns: 400
                        unauthorizedReturn: 500
                        statement: 250
                        monthlyMinimum: 500
                        accountVerification: 10
                        discountRateUnder10000: 0.5
                        discountRateAbove10000: 1
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              tiered3:
                summary: Tiered 3
                description: Create a pricing intent.
                value: &ref_827
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: tiered3
                      fees:
                        mastercardVisaDiscover:
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                        amex:
                          type: optBlue
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                    ach:
                      fees:
                        transaction: 50
                        batch: 5
                        returns: 400
                        unauthorizedReturn: 500
                        statement: 250
                        monthlyMinimum: 500
                        accountVerification: 10
                        discountRateUnder10000: 0.5
                        discountRateAbove10000: 1
                  gateway:
                    fees:
                      monthly: 2000
                      setup: 5000
                      perTransaction: 2000
                      perDeviceMonthly: 10
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              tiered4:
                summary: Tiered 4
                description: Create a pricing intent.
                value: &ref_828
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: tiered4
                      fees:
                        mastercardVisaDiscover:
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                          premiumRate:
                            volume: 3.84
                            transaction: 0
                        amex:
                          type: optBlue
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                    ach:
                      fees:
                        transaction: 50
                        batch: 5
                        returns: 400
                        unauthorizedReturn: 500
                        statement: 250
                        monthlyMinimum: 500
                        accountVerification: 10
                        discountRateUnder10000: 0.5
                        discountRateAbove10000: 1
                  gateway:
                    fees:
                      monthly: 2000
                      setup: 5000
                      perTransaction: 2000
                      perDeviceMonthly: 10
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              tiered6:
                summary: Tiered 6
                description: Create a pricing intent.
                value: &ref_829
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: tiered6
                      fees:
                        mastercardVisaDiscover:
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                          premiumRate:
                            volume: 1.9
                            transaction: 5
                          regulatedCheckCard:
                            volume: 1.25
                            transaction: 5
                          unregulatedCheckCard:
                            volume: 1.45
                            transaction: 5
                        amex:
                          type: optBlue
                          qualifiedRate:
                            volume: 1.39
                            transaction: 0
                          midQualRate:
                            volume: 1.75
                            transaction: 0
                          nonQualRate:
                            volume: 3.84
                            transaction: 0
                    ach:
                      fees:
                        transaction: 50
                        batch: 5
                        returns: 400
                        unauthorizedReturn: 500
                        statement: 250
                        monthlyMinimum: 500
                        accountVerification: 10
                        discountRateUnder10000: 0.5
                        discountRateAbove10000: 1
                  gateway:
                    fees:
                      monthly: 2000
                      setup: 5000
                      perTransaction: 2000
                      perDeviceMonthly: 10
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              flatRate:
                summary: Flat Rate
                description: Create a pricing intent.
                value: &ref_830
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 0
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 0
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: flatRate
                      fees:
                        standardCards:
                          volume: 2.89
                          transaction: 25
                        pinDebit:
                          additionalDiscount: 1.25
                          transaction: 25
                          monthlyAccess: 1200
                        electronicBenefitsTransfer:
                          transaction: 25
                        specialityCards:
                          transaction: 25
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              consumerChoice:
                summary: Consumer Choice
                description: Create a pricing intent.
                value: &ref_831
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: consumerChoice
                      fees:
                        monthlySubscription: 2500
                        volume: 3.5
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
              rewardPayChoice:
                summary: Reward Pay Choice
                description: Create a pricing intent.
                value: &ref_832
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: rewardPayChoice
                      fees:
                        monthlySubscription: 5000
                        debit:
                          option: interchangePlus
                          volume: 0
                          transaction: 10
                        credit:
                          tips: noTips
                          cardChargePercentage: 3
                          merchantChargePercentage: 0
                          merchantChargePerTransaction: 10
                        specialityCards:
                          transaction: 10
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
      responses:
        '201':
          description: Successful response. We created the pricing intent and it is waiting for approval.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_56
              examples:
                createdPricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: &ref_57
                    id: '5'
                    createdDate: '2024-07-02T09:00:00'
                    lastUpdatedDate: '2024-07-02T09:00:00'
                    status: pendingReview
                    key: string
                    metadata:
                      yourCustomField: abc123
                    country: US
                    version: '5.0'
                    base:
                      addressVerification: 5
                      annualFee:
                        billInMonth: june
                        amount: 100
                      regulatoryAssistanceProgram: 15
                      pciNonCompliance: 4995
                      merchantAdvantage: 10
                      platinumSecurity:
                        billingFrequency: monthly
                        amount: 1295
                      maintenance: 500
                      minimum: 100
                      voiceAuthorization: 95
                      chargeback: 2500
                      retrieval: 1500
                      batch: 1000
                      earlyTermination: 57500
                    processor:
                      card:
                        planType: interchangePlus
                        fees:
                          mastercardVisaDiscover:
                            volume: 1.25
                            transaction: 5
                          amex:
                            type: optBlue
                            volume: 1.25
                            transaction: 10
                          pinDebit:
                            additionalDiscount: 1.25
                            transaction: 10
                            monthlyAccess: 1200
                          electronicBenefitsTransfer:
                            transaction: 10
                          enhancedInterchange:
                            enrollment: 1000
                            creditToMerchant: 5.25
                          specialityCards:
                            transaction: 10
                      ach:
                        fees:
                          transaction: 50
                          batch: 1000
                          returns: 400
                          unauthorizedReturn: 1999
                          statement: 800
                          monthlyMinimum: 20000
                          accountVerification: 100
                          discountRateUnder10000: 5.25
                          discountRateAbove10000: 10
                    gateway:
                      fees:
                        monthly: 1000
                        setup: 25000
                        perTransaction: 0
                        perDeviceMonthly: 0
                    services:
                      - name: hardwareAdvantagePlan
                        enabled: true
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
  /pricing-intents/{pricingIntentId}:
    summary: Provides create/read/updated/delete capabilities for specific pricing intents
    parameters:
      - in: path
        name: pricingIntentId
        required: true
        description: Unique identifier that we assigned to the pricing intent.
        schema: &ref_327
          type: string
        examples: &ref_328
          example:
            value: '5'
    get:
      summary: Retrieve pricing intent
      description: |
        Use this method to retrieve information about a pricing intent.  

        To retrieve a pricing intent, you need its pricingIntentId. Our gateway returned the pricingIntentId in the response of the [Create Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/create) method.  

        **Note:** If you don't have the pricingIntentId, use our [List Pricing Intents](https://docs.payroc.com/api/schema/boarding/pricing-intents/list) method to search for the pricing intent.  

        Our gateway returns the following information about the pricing intent:  

        - Information about the fees, including the base fees, gateway fees, and processor fees.  
        - Status of the pricing intent, including whether we approved the pricing intent.  
      operationId: getPricingIntent
      tags:
        - Pricing intents
      responses:
        '200':
          description: Successful response. Returns the requested pricing intent.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_56
              examples:
                pricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: *ref_57
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    put:
      summary: Update pricing intent
      description: |
        Use this method to update the details of a pricing intent. If you update a pricing intent, it won't affect merchant that you've previously onboarded.  

        To update a pricing intent, you need its pricingIntentId. Our gateway returned the pricingIntentId in the response of the [Create Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/create) method.  

        **Note:** If you don't have the pricingIntentId, use our [List Pricing Intents](https://docs.payroc.com/api/schema/boarding/pricing-intents/list) method to search for the pricing intent.  

        You can update the following details about a pricing intent:  

        - Fees, including the base fees, processor fees, and gateway fees.  
        - Custom name for the pricing intent.  
        - Additional services that merchants can sign up for.  
      operationId: updatePricingIntent
      tags:
        - Pricing intents
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: pricing intent
              description: Object that contains information about a pricing intent.
              oneOf: *ref_56
            examples:
              pricingIntent:
                summary: Create pricing intent
                description: Create a pricing intent.
                value: &ref_833
                  key: Your-Unique-Identifier
                  metadata:
                    yourCustomField: abc123
                  country: US
                  version: '5.0'
                  base:
                    addressVerification: 5
                    annualFee:
                      billInMonth: june
                      amount: 9900
                    regulatoryAssistanceProgram: 15
                    pciNonCompliance: 4995
                    merchantAdvantage: 10
                    platinumSecurity:
                      billingFrequency: monthly
                    maintenance: 500
                    minimum: 100
                    voiceAuthorization: 95
                    chargeback: 2500
                    retrieval: 1500
                    batch: 1500
                    earlyTermination: 57500
                  processor:
                    card:
                      planType: interchangePlus
                      fees:
                        mastercardVisaDiscover:
                          volume: 1.25
                          transaction: 5
                        amex:
                          type: optBlue
                          volume: 1.25
                          transaction: 5
                        pinDebit:
                          additionalDiscount: 1.25
                          transaction: 10
                          monthlyAccess: 1200
                        electronicBenefitsTransfer:
                          transaction: 10
                        enhancedInterchange:
                          enrollment: 1000
                          creditToMerchant: 5.25
                        specialityCards:
                          transaction: 10
                    ach:
                      fees:
                        transaction: 50
                        batch: 5
                        returns: 400
                        unauthorizedReturn: 1999
                        statement: 800
                        monthlyMinimum: 20000
                        accountVerification: 10
                        discountRateUnder10000: 5.25
                        discountRateAbove10000: 10
                  gateway:
                    fees:
                      monthly: 2000
                      setup: 5000
                      perTransaction: 2000
                      perDeviceMonthly: 10
                  services:
                    - name: hardwareAdvantagePlan
                      enabled: true
      responses:
        '204':
          description: Resource successfully updated
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      summary: Partially update pricing intent
      description: |
        Use this method to partially update a pricing intent. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.  

        If you update a pricing intent, it won't affect merchants you've previously onboarded.  

        To update a pricing intent, you need its pricingIntentId. Our gateway returned the pricingIntentId in the response of the [Create Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/create) method.  

        **Note:** If you don't have the pricingIntentId, use our [List Pricing Intents](https://docs.payroc.com/api/schema/boarding/pricing-intents/list) method to search for the pricing intent.  

        You can update the following details about a pricing intent:  

        - Fees, including the base fees, processor fees, and gateway fees.  
        - Custom name for the pricing intent.  
        - Additional services that merchants can sign up for.  
      operationId: patchPricingIntent
      tags:
        - Pricing intents
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: &ref_100
                title: Patch Operation
                description: A JSON Patch operation as defined by RFC 6902.
                discriminator: &ref_578
                  propertyName: op
                  mapping:
                    add: '#/components/schemas/patchAdd'
                    remove: '#/components/schemas/patchRemove'
                    replace: '#/components/schemas/patchReplace'
                    move: '#/components/schemas/patchMove'
                    copy: '#/components/schemas/patchCopy'
                    test: '#/components/schemas/patchTest'
                oneOf: &ref_579
                  - type: object
                    title: Patch Add Operation
                    description: A Patch Add Operation.
                    required: &ref_566
                      - op
                      - path
                      - value
                    properties: &ref_567
                      op:
                        type: string
                        enum:
                          - add
                        description: '`add` operation.'
                      path:
                        type: string
                        description: |
                          Location where you want to add the value.
                          The format for this value is JSON Pointer.
                      value:
                        description: Value that you want to add to the resource.
                  - type: object
                    title: Patch Remove Operation
                    description: A Patch Remove Operation.
                    required: &ref_568
                      - op
                      - path
                    properties: &ref_569
                      op:
                        type: string
                        enum:
                          - remove
                        description: '`remove` operation.'
                      path:
                        type: string
                        description: |
                          Location of the value that you want to remove.
                          The format for this value is JSON Pointer.
                  - type: object
                    title: Patch Replace Operation
                    description: A Patch Replace Operation.
                    required: &ref_570
                      - op
                      - path
                      - value
                    properties: &ref_571
                      op:
                        type: string
                        enum:
                          - replace
                        description: '`replace` operation.'
                      path:
                        type: string
                        description: |
                          Location of the value that you want to replace.
                          The format for this value is JSON Pointer.
                      value:
                        description: Value that you want to use as the replacement.
                  - type: object
                    title: Patch Move Operation
                    description: A Patch Move Operation.
                    required: &ref_572
                      - op
                      - from
                      - path
                    properties: &ref_573
                      op:
                        type: string
                        enum:
                          - move
                        description: '`move` operation.'
                      from:
                        type: string
                        description: |
                          Location of the value that you want to move.
                          The format for this value is JSON Pointer.
                      path:
                        type: string
                        description: |
                          Location where you want to move the value to.
                          The format for this value is JSON Pointer.
                  - type: object
                    title: Patch Copy Operation
                    description: A Patch Copy Operation.
                    required: &ref_574
                      - op
                      - from
                      - path
                    properties: &ref_575
                      op:
                        type: string
                        enum:
                          - copy
                        description: '`copy` operation.'
                      from:
                        type: string
                        description: |
                          Location of the value that you want to copy.
                          The format for this value is JSON Pointer.
                      path:
                        type: string
                        description: |
                          Location where you want to copy the value to.
                          The format for this value is JSON Pointer.
                  - type: object
                    title: Patch Test Operation
                    description: A Patch Test Operation.
                    required: &ref_576
                      - op
                      - path
                      - value
                    properties: &ref_577
                      op:
                        type: string
                        enum:
                          - test
                        description: '`test` operation.'
                      path:
                        type: string
                        description: |
                          Location of the value that you want to test.
                          The format for this value is JSON Pointer.
                      value:
                        description: Value that you want to compare with the current value at the path.
              example: &ref_101
                - op: add
                  path: /a/b/c
                  value:
                    - dog
                    - cat
                - op: remove
                  path: /a/b/c
                - op: replace
                  path: /a/b/c
                  value: 42
                - op: move
                  from: /a/b/c
                  path: /a/b/d
                - op: copy
                  from: /a/b/d
                  path: /a/b/e
                - op: test
                  path: /a/b/c
                  value: dog
            examples:
              patchPricingIntentRealistic:
                summary: Partially update pricing intent
                description: |
                  Partially update an existing pricing intent.

                  Structure your request to follow the RFC 6902 standard.
                value: &ref_834
                  - op: replace
                    path: /processor/card/fees/mastercardVisaDiscover/volume
                    value: 1.5
                  - op: replace
                    path: /gateway/fees/additionalServiceMonthly
                    value: 16
                  - op: replace
                    path: /base/addressVerification
                    value: 6
              patchOperations:
                summary: Example patch operations that apply the RFC 6902 standard
                description: |
                  Example patch operations that apply the RFC 6902 standard.
                value: &ref_102
                  - op: add
                    path: /a/b/c
                    value:
                      - 123
                      - 456
                  - op: remove
                    path: /a/b/c
                  - op: replace
                    path: /a/b/c
                    value: 789
                  - op: move
                    from: /a/b/c
                    path: /a/b/d
                  - op: copy
                    from: /a/b/d
                    path: /a/b/e
                  - op: test
                    path: /a/b/c
                    value: 123
      responses:
        '200':
          description: Successful request. We updated the pricing intent.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_56
              examples:
                pricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: *ref_57
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      summary: Delete pricing intent
      description: |
        Use this method to delete a pricing intent.  

        > **Important:** When you delete a pricing intent, you can't recover it. You also won't be able to assign the pricing intent to a merchant's boarding application.  

        To delete a pricing intent, you need its pricingIntentId. Our gateway returned the pricingIntentId in the response of the [Create Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/create) method.  

        **Note:** If you don't have the pricingIntentId, use our [List Pricing Intents](https://docs.payroc.com/api/schema/boarding/pricing-intents/list) method to search for the pricing intent.
      operationId: deletePricingIntent
      tags:
        - Pricing intents
      responses:
        '204':
          description: Successful request. We deleted the pricing intent.
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /funding-instructions:
    post:
      tags:
        - Funding instructions
      summary: Create funding instruction
      description: Create funding instructions to tell us how to divide funds between your funding recipients.
      operationId: createInstruction
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Inform the payfac what to do with the specified funds. **
              title: funding instruction
              properties: &ref_58
                instructionId:
                  type: integer
                  description: Unique identifier of the funding instruction.
                  example: 64643131
                  readOnly: true
                createdDate:
                  type: string
                  description: Date that we created the funding instruction.
                  format: datetime
                  example: '2024-07-02T15:30:00Z'
                  readOnly: true
                lastModifiedDate:
                  type: string
                  description: Date of the most recent change to the funding instruction.
                  format: datetime
                  example: '2024-07-02T15:30:00Z'
                  readOnly: true
                status:
                  type: string
                  description: Status of the funding instruction.
                  enum:
                    - accepted
                    - pending
                    - completed
                  readOnly: true
                  example: accepted
                merchants:
                  type: array
                  description: Array of merchantInstruction objects.
                  items:
                    type: object
                    title: merchant instruction
                    description: Instruction indicating which recipients should receive funding from the specific merchant balance.
                    properties:
                      merchantId:
                        type: string
                        description: Unique identifier of the merchant.
                        example: '4525644354'
                      recipients:
                        type: array
                        description: Array of target fundingAccount objects.
                        minItems: 1
                        items:
                          type: object
                          title: target funding account
                          description: Object that contains information about the target funding account.
                          required:
                            - fundingAccountId
                            - paymentMethod
                            - amount
                          properties:
                            fundingAccountId:
                              type: integer
                              description: Unique identifier of the funding account that we pay the funds into.
                              example: 123
                            paymentMethod:
                              type: string
                              description: Method of payment.
                              enum:
                                - ACH
                              example: ACH
                            amount:
                              type: object
                              description: Object that contains details about the funds.
                              required:
                                - value
                              properties:
                                value:
                                  type: number
                                  description: Value of funds in the currency's lowest denomination, for example, cents.
                                  example: 120000
                                currency:
                                  description: Currency of the values. The default value is USD.
                                  type: string
                                  default: USD
                                  enum:
                                    - USD
                                  example: USD
                            status:
                              readOnly: true
                              type: string
                              description: Status of the funding instruction.
                              enum:
                                - accepted
                                - pending
                                - released
                                - funded
                                - failed
                                - rejected
                                - onHold
                              example: accepted
                            metadata:
                              type: object
                              additionalProperties:
                                type: string
                              description: '[Metadata](https://docs.payroc.com/api/metadata) object you can use to include custom data with your request.'
                              example:
                                yourCustomField: abc123
                            link:
                              readOnly: true
                              description: Array of HATEOAS links for viewing a funding account.
                              type: object
                              properties:
                                rel:
                                  type: string
                                  example: fundingAccount
                                method:
                                  type: string
                                  example: get
                                href:
                                  type: string
                                  example: https://api.payroc.com/v1/funding-accounts/123
                      link:
                        readOnly: true
                        description: Array of HATEOAS links to view the merchant.
                        type: object
                        properties:
                          rel:
                            type: string
                            example: merchant
                          method:
                            type: string
                            example: get
                          href:
                            type: string
                            example: https://api.payroc.com/v1/merchants/4525644354
                    required:
                      - merchantId
                      - recipients
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: '[Metadata](https://docs.payroc.com/api/metadata) object you can use to include custom data with your request.'
                  example:
                    yourCustomField: abc123
      responses:
        '201':
          description: Successful request. We accepted the instructions.
          content:
            application/json:
              schema:
                type: object
                description: Inform the payfac what to do with the specified funds. **
                title: funding instruction
                properties: *ref_58
              examples:
                newInstructions:
                  summary: New instruction accepted.
                  value: &ref_839
                    instructionId: 64643131
                    createdDate: '2024-07-02T15:30:00Z'
                    lastModifiedDate: '2024-07-02T15:30:00Z'
                    status: accepted
                    merchants:
                      - merchantId: '4525644354'
                        recipients:
                          - status: accepted
                            fundingAccountId: 123
                            paymentMethod: ACH
                            amount:
                              value: 120000
                              currency: USD
                            metadata:
                              yourCustomField: abc123
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/123
                        link:
                          rel: merchant
                          method: get
                          href: https://api.payroc.com/v1/merchants/4525644354
                    metadata:
                      instructionRef: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                insufficientFunds:
                  summary: Insufficient funds
                  description: You do not have enough funds to complete the request.
                  value: &ref_59
                    type: https://docs.payroc.com/api/errors#insufficient-funds
                    title: Insufficient funds
                    status: 400
                    detail: You do not have the required funds to complete this transaction
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                fundingAccountsRestrcited:
                  summary: Funding accounts restricted
                  description: Funding accounts restricted.
                  value: &ref_61
                    type: https://docs.payroc.com/api/errors#funding-accounts-restricted
                    title: Funding accounts restricted
                    status: 400
                    detail: One or more funding accounts are restricted and can't receive funding instructions
                    errors:
                      - parameter: fundingAccountId
                        message: Funding account on hold
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Funding instructions
      summary: List funding instructions
      description: Retrieve a list of funding instructions for a specific date range.
      operationId: listInstructions
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: dateFrom
          in: query
          description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
          required: true
          schema: &ref_329
            type: string
            format: date
          examples: &ref_330
            example:
              value: '2024-07-01'
        - name: dateTo
          in: query
          required: true
          description: Retrieve activity that occured before `dateTo`.
          schema:
            type: string
            format: date
          examples:
            example:
              value: '2024-07-03'
      responses:
        '200':
          description: Successful request. Returns a list of funding instructions.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of fundingInstruction objects.
                        items:
                          allOf:
                            - type: object
                              description: Inform the payfac what to do with the specified funds. **
                              title: funding instruction
                              properties: *ref_58
                            - type: object
                              properties:
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                    required:
                      - data
              examples:
                listSplitsExample:
                  summary: Paginated instructions list
                  value: &ref_835
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-instructions?before=64643131&limit=2&datefrom=2024-07-01&dateto=2024-07-03
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-instructions?after=64643132&limit=2&datefrom=2024-07-01&dateto=2024-07-03
                    data:
                      - instructionId: 64643131
                        createdDate: '2024-07-02T15:30:00Z'
                        lastModifiedDate: '2024-07-02T15:30:00Z'
                        status: completed
                        merchants:
                          - merchantId: '4525644354'
                            recipients:
                              - status: funded
                                fundingAccountId: 123
                                paymentMethod: ACH
                                amount:
                                  value: 120000
                                  currency: USD
                                metadata:
                                  yourCustomField: abc123
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/123
                              - status: rejected
                                fundingAccountId: 124
                                paymentMethod: ACH
                                amount:
                                  value: 50050
                                  currency: USD
                                metadata:
                                  yourCustomField: abc123
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/124
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/4525644354
                        metadata:
                          yourCustomField: abc123
                        link:
                          rel: fundingInstruction
                          method: get
                          href: https://api.payroc.com/v1/funding-instructions/64643131
                      - instructionId: 64643132
                        createdDate: '2024-07-02T15:30:00Z'
                        lastModifiedDate: '2024-07-02T15:30:00Z'
                        status: accepted
                        merchants:
                          - merchantId: '4525644354'
                            recipients:
                              - status: accepted
                                fundingAccountId: 123
                                paymentMethod: ACH
                                amount:
                                  value: 5000
                                  currency: USD
                                metadata:
                                  yourCustomField: abc123
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/123
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/4525644354
                          - merchantId: '4525644354'
                            recipients:
                              - status: accepted
                                fundingAccountId: 124
                                paymentMethod: ACH
                                amount:
                                  value: 1000
                                  currency: USD
                                metadata:
                                  yourCustomField: abc123
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/124
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/4525644354
                        metadata:
                          yourCustomField: abc123
                        link:
                          rel: fundingInstruction
                          method: get
                          href: https://api.payroc.com/v1/funding-instructions/64643132
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: &ref_836
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: Expected date, got \"abc\"
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value:
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
                outsideRecordRange:
                  summary: Bad request
                  description: Requested data outside allowed range.
                  value:
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: datefrom cannot be longer than two years ago.
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /funding-instructions/{instructionId}:
    parameters:
      - name: instructionId
        in: path
        required: true
        description: Unique identifier of the funding instruction.
        schema: &ref_333
          type: integer
        examples: &ref_334
          example:
            value: 64643131
    get:
      tags:
        - Funding instructions
      summary: Retrieve funding instruction
      operationId: getInstruction
      description: Retrieve a specific funding instruction.
      responses:
        '200':
          description: Successful request. Returns the requested funding instruction.
          content:
            application/json:
              schema:
                type: object
                description: Inform the payfac what to do with the specified funds. **
                title: funding instruction
                properties: *ref_58
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: &ref_60
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: instructionId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Funding instructions
      summary: Update funding instruction
      operationId: updateInstructions
      description: Update an existing funding instruction.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Inform the payfac what to do with the specified funds. **
              title: funding instruction
              properties: *ref_58
      responses:
        '204':
          description: Successful request. We updated the funding instruction.
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                insufficientFunds:
                  summary: Insufficient funds
                  description: You do not have enough funds to complete the request.
                  value: *ref_59
                canNotBeModified:
                  summary: Cannot be modified
                  description: Resource cannot be modified.
                  value: &ref_62
                    type: https://docs.payroc.com/api/errors#cannot-be-modified
                    title: Cannot be modified
                    status: 409
                    detail: You cannot modify this resource in its current state
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: *ref_60
                fundingAccountsRestrcited:
                  summary: Funding accounts restricted
                  description: Funding accounts restricted.
                  value: *ref_61
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      summary: Delete funding instruction
      description: Delete an existing funding instruction.
      operationId: deleteInstructions
      tags:
        - Funding instructions
      responses:
        '204':
          description: Successful request. We deleted the funding instruction.
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                canNotBeModified:
                  summary: Cannot be modified
                  description: Resource cannot be modified.
                  value: *ref_62
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: *ref_60
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /funding-balance:
    get:
      tags:
        - Funding activity
      summary: Retrieve funding balance
      operationId: getFundingBalance
      description: Retrieve the balance of funds that are available for each merchant.
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: &ref_63
            type: string
          examples: &ref_64
            example:
              value: '4525644354'
      responses:
        '200':
          description: Successful request. Returns the balance available for each merchant.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of merchantBalance objects.
                        items:
                          type: object
                          description: Object that contains information about the total funds available to the merchant.
                          title: merchant balance
                          properties: &ref_580
                            merchantId:
                              type: string
                              description: Unique Identifier of the merchant.
                              example: '4525644354'
                            funds:
                              type: integer
                              description: Value of funds in the currency's lowest denomination, for example, cents.
                              example: 120000
                            pending:
                              type: number
                              description: Value of funds that we have not yet sent to funding recipients. We return this value in the currency's lowest denomination, for example, cents.
                              example: 50050
                            available:
                              type: number
                              description: Value of funds available for funding instructions. We return this value in the currency's lowest denomination, for example, cents.
                              example: 69950
                            currency:
                              type: string
                              description: Currency of the values. The default value is USD.
                              example: USD
                    required:
                      - data
              examples:
                listSplitsExample:
                  summary: Paginated list of merchant balances
                  description: Paginated list of merchant balances.
                  value: &ref_840
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-balance?before=4525644354&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-balance?after=9876543219&limit=2
                    data:
                      - merchantId: '4525644354'
                        funds: 120000
                        pending: 50050
                        available: 69950
                        currency: USD
                      - merchantId: '9876543219'
                        funds: 50000
                        pending: 0
                        available: 50000
                        currency: USD
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value:
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /funding-activity:
    get:
      tags:
        - Funding activity
      summary: List funding activity
      description: Retrieve funding activity for a specific date range.
      operationId: getFundingActivity
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: dateFrom
          in: query
          description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
          required: true
          schema: &ref_335
            type: string
            format: date
          examples: &ref_336
            example:
              value: '2024-07-02'
        - name: dateTo
          in: query
          required: true
          description: Retrieve activity that occured before `dateTo`.
          schema: &ref_331
            type: string
            format: date
          examples: &ref_332
            example:
              value: '2024-07-03'
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns all available funding activity for the date range.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of activityRecord objects.
                        items:
                          type: object
                          description: Array of activityRecord objects.
                          title: activity record
                          properties: &ref_581
                            id:
                              type: integer
                              description: Unique identifier of the activity record.
                              example: 12345
                            date:
                              type: string
                              format: datetime
                              example: '2024-07-02T15:30:00Z'
                              description: Date of the transaction.
                            merchant:
                              type: string
                              description: Name of the merchant that the activity applies to.
                              example: Pizza Doe
                            recipient:
                              type: string
                              description: Recipient of the debit.
                              example: Pizza Doe
                            description:
                              type: string
                              example: payment
                              description: Description of the activity.
                            amount:
                              type: number
                              example: 4999
                              description: Total fund amount of the transaction. This is returned in the lowest unit of currency.
                            type:
                              type: string
                              description: Payment type.
                              enum:
                                - credit
                                - debit
                              example: credit
                            currency:
                              type: string
                              description: Currency of all values.
                              example: USD
                          required: &ref_582
                            - id
                            - date
                            - merchant
                            - description
                            - amount
                            - type
                            - currency
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated activity records
                  description: Valid payfac account with activity for date range.
                  value: &ref_841
                    limit: 10
                    count: 10
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-activity?before=11&limit=10&datefrom=2024-07-01&dateto=2024-07-03
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-activity?after=20&limit=10&datefrom=2024-07-01&dateto=2024-07-03
                    data:
                      - id: 11
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        description: sales
                        type: credit
                        amount: 4999
                        currency: USD
                      - id: 12
                        date: '2024-07-02T19:32:00.000Z'
                        merchant: Pizza Doe
                        description: sales
                        type: credit
                        amount: 3999
                        currency: USD
                      - id: 13
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        description: sales
                        type: credit
                        amount: 3299
                        currency: USD
                      - id: 14
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        recipient: Payroc
                        description: Interchange Fees
                        type: debit
                        amount: 50
                        currency: USD
                      - id: 15
                        date: '2024-07-02T09:10:00.000Z'
                        merchant: Pizza Doe
                        description: sales
                        type: credit
                        amount: 4999
                        currency: USD
                      - id: 16
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Doe Hot Dogs
                        description: Adjustment
                        type: credit
                        amount: 750
                        currency: USD
                      - id: 17
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Doe Hot Dogs
                        recipient: Payroc
                        description: Interchange Fees
                        type: debit
                        amount: 5
                        currency: USD
                      - id: 18
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        recipient: Payroc
                        description: Charge back
                        type: debit
                        amount: 1000
                        currency: USD
                      - id: 19
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        description: sales
                        type: credit
                        amount: 5999
                        currency: USD
                      - id: 20
                        date: '2024-07-02T17:00:00.000Z'
                        merchant: Pizza Doe
                        recipient: Pizza Doe
                        description: payment
                        type: debit
                        amount: 1000
                        currency: USD
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: &ref_842
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info.
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: Expected date, got "abc"
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value: &ref_837
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
                outsideRecordRange:
                  summary: Bad request
                  description: Requested data outside allowed range.
                  value: &ref_838
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: datefrom cannot be longer than two years ago.
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /batches:
    get:
      tags:
        - Settlement
      summary: List batches
      description: "Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of your merchants’ batches that were submitted to the processor on a specific date.  \n\n**Note:** If you want to view a specific batch and you have its batchId, use our [Retrieve Batch](https://docs.payroc.com/api/schema/reporting/settlement/retrieve-batch) method.  \n\nIn your request, include the date that the batch was submitted. You can also use a query parameter to view the batches of a specific merchant.  \n\nOur gateway returns the following information about each batch in the list:  \n\n-\tTransaction information, including the number of transactions and total value of sales.\n-\tMerchant information, including the merchant ID (MID) and the processing account that the batch is associated with. \n"
      operationId: getbatches
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Filter batches by the date that they were submitted. The format of this value is **YYYY-MM-DD**.
          schema: &ref_337
            type: string
            format: date
          examples: &ref_338
            example:
              value: '2027-07-02'
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of batches.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of batch objects.
                        items:
                          type: object
                          title: batch
                          properties: &ref_65
                            batchId:
                              type: integer
                              description: Unique identifier that we assigned to the batch.
                              example: 123
                            date:
                              type: string
                              format: date
                              description: Date that the merchant submitted the batch. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            createdDate:
                              type: string
                              format: date
                              description: Date that we created a record for the batch. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            lastModifiedDate:
                              type: string
                              format: date
                              description: Date that the batch was last changed. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            saleAmount:
                              type: integer
                              description: Total value of sales in the batch. We return the value in the currency's lowest denomination, for example, cents.
                            heldAmount:
                              type: integer
                              description: Total value of authorizations in the batch. We return the value in the currency's lowest denomination, for example, cents.
                            returnAmount:
                              type: integer
                              description: Total value of returns in the batch. We return the value in the currency's lowest denomination, for example, cents.
                            transactionCount:
                              type: integer
                              description: Total number of transactions in the batch.
                            currency:
                              type: string
                              description: Currency of the transactions in the batch. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: &ref_67
                                merchantId:
                                  type: string
                                  description: Unique identifier that the processor assigned to the merchant.
                                  example: '4525644354'
                                doingBusinessAs:
                                  type: string
                                  description: Trading name of the business.
                                  example: Pizza Doe
                                processingAccountId:
                                  type: string
                                  description: Unique identifier that we assigned to the processing account.
                                  example: '38765'
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                              example: &ref_68
                                merchantId: '4525644354'
                                doingBusinessAs: Pizza Doe
                                processingAccountId: '38765'
                                link:
                                  rel: processingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/processing-accounts/38765
                            links:
                              type: array
                              items:
                                type: object
                                readOnly: true
                                description: Object that contains HATEOAS links for the resource.
                                properties: *ref_4
                                required: *ref_5
                                example: *ref_6
                              example:
                                - rel: transactions
                                  method: get
                                  href: https://api.payroc.com/v1/transactions?batchId=123
                                - rel: authorizations
                                  method: get
                                  href: https://api.payroc.com/v1/authorizations?batchId=123
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated batches
                  value: &ref_843
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/batches?before=65&limit=2&date=2024-07-02
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/batches?after=66&limit=2&&date=2024-07-02
                    data:
                      - batchId: 65
                        date: '2024-07-02'
                        createdDate: '2024-07-02'
                        lastModifiedDate: '2024-07-02'
                        saleAmount: 100
                        heldAmount: 0
                        returnAmount: 0
                        transactionCount: 10
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        links:
                          - rel: transactions
                            method: get
                            href: https://api.payroc.com/v1/transactions?batchId=65
                          - rel: authorizations
                            method: get
                            href: https://api.payroc.com/v1/authorizations?batchId=65
                      - batchId: 66
                        date: '2024-07-02'
                        createdDate: '2024-07-02'
                        lastModifiedDate: '2024-07-02'
                        saleAmount: 76
                        heldAmount: 0
                        returnAmount: 12
                        transactionCount: 10
                        currency: USD
                        merchant:
                          merchantId: '9876543219'
                          doingBusinessAs: Joe Bloggs Shoes
                          processingAccountId: '68437'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/68437
                        links:
                          - rel: transactions
                            method: get
                            href: https://api.payroc.com/v1/transactions?batchId=66
                          - rel: authorizations
                            method: get
                            href: https://api.payroc.com/v1/authorizations?batchId=66
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_69
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: date
                        detail: invalid date
                        message: Expected date, got "abc"
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_70
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
                idError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_66
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: batchId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /batches/{batchId}:
    get:
      tags:
        - Settlement
      summary: Retrieve batch
      description: "Use this method to retrieve information about a batch.  \n\n**Note:** To retrieve a batch, you need its batchId. If you don't have the batchId, use our [List Batches](https://docs.payroc.com/api/schema/reporting/settlement/list-batches) method to search for the batch.  \n\nOur gateway returns the following information about the batch:  \n\n-\tTransaction information, including the number of transactions and total value of sales.  \n-\tMerchant information, including the merchant ID (MID) and the processing account that the batch is associated with.  \n"
      operationId: getbatch
      parameters:
        - name: batchId
          in: path
          required: true
          description: Unique identifier that we assigned to the batch.
          style: simple
          schema: &ref_339
            type: integer
          examples: &ref_340
            example:
              value: 12345
      responses:
        '200':
          description: Successful request. Returns the requested batch.
          content:
            application/json:
              schema:
                type: object
                title: batch
                properties: *ref_65
              example:
                summary: Retrieved batch
                value:
                  batchId: 65
                  date: '2024-07-02'
                  createdDate: '2024-07-02'
                  lastModifiedDate: '2024-07-02'
                  saleAmount: 100
                  heldAmount: 0
                  returnAmount: 0
                  transactionCount: 10
                  currency: USD
                  merchant:
                    merchantId: '4525644354'
                    doingBusinessAs: Pizza Doe
                    processingAccountId: '38765'
                    link:
                      rel: processingAccount
                      method: get
                      href: https://api.payroc.com/v1/processing-accounts/38765
                  links:
                    - rel: transactions
                      method: get
                      href: https://api.payroc.com/v1/transactions?batchId=65
                    - rel: authorizations
                      method: get
                      href: https://api.payroc.com/v1/authorizations?batchId=65
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                idError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_66
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /transactions:
    get:
      tags:
        - Settlement
      summary: List transactions
      description: Retrieve a list of transactions.
      operationId: getTransactions
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Date to retrieve results from. The format of this value is **YYYY-MM-DD**. You must provide either the 'batchId' or the 'date'.
          schema: &ref_72
            type: string
            format: date
          examples: &ref_73
            example:
              value: '2024-07-01'
        - name: batchId
          in: query
          required: true
          description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
          schema: &ref_74
            type: integer
          examples: &ref_75
            example:
              value: 12345
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
        - name: transactionType
          in: query
          description: Type of transaction.
          schema: &ref_341
            type: string
            enum:
              - Capture
              - Return
          examples: &ref_342
            example:
              value: Capture
      responses:
        '200':
          description: Successful request. Returns a paginated list of transactions.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of transaction objects.
                        items:
                          type: object
                          title: transaction
                          description: Object that contains information about the transaction.
                          properties: &ref_71
                            transactionId:
                              type:
                                - integer
                                - 'null'
                              description: Unique identifier of the transaction. If we can't match a dispute to a transaction, we don't return 'transactionID' or a 'link' object.
                              example: 442233
                            type:
                              type: string
                              description: Indicates the type of transaction.
                              enum:
                                - capture
                                - return
                              example: capture
                            date:
                              type: string
                              format: date
                              description: Date of the transaction. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            amount:
                              type: integer
                              description: Transaction amount. We return the value in the currency's lowest denomination, for example, cents.
                              example: 4999
                            entryMethod:
                              type:
                                - string
                                - 'null'
                              description: Describes how the merchant received the payment details. If we can't match a dispute to a transaction, we don't return an 'entryMethod' object.
                              enum:
                                - barcodeRead
                                - smartChipRead
                                - swipedOriginUnknown
                                - contactlessChip
                                - ecommerce
                                - manuallyEntered
                                - manuallyEnteredFallback
                                - swiped
                                - swipedFallback
                                - swipedError
                                - scannedCheckReader
                                - credentialOnFile
                                - unknown
                              example: contactlessChip
                            createdDate:
                              type: string
                              format: date
                              description: Date that we received the transaction.  The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            lastModifiedDate:
                              type: string
                              format: date
                              description: Date that the transaction was last changed.  The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            status:
                              type: string
                              description: Indicates the status of the transaction.
                              enum:
                                - fullSuspense
                                - heldAudited
                                - heldReleasedAudited
                                - holdForSettlement30Days
                                - holdForSettlementDuplicate
                                - holdLongTerm
                                - paid
                                - paidByThirdParty
                                - partialRelease
                                - pull
                                - release
                                - new
                                - held
                                - unknown
                              example: paid
                            cashbackAmount:
                              type: integer
                              description: Cashback amount. We return the value in the currency's lowest denomination, for example, cents.
                              example: 0
                            interchange:
                              type: object
                              description: Object that contains information about the interchange fees for the transaction.
                              properties:
                                basisPoint:
                                  type: integer
                                  description: Interchange basis points that we apply to the transaction.
                                  example: 150
                                transactionFee:
                                  type: integer
                                  description: Interchange fee for the transaction. We return the value in the currency's lowest denomination, for example, cents.
                                  example: 50
                            currency:
                              type: string
                              description: Currency of the transaction.
                              example: USD
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_67
                              example: *ref_68
                            settled:
                              type: object
                              title: settlement summary
                              description: Object that contains information about the settlement.
                              properties: &ref_583
                                settledBy:
                                  type: string
                                  description: Processor that settled the transaction.
                                  example: Payroc
                                achDate:
                                  type: string
                                  format: date
                                  description: Date that the processor settled the transaction. The format of this value is **YYYY-MM-DD**.
                                  example: '2024-07-02'
                                achDepositId:
                                  type: integer
                                  description: Unique identifier of the ACH deposit.
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                              example: &ref_584
                                settledBy: 3rd party
                                achDate: '2024-07-02'
                                achDepositId: 99
                                link:
                                  rel: achDeposit
                                  method: get
                                  href: https://api.payroc.com/v1/ach-deposits/99?merchantId=4525644354
                            batch:
                              type: &ref_76
                                - object
                                - 'null'
                              title: batch summary
                              description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
                              properties: &ref_77
                                batchId:
                                  type: integer
                                  description: Unique identifier of the batch.
                                  example: 1234
                                date:
                                  type: string
                                  format: date
                                  description: Date that the merchant submitted the batch.
                                  example: '2024-07-02'
                                cycle:
                                  type: string
                                  description: Indicates the cycle that contains the batch.
                                  example: am
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: &ref_78
                                cardNumber:
                                  type: string
                                  description: Masked card number. Our gateway shows only the first six digits and the last four digits of the card number, for example, `500165******0000`.
                                  example: 453985******7062
                                type:
                                  type:
                                    - string
                                    - 'null'
                                  description: |
                                    Card type, for example, Visa.  

                                    **Note:** If we can’t match a dispute to a transaction, we don’t return a type object. 
                                  enum:
                                    - visa
                                    - masterCard
                                    - discover
                                    - debit
                                    - ebt
                                    - wrightExpress
                                    - voyager
                                    - amex
                                    - privateLabel
                                    - storedValue
                                    - discoverRetained
                                    - jcbNonSettled
                                    - dinersClub
                                    - amexOptBlue
                                    - fuelman
                                    - unknown
                                cvvPresenceIndicator:
                                  type: boolean
                                  description: Indicates whether the cardholder provided the Card Verification Value (CVV).
                                avsRequest:
                                  type: boolean
                                  description: Indicates whether the merchant used the Address Verification Service (AVS) to verify the cardholder's address.
                                avsResponse:
                                  type: string
                                  description: Response from the Address Verification Service (AVS).
                            authorization:
                              type: object
                              title: authorization summary
                              description: Object that contains information about the authorization.
                              properties: &ref_585
                                authorizationId:
                                  type: integer
                                  description: Unique identifier of the authorization.
                                  example: 303101
                                code:
                                  type: string
                                  description: |
                                    Authorization code.  

                                    **Note:** For returns, the card brands may not provide an authorization code.
                                  example: A1B2C3
                                amount:
                                  type: integer
                                  description: Authorization amount. We return the value in the currency's lowest denomination, for example, cents.
                                  example: 4999
                                avsResponseCode:
                                  type: string
                                  description: Response code that indicates if the address matches the address registered to the customer.
                                  example: 'Y'
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated transactions
                  value: &ref_844
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/transctions?before=442233&limit=2&date=2024-07-02
                    data:
                      - transactionId: 442233
                        type: capture
                        date: '2024-07-02'
                        amount: 4999
                        entryMethod: ecommerce
                        createdDate: '2024-07-02'
                        lastModifiedDate: '2024-07-02'
                        status: paid
                        cashbackAmount: 0
                        interchange:
                          basisPoint: 0
                          transactionFee: 0
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        settled:
                          settledBy: 3rd party
                          achDate: '2024-07-02'
                          achDepositId: 99
                          link:
                            rel: achDeposit
                            method: get
                            href: https://api.payroc.com/v1/ach-deposits/99
                        batch:
                          batchId: 12
                          date: '2024-07-02'
                          cycle: am
                          link:
                            rel: batch
                            method: get
                            href: https://api.payroc.com/v1/batches/12
                        card:
                          cardNumber: 453985******7062
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: ''
                        authorization:
                          authorizationId: 303101
                          code: A1B2C3
                          amount: 4999
                          avsResponseCode: ''
                          link:
                            rel: authorization
                            method: get
                            href: https://api.payroc.com/v1/authorizations/303101
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_70
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /transactions/{transactionId}:
    get:
      tags:
        - Settlement
      summary: Retrieve transaction
      description: Retrieve a specific transaction.
      operationId: gettransaction
      parameters:
        - name: transactionId
          description: Unique identifier of the transaction.
          in: path
          required: true
          schema: &ref_343
            type: integer
          examples: &ref_344
            example:
              value: 442233
      responses:
        '200':
          description: Successful request. Returns the requested transaction.
          content:
            application/json:
              schema:
                type: object
                title: transaction
                description: Object that contains information about the transaction.
                properties: *ref_71
              example:
                summary: Retrieve transaction
                value:
                  transactionId: 442233
                  type: capture
                  date: '2024-07-02'
                  amount: 4999
                  entryMethod: ecommerce
                  createdDate: '2024-07-02'
                  lastModifiedDate: '2024-07-02'
                  status: paid
                  cashbackAmount: 0
                  interchange:
                    basisPoint: 0
                    transactionFee: 0
                  currency: USD
                  merchant:
                    merchantId: '4525644354'
                    doingBusinessAs: Pizza Doe
                    processingAccountId: '38765'
                    link:
                      rel: processingAccount
                      method: get
                      href: https://api.payroc.com/v1/processing-accounts/38765
                  settled:
                    settledBy: 3rd party
                    achDate: '2024-07-02'
                    achDepositId: 99
                    link:
                      rel: achDeposit
                      method: get
                      href: https://api.payroc.com/v1/ach-deposits/99
                  batch:
                    batchId: 12
                    date: '2024-07-02'
                    cycle: am
                    link:
                      rel: batch
                      method: get
                      href: https://api.payroc.com/v1/batches/12
                  card:
                    cardNumber: 453985******7062
                    type: visa
                    cvvPresenceIndicator: true
                    avsRequest: true
                    avsResponse: ''
                  authorization:
                    authorizationId: 303101
                    code: A1B2C3
                    amount: 4999
                    avsResponseCode: ''
                    link:
                      rel: authorization
                      method: get
                      href: https://api.payroc.com/v1/authorizations/303101
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                transactionIdError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_845
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: transactionId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /authorizations:
    get:
      tags:
        - Settlement
      summary: List authorizations
      description: Retrieve a list of authorizations.
      operationId: getAuthorizations
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Date to retrieve results from. The format of this value is **YYYY-MM-DD**. You must provide either the 'batchId' or the 'date'.
          schema: *ref_72
          examples: *ref_73
        - name: batchId
          in: query
          required: true
          description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
          schema: *ref_74
          examples: *ref_75
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of authorizations.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of authorization objects.
                        items:
                          type: object
                          title: authorization
                          description: Object that contains information about the authorization.
                          properties: &ref_79
                            authorizationId:
                              type: integer
                              description: Unique identifier of the authorization.
                              example: 12345
                            createdDate:
                              type: string
                              format: date
                              description: Date that we received the authorization. The format of this value is **YYYY-MM-DD**.
                              example: '2024-01-30'
                            lastModifiedDate:
                              type: string
                              format: date
                              description: Date that the authorization was last changed. The format of this value is **YYYY-MM-DD**.
                              example: '2024-01-30'
                            authorizationResponse:
                              type: string
                              description: Code that indicates the response for the authorization.
                              enum:
                                - activityCountLimitExceeded
                                - alreadyReversed
                                - approved
                                - approveVip
                                - approveWithId
                                - cannotVerifyPin
                                - cardAuthenticationFailed
                                - cardTypeVerificationError
                                - cashRequestExceedsIssuerLimit
                                - cashServiceNotAvailable
                                - cidVerificationError
                                - contactCardIssuer
                                - cryptographicFailure
                                - dailyThresholdExceeded
                                - declineCvv2Failure
                                - deny
                                - denyAccountCanceled
                                - denyClosedMerchant
                                - denyNewCardIssued
                                - denyPickUpCard
                                - destinationCannotBeFoundForRouting
                                - doNotHonor
                                - duplicateTransmissionDetected
                                - error
                                - exceedsWithdrawalAmountLimit
                                - expiredCard
                                - fileTemporarilyUnavailable
                                - forceStip
                                - formatError
                                - forwardToIssuer
                                - functionNotSupported
                                - honorWithId
                                - incorrectCvv
                                - incorrectPin
                                - ineligibleForResubmission
                                - insufficientFunds
                                - invalidAccount
                                - invalidAccountNumber
                                - invalidAmount
                                - invalidAuthorizationLifeCycle
                                - invalidBillerInformation
                                - invalidCardSecurityCode
                                - invalidCurrencyCode
                                - invalidMerchant
                                - invalidResponse
                                - invalidTransaction
                                - issuerNotAvailable
                                - issuerTimeout
                                - issuerUnavailable
                                - noActionTaken
                                - noCardRecord
                                - noCheckingAccount
                                - noCreditAccount
                                - noFinancialImpact
                                - noReasonToDecline
                                - noSavingsAccount
                                - noSuchIssuer
                                - partialApproval
                                - partialAuthorization
                                - pickUpCard
                                - pickUpCardSpecialCondition
                                - pinChangeRequestDeclined
                                - pinCryptographicErrorFound
                                - pinEntryTriesExceeded
                                - pinNotChanged
                                - pleaseCallIssuer
                                - reenterTransaction
                                - referToCardIssuer
                                - referToCardIssuerSpecialCondition
                                - restrictedCard
                                - reversal
                                - reversalDataInconsistent
                                - revokeAllAuthorizationsOrder
                                - scheduledTransactionstoppedByCardholder
                                - securityViolation
                                - successful
                                - surchargeAmountNotPermitted
                                - suspectFraud
                                - systemMalfunction
                                - transactionAmountExceedsApprovalAmount
                                - transactionCannotBeCompleted
                                - transactionNotAllowedAtMerchant
                                - transactionNotAllowedAtTerminal
                                - transactionNotPermitted
                                - transactionNotPermittedToCardholder
                                - unableToGoOnline
                                - unableToLocateRecordInFile
                                - unableToVerifyPin
                                - unacceptablePin
                                - unknown
                                - unsafePin
                            preauthorizationRequestAmount:
                              type: integer
                              description: Amount that the merchant requested for the authorization. We return the value in the currency's lowest denomination, for example, cents.
                              example: 10000
                            currency:
                              type: string
                              description: Currency of the authorization.
                            batch:
                              type: *ref_76
                              title: batch summary
                              description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
                              properties: *ref_77
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: *ref_78
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_67
                              example: *ref_68
                            transaction:
                              type: object
                              title: transaction summary
                              description: Object that contains summary information about the transaction that the dispute is linked to.
                              properties: &ref_80
                                transactionId:
                                  type:
                                    - integer
                                    - 'null'
                                  description: Unique identifier of the transaction. If we can't match a dispute to a transaction, we don't return the transactionId or link object.
                                  example: 12345
                                type:
                                  type: string
                                  description: Indicates the type of transaction.
                                  enum:
                                    - capture
                                    - return
                                date:
                                  type: string
                                  format: date
                                  description: Date of the transaction. The format of this value is **YYYY-MM-DD**.
                                  example: '2024-07-02'
                                entryMethod:
                                  type:
                                    - string
                                    - 'null'
                                  description: Describes how the merchant received the payment details. If we can't match a dispute to a transaction, we don't return an entryMethod object.
                                  enum:
                                    - barcodeRead
                                    - smartChipRead
                                    - swipedOriginUnknown
                                    - contactlessChip
                                    - ecommerce
                                    - manuallyEntered
                                    - manuallyEnteredFallback
                                    - swiped
                                    - swipedFallback
                                    - swipedError
                                    - scannedCheckReader
                                    - credentialOnFile
                                    - unknown
                                amount:
                                  type: integer
                                  description: Total amount of the transaction. The value is in the currency's lowest denomination, for example, cents.
                                  example: 25000
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated authorizations
                  value: &ref_846
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/authorizations?before=65&limit=2&date=2024-07-02
                    data:
                      - authorizationId: 65
                        createdDate: '2024-07-02'
                        lastModifiedDate: '2024-07-02'
                        authorizationResponse: successful
                        preauthorizationRequestAmount: 10000
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        batch:
                          batchId: 12
                          date: '2024-07-02'
                          cycle: am
                          link:
                            rel: batch
                            method: get
                            href: https://api.payroc.com/v1/batches/12
                        card:
                          cardNumber: 12456**********4124
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: 'Y'
                        transaction:
                          transactionId: 12345
                          type: capture
                          date: '2024-07-02'
                          entryMethod: swiped
                          amount: 100
                          link:
                            rel: transaction
                            method: get
                            href: https://api.payroc.com/v1/transactions/12345
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_70
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /authorizations/{authorizationId}:
    get:
      tags:
        - Settlement
      summary: Retrieve authorization
      description: Retrieve a specific authorization.
      operationId: getAuthorization
      parameters:
        - name: authorizationId
          description: Unique identifier of the authorization.
          in: path
          required: true
          schema: &ref_345
            type: integer
          examples: &ref_346
            example:
              value: 12345
      responses:
        '200':
          description: Successful request. Returns the requested authorization.
          content:
            application/json:
              schema:
                type: object
                title: authorization
                description: Object that contains information about the authorization.
                properties: *ref_79
              example:
                summary: Retrieve authorization
                value:
                  authorizationId: 65
                  createdDate: '2024-07-02'
                  lastModifiedDate: '2024-07-02'
                  authorizationResponse: successful
                  preauthorizationRequestAmount: 10000
                  currency: USD
                  merchant:
                    merchantId: '4525644354'
                    doingBusinessAs: Pizza Doe
                    processingAccountId: '38765'
                    link:
                      rel: processingAccount
                      method: get
                      href: https://api.payroc.com/v1/processing-accounts/38765
                  batch:
                    batchId: 12
                    date: '2024-07-02'
                    cycle: am
                    link:
                      rel: batch
                      method: get
                      href: https://api.payroc.com/v1/batches/12
                  card:
                    cardNumber: 453985******7062
                    type: visa
                    cvvPresenceIndicator: true
                    avsRequest: true
                    avsResponse: 'Y'
                  transaction:
                    transactionId: 442233
                    type: capture
                    date: '2024-07-02'
                    entryMethod: swiped
                    amount: 100
                    link:
                      rel: transaction
                      method: get
                      href: https://api.payroc.com/v1/transactions/12345
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /disputes:
    get:
      tags:
        - Settlement
      summary: List disputes
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of disputes.  

        Use query parameters to filter the list of results that we return, for example, to search for disputes linked to a specific merchant.  

        > **Important:** You must provide a value for the date query parameter.  

        Our gateway returns the following information about each dispute in the list:  
        - Its status, type, and description.  
        - Transaction that the dispute is linked to, including the transaction date, merchant who ran the transaction, and the payment method that the cardholder used.  
      operationId: getdisputes
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Filter results by the date that the dispute was submitted.
          schema: &ref_347
            type: string
            format: date
          examples: &ref_348
            example:
              value: '2024-07-02'
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of disputes.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of dispute objects.
                        items:
                          type: object
                          title: dispute
                          description: Object that contains information about the dispute.
                          properties: &ref_586
                            disputeId:
                              type: integer
                              description: Unique identifier that we assigned to the dispute.
                              example: 12345
                            disputeType:
                              type: string
                              description: Type of dispute.
                              enum:
                                - prearbitration
                                - issuerReversal
                                - firstDisputeWithReversal
                                - firstDispute
                            currentStatus:
                              description: Object that contains information about the current status of the dispute.
                              allOf:
                                - type: object
                                  title: dispute status
                                  description: Object that contains information about the current status of the dispute.
                                  properties: &ref_81
                                    disputeStatusId:
                                      type: integer
                                      description: Unique identifier that we assigned to the status of the dispute.
                                      example: 12345
                                    status:
                                      type: string
                                      description: |
                                        Status of the dispute.  

                                        **Note:** If you want to view the status history of the dispute, use our [List Dispute Statuses](https://docs.payroc.com/api/schema/reporting/settlement/list-disputes-statuses) method.  
                                      enum:
                                        - prearbitrationInProcess
                                        - prearbitrationAccepted
                                        - prearbitrationDeclined
                                        - arbitrationFiledWithCardBand
                                        - arbitrationFundsToBeReturned
                                        - arbitrationLost
                                        - arbitrationSettledPartialAmount
                                        - precomplianceInProcess
                                        - precomplianceAccepted
                                        - precomplianceDeclined
                                        - complianceFiledWithCardBand
                                        - complianceLost
                                        - complianceSettledPartialAmount
                                        - invalid
                                        - issuerReversal
                                        - new
                                        - rejected
                                        - representmentInProgress
                                        - representmentFailed
                                        - representmentPaid
                                        - representmentReceived
                                        - stand
                                    statusDate:
                                      type: string
                                      format: date
                                      description: Date that the status of the dispute was last changed. The format of this value is **YYYY-MM-DD**.
                                      example: '2024-02-01'
                                - type: object
                                  properties:
                                    link:
                                      type: object
                                      readOnly: true
                                      description: Object that contains HATEOAS links for the resource.
                                      properties: *ref_4
                                      required: *ref_5
                                      example: *ref_6
                            createdDate:
                              type: string
                              format: date
                              description: Date that we received the dispute. The format of this value is **YYYY-MM-DD**.
                              example: '2024-02-20'
                            lastModifiedDate:
                              type: string
                              format: date
                              description: Date that the dispute was last changed. The format of this value is **YYYY-MM-DD**.
                              example: '2024-02-25'
                            receivedDate:
                              type: string
                              format: date
                              description: Date that the acquiring bank received the dispute. The format of this value is **YYYY-MM-DD**.
                              example: '2024-02-18'
                            description:
                              type: string
                              description: Description of the dispute.
                            referenceNumber:
                              type: string
                              description: Reference number from the acquiring bank.
                            disputeAmount:
                              type: integer
                              description: Dispute amount. We return the value in the currency's lowest denomination, for example, cents.
                            feeAmount:
                              type: integer
                              description: Value of the fees for the dispute. We return the value in the currency's lowest denomination, for example, cents.
                            firstDispute:
                              type: boolean
                              description: Indicates if this is the first dispute for the transaction.
                              example: true
                            authorizationCode:
                              type: string
                              description: Authorization code of the transaction that the dispute is linked to.
                            currency:
                              type: string
                              description: Currency of the transaction that the dispute is linked to. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: *ref_78
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_67
                              example: *ref_68
                            transaction:
                              type: object
                              title: transaction summary
                              description: Object that contains summary information about the transaction that the dispute is linked to.
                              properties: *ref_80
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated disputes
                  value: &ref_847
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/disputes?before=65&limit=2&date=2024-07-02
                    data:
                      - disputeId: 65
                        disputeType: firstDispute
                        currentStatus:
                          disputeStatusId: 123
                          status: new
                          statusDate: '2024-07-02'
                          link:
                            rel: statuses
                            method: get
                            href: https://api.payroc.com/v1/disputes/65/statuses
                        createdDate: '2024-07-02'
                        lastModifiedDate: '2024-07-02'
                        receivedDate: '2024-07-02'
                        description: ''
                        referenceNumber: '35435435'
                        disputeAmount: 1000
                        feeAmount: 100
                        firstDispute: true
                        authorizationCode: '574254'
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        card:
                          cardNumber: 12456**********4124
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: ''
                        transaction:
                          transactionId: 12345
                          type: capture
                          date: '2024-07-02'
                          entryMethod: swiped
                          amount: 100
                          link:
                            rel: transaction
                            method: get
                            href: https://api.payroc.com/v1/transactions/12345
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_70
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /disputes/{disputeId}/statuses:
    get:
      tags:
        - Settlement
      summary: List dispute statuses
      description: |
        Use this method to return the status history of a dispute.  

        To return the status history of a dispute, you need its disputeId. If you don't have the disputeId, use our [List Disputes](https://docs.payroc.com/api/schema/reporting/settlement/list-disputes) method to search for the dispute. 

        Our gateway returns a list that contains each status change, the date it was changed, and its updated status.  
      operationId: getdisputesStatuses
      parameters:
        - name: disputeId
          description: Unique identifier of the dispute.
          in: path
          required: true
          schema: &ref_349
            type: integer
          examples: &ref_350
            example:
              value: 12345
      responses:
        '200':
          description: Successful request. Returns the status history for a specific dispute.
          content:
            application/json:
              schema:
                type: array
                description: Collection of status
                items:
                  type: object
                  title: dispute status
                  description: Object that contains information about the current status of the dispute.
                  properties: *ref_81
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/payment-links:
    post:
      tags:
        - Payment links
      summary: Create payment link
      description: |
        Use this method to create a payment link that a customer can use to make a payment for goods or services.  

        The request includes the following settings:
        - **type** - Indicates whether the link can be used only once or if it can be used multiple times.
        - **authType** - Indicates whether the transaction is a sale or a pre-authorization.
        - **paymentMethod** - Indicates the payment methods that the merchant accepts.
        - **charge** - Indicates whether the merchant or the customer enters the amount for the transaction.  

        If your request is successful, our gateway returns a paymentLinkId, which you can use to perform follow-on actions.  

        **Note:** To share the payment link with a customer, use our [Share Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/sharing-events/share) method.
      operationId: createPaymentLink
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: &ref_95
            maxLength: 50
            minLength: 4
            type: string
          examples: &ref_96
            example:
              value: '1234001'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - required: &ref_91
                    - type
                    - order
                    - authType
                    - paymentMethods
                    - merchantReference
                  type: object
                  title: Multi-use link
                  description: Object that contains information about a multi-use payment link.
                  properties: &ref_92
                    type:
                      type: string
                      description: |
                        Type of link. The merchant can use a multi-use link to take multiple payments.
                      enum:
                        - multiUse
                      example: multiUse
                    paymentLinkId:
                      type: string
                      minLength: 10
                      maxLength: 10
                      readOnly: true
                      description: Unique identifier that we assigned to the payment link.
                      example: JZURRJBUPS
                    merchantReference:
                      type: string
                      minLength: 1
                      maxLength: 48
                      description: Unique identifier that the merchant assigned to the payment.
                      example: LinkRef6543
                    order:
                      required: &ref_587
                        - charge
                      type: object
                      description: Object that contains information about the order.
                      properties: &ref_588
                        description:
                          type: string
                          maxLength: 1024
                          description: A brief description of the transaction.
                          example: Pie It Forward charitable trust donation
                        charge:
                          type: object
                          description: Indicates whether the merchant or the customer enters the amount for the transaction.
                          oneOf:
                            - required: &ref_83
                                - type
                                - currency
                              type: object
                              title: Prompt amount
                              description: Object that contains information about the charge when the customer enters the amount of the transaction.
                              properties: &ref_84
                                type:
                                  type: string
                                  enum:
                                    - prompt
                                  example: prompt
                                currency:
                                  example: USD
                                  type: string
                                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                                  enum: &ref_82
                                    - AED
                                    - AFN
                                    - ALL
                                    - AMD
                                    - ANG
                                    - AOA
                                    - ARS
                                    - AUD
                                    - AWG
                                    - AZN
                                    - BAM
                                    - BBD
                                    - BDT
                                    - BGN
                                    - BHD
                                    - BIF
                                    - BMD
                                    - BND
                                    - BOB
                                    - BOV
                                    - BRL
                                    - BSD
                                    - BTN
                                    - BWP
                                    - BYR
                                    - BZD
                                    - CAD
                                    - CDF
                                    - CHE
                                    - CHF
                                    - CHW
                                    - CLF
                                    - CLP
                                    - CNY
                                    - COP
                                    - COU
                                    - CRC
                                    - CUC
                                    - CUP
                                    - CVE
                                    - CZK
                                    - DJF
                                    - DKK
                                    - DOP
                                    - DZD
                                    - EGP
                                    - ERN
                                    - ETB
                                    - EUR
                                    - FJD
                                    - FKP
                                    - GBP
                                    - GEL
                                    - GHS
                                    - GIP
                                    - GMD
                                    - GNF
                                    - GTQ
                                    - GYD
                                    - HKD
                                    - HNL
                                    - HRK
                                    - HTG
                                    - HUF
                                    - IDR
                                    - ILS
                                    - INR
                                    - IQD
                                    - IRR
                                    - ISK
                                    - JMD
                                    - JOD
                                    - JPY
                                    - KES
                                    - KGS
                                    - KHR
                                    - KMF
                                    - KPW
                                    - KRW
                                    - KWD
                                    - KYD
                                    - KZT
                                    - LAK
                                    - LBP
                                    - LKR
                                    - LRD
                                    - LSL
                                    - LTL
                                    - LVL
                                    - LYD
                                    - MAD
                                    - MDL
                                    - MGA
                                    - MKD
                                    - MMK
                                    - MNT
                                    - MOP
                                    - MRO
                                    - MRU
                                    - MUR
                                    - MVR
                                    - MWK
                                    - MXN
                                    - MXV
                                    - MYR
                                    - MZN
                                    - NAD
                                    - NGN
                                    - NIO
                                    - NOK
                                    - NPR
                                    - NZD
                                    - OMR
                                    - PAB
                                    - PEN
                                    - PGK
                                    - PHP
                                    - PKR
                                    - PLN
                                    - PYG
                                    - QAR
                                    - RON
                                    - RSD
                                    - RUB
                                    - RWF
                                    - SAR
                                    - SBD
                                    - SCR
                                    - SDG
                                    - SEK
                                    - SGD
                                    - SHP
                                    - SLL
                                    - SOS
                                    - SRD
                                    - SSP
                                    - STD
                                    - STN
                                    - SVC
                                    - SYP
                                    - SZL
                                    - THB
                                    - TJS
                                    - TMT
                                    - TND
                                    - TOP
                                    - TRY
                                    - TTD
                                    - TWD
                                    - TZS
                                    - UAH
                                    - UGX
                                    - USD
                                    - USN
                                    - USS
                                    - UYI
                                    - UYU
                                    - UZS
                                    - VEF
                                    - VES
                                    - VND
                                    - VUV
                                    - WST
                                    - XAF
                                    - XCD
                                    - XOF
                                    - XPF
                                    - YER
                                    - ZAR
                                    - ZMW
                                    - ZWL
                            - required: &ref_85
                                - type
                                - amount
                                - currency
                              type: object
                              title: Preset amount
                              description: Object that contains information about the charge when the merchant enters the amount of the transaction.
                              properties: &ref_86
                                type:
                                  type: string
                                  enum:
                                    - preset
                                  example: preset
                                amount:
                                  type: integer
                                  format: int64
                                  description: Total amount of the transaction. The value is in the currency's lowest denomination, for example, cents.
                                  example: 4999
                                currency:
                                  example: USD
                                  type: string
                                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                                  enum: *ref_82
                    authType:
                      type: string
                      description: Type of transaction.
                      enum:
                        - sale
                        - preAuthorization
                      example: sale
                    paymentMethods:
                      type: array
                      uniqueItems: true
                      description: |
                        Payment methods that the merchant accepts.  
                        **Note:** If a payment is a pre-authorization, the customer must pay by card.
                      items:
                        type: string
                        enum:
                          - card
                          - bankTransfer
                      example:
                        - card
                    customLabels:
                      type: array
                      uniqueItems: true
                      description: |
                        Array of customLabel objects.  
                        **Note:** You can change the label of the payment button only.
                      items:
                        type: object
                        description: Object that contains the information for the custom label.
                        properties: &ref_87
                          element:
                            type: string
                            description: Element that you want to provide a custom label for.
                            enum:
                              - paymentButton
                            example: paymentButton
                          label:
                            type: string
                            minLength: 1
                            maxLength: 24
                            description: Custom label to display on the element.
                            example: SUPPORT US
                    assets:
                      required: &ref_88
                        - paymentUrl
                        - paymentButton
                      type: object
                      readOnly: true
                      description: Object that contains shareable assets for the payment link.
                      properties: &ref_89
                        paymentUrl:
                          type: string
                          description: URL of the payment link.
                          example: https://payments.payroc.com/merchant/pay-by-link?token=7c2fc08c-cb0e-44ba-8bcd-cf6de6eb3206
                        paymentButton:
                          type: string
                          format: html
                          description: HTML code for the payment link. You can embed the HTML code in the merchant's website.
                          example: |
                            <a href="https://payments.payroc.com/merchant/pay-by-link?token=7c2fc08c-cb0e-44ba-8bcd-cf6de6eb3206" 
                            target="_blank" style="color: #ffffff; background-color: #6C7A89; font-size: 18px; font-family: Helvetica, Arial, sans-serif; 
                            text-decoration: none; border-radius: 30px; padding: 14px 28px; display: inline-block;">Pay Now</a>
                    status:
                      type: string
                      readOnly: true
                      description: |
                        Status of the payment link. The value is one of the following:
                        - `active` - Payment link is active.
                        - `completed` - Customer has paid.
                        - `deactivated` - Merchant has deactivated the link.
                        - `expired` - Payment link has expired.
                      enum:
                        - active
                        - completed
                        - deactivated
                        - expired
                      example: active
                    createdOn:
                      type: string
                      format: date
                      readOnly: true
                      description: Date that the merchant created the link. The format of this value is **YYYY-MM-DD**.
                      example: '2024-07-02'
                    expiresOn:
                      type: string
                      format: date
                      description: Last date that the customer can use the payment link. The format of this value is **YYYY-MM-DD**.
                      example: '2024-08-02'
                    credentialOnFile:
                      type: object
                      description: Object that contains information about saving the customer’s payment details.
                      properties: &ref_90
                        tokenize:
                          type: boolean
                          description: Indicates if our gateway should tokenize the customer’s payment details as part of the transaction.
                          example: true
                        mitAgreement:
                          type: string
                          default: unscheduled
                          description: |
                            Indicates how the merchant can use the customer’s card details, as agreed by the customer:  

                            - `unscheduled` - Transactions for a fixed or variable amount that are run at a certain pre-defined event.  
                            - `recurring` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Recurring transactions don’t have a fixed duration and run until the customer cancels the agreement.  
                            - `installment` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Installment transactions have a fixed duration.  
                              
                            **Note:** If you send a value for **mitAgreement**, you must send the **standingInstructions** object in the **paymentOrder** object.
                          enum:
                            - unscheduled
                            - recurring
                            - installment
                          example: recurring
                - required: &ref_93
                    - type
                    - order
                    - authType
                    - expiresOn
                    - paymentMethods
                    - merchantReference
                  type: object
                  title: Single-use link
                  description: Object that contains information about a single-use payment link.
                  properties: &ref_94
                    type:
                      type: string
                      description: Type of link. The merchant can use this link for only one payment.
                      enum:
                        - singleUse
                      example: singleUse
                    paymentLinkId:
                      type: string
                      minLength: 10
                      maxLength: 10
                      readOnly: true
                      description: Unique identifier that we assigned to the payment link.
                      example: CKHP6VVWYT
                    merchantReference:
                      type: string
                      minLength: 1
                      maxLength: 48
                      description: Unique identifier that the merchant assigned to the payment.
                      example: LinkRef7654
                    order:
                      required: &ref_589
                        - orderId
                        - charge
                      type: object
                      description: Object that contains information about the order.
                      properties: &ref_590
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: Unique identifier that the merchant assigned to the order.
                          example: OrderRef7654
                        description:
                          type: string
                          maxLength: 1024
                          description: A brief description of the transaction.
                          example: Large Pepperoni Pizza
                        charge:
                          type: object
                          description: Indicates whether the merchant or the customer enters the amount for the transaction.
                          oneOf:
                            - required: *ref_83
                              type: object
                              title: Prompt amount
                              description: Object that contains information about the charge when the customer enters the amount of the transaction.
                              properties: *ref_84
                            - required: *ref_85
                              type: object
                              title: Preset amount
                              description: Object that contains information about the charge when the merchant enters the amount of the transaction.
                              properties: *ref_86
                    authType:
                      type: string
                      description: Type of transaction.
                      enum:
                        - sale
                        - preAuthorization
                      example: sale
                    paymentMethods:
                      type: array
                      uniqueItems: true
                      description: |
                        Payment methods that the merchant accepts.  
                        **Note:** If the payment is a pre-authorization, the customer must pay by card.
                      items:
                        type: string
                        enum:
                          - card
                          - bankTransfer
                      example:
                        - card
                    customLabels:
                      type: array
                      uniqueItems: true
                      description: |
                        Array of customLabel objects.  
                        **Note:** You can change the label of the payment button only.
                      items:
                        type: object
                        description: Object that contains the information for the custom label.
                        properties: *ref_87
                    assets:
                      required: *ref_88
                      type: object
                      readOnly: true
                      description: Object that contains shareable assets for the payment link.
                      properties: *ref_89
                    status:
                      type: string
                      readOnly: true
                      description: |
                        Status of the payment link. The value is one of the following:
                        - `active` - Payment link is active.
                        - `completed` - Customer has paid.
                        - `deactivated` - Merchant has deactivated the link.
                        - `expired` - Payment link has expired.
                      enum:
                        - active
                        - completed
                        - deactivated
                        - expired
                      example: active
                    createdOn:
                      type: string
                      format: date
                      readOnly: true
                      description: Date that the merchant created the link. The format of this value is **YYYY-MM-DD**.
                      example: '2024-07-02'
                    expiresOn:
                      type: string
                      format: date
                      description: Last date that the customer can use the payment link. The format of this value is **YYYY-MM-DD**.
                      example: '2024-08-02'
                    credentialOnFile:
                      type: object
                      description: Object that contains information about saving the customer’s payment details.
                      properties: *ref_90
            examples:
              multiUsePaymentLinkRequest:
                summary: Multi-use payment link.
                description: Create a multi-use payment link.
                value: &ref_849
                  type: multiUse
                  merchantReference: LinkRef6543
                  order:
                    description: Pie It Forward charitable trust donation
                    charge:
                      type: prompt
                      currency: USD
                  authType: sale
                  paymentMethods:
                    - card
                    - bankTransfer
                  customLabels:
                    - element: paymentButton
                      label: SUPPORT US
              singleUsePaymentLinkRequest:
                summary: Single-use payment link.
                description: Create a single-use payment link.
                value: &ref_850
                  type: singleUse
                  merchantReference: LinkRef7654
                  order:
                    orderId: OrderRef7654
                    description: Large Pepperoni Pizza
                    charge:
                      type: preset
                      amount: 4999
                      currency: USD
                  authType: sale
                  paymentMethods:
                    - card
                  customLabels:
                    - element: paymentButton
                      label: PAY NOW
                  expiresOn: '2024-08-02'
        required: true
      responses:
        '201':
          description: Successful request. We created the payment link.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - required: *ref_91
                    type: object
                    title: Multi-use link
                    description: Object that contains information about a multi-use payment link.
                    properties: *ref_92
                  - required: *ref_93
                    type: object
                    title: Single-use link
                    description: Object that contains information about a single-use payment link.
                    properties: *ref_94
              examples:
                createdPaymentLink:
                  summary: Payment Link
                  description: Active multi-use payment link.
                  value: &ref_97
                    type: multiUse
                    paymentLinkId: JZURRJBUPS
                    merchantReference: LinkRef6543
                    order:
                      description: Pie It Forward charitable trust donation
                      charge:
                        type: prompt
                        currency: USD
                    authType: sale
                    paymentMethods:
                      - card
                      - bankTransfer
                    customLabels:
                      - element: paymentButton
                        label: SUPPORT US
                    assets:
                      paymentUrl: https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d
                      paymentButton: |
                        <a href="https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d" 
                        target="_blank" style="color: #ffffff; background-color: #6C7A89; font-size: 18px; font-family: Helvetica, Arial, sans-serif; 
                        text-decoration: none; border-radius: 30px; padding: 14px 28px; display: inline-block;">SUPPORT US</a>
                    status: active
                    createdOn: '2024-09-24'
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: &ref_103
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                resourceExists:
                  summary: Resource already exists
                  description: Resource already exists
                  value: &ref_851
                    type: https://docs.payroc.com/api/errors#resource-already-exists
                    title: Resource already exists
                    status: 409
                    detail: The resource you attempted to create already exists
                    instance: https://api.payroc.com/v1/merchant/12345
        '415':
          description: Unsupported media type
          content: &ref_104
            application/problem+json:
              schema:
                type: object
                properties: &ref_506
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#unsupported-media-type
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Unsupported media type
                  status:
                    type: integer
                    description: Http status code
                    example: 415
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You submitted a payload in an unsupported format.
                required: &ref_507
                  - type
                  - title
                  - status
                  - detail
              examples:
                unsupportedMediaType:
                  summary: Unsupported media type
                  description: The payload is in an unsupported format.
                  value: &ref_852
                    type: https://docs.payroc.com/api/errors#unsupported-media-type
                    title: Unsupported media type
                    status: 415
                    detail: You submitted a payload in an unsupported format
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Payment links
      summary: List payment links
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of payment links linked to a processing terminal.  

        **Note:** If you want to view a specific payment link and you have its paymentLinkId, use our [Retrieve Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/retrieve) method.  

        Use query parameters to filter the list of results that we return, for example, to search for only active links or multi-use links.  

        Our gateway returns the following information about each payment link in the list:  
        - **type** - Indicates whether the link can be used only once or if it can be used multiple times.  
        - **authType** - Indicates whether the transaction is a sale or a pre-authorization.  
        - **paymentMethods** - Indicates the payment method that the merchant accepts.  
        - **charge** - Indicates whether the merchant or the customer enters the amount for the transaction.  
        - **status** - Indicates if the payment link is active.  

        For each payment link, we also return a paymentLinkId, which you can use for follow-on actions. 
      operationId: listPaymentLinks
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: merchantReference
          in: query
          description: Filter results by the unique identifier that the merchant assigned to the payment link.
          schema: &ref_351
            type: string
            minLength: 1
            maxLength: 48
          examples: &ref_352
            example:
              value: LinkRef6543
        - name: linkType
          in: query
          description: Filter results by the type of link. Send a value of <code>singleUse</code> or <code>multiUse</code>.
          schema: &ref_353
            type: string
            enum:
              - multiUse
              - singleUse
          examples: &ref_354
            example:
              value: multiUse
        - name: chargeType
          in: query
          description: |
            Filter results by the user that entered the amount. Send one of the following values:
            - <code>prompt</code> - Customer entered the amount.
            - <code>preset</code> - Merchant entered the amount.
          schema: &ref_355
            type: string
            enum:
              - preset
              - prompt
          examples: &ref_356
            example:
              value: prompt
        - name: status
          in: query
          description: Filter results by the status of the payment link. Send a value of <code>active</code>, <code>completed</code>,<code>deactived</code>, or <code>expired</code>.
          schema: &ref_357
            type: string
            enum:
              - active
              - completed
              - deactivated
              - expired
          examples: &ref_358
            example:
              value: active
        - name: recipientName
          in: query
          description: Filter results by the customer's name.
          schema: &ref_107
            type: string
            minLength: 1
            maxLength: 48
          examples: &ref_108
            example:
              value: Sarah Hazel Hopper
        - name: recipientEmail
          in: query
          description: Filter results by the customer's email address.
          schema: &ref_109
            type: string
            minLength: 6
            maxLength: 128
          examples: &ref_110
            example:
              value: sarah.hopper@example.com
        - name: createdOn
          in: query
          description: Filter results by the link's created date. Send a value in **YYYY-MM-DD** format.
          schema: &ref_359
            type: string
            format: date
          examples: &ref_360
            example:
              value: '2024-07-02'
        - name: expiresOn
          in: query
          description: Filter results by the link's expiry date. Send a value in **YYYY-MM-DD** format.
          schema: &ref_361
            type: string
            format: date
          examples: &ref_362
            example:
              value: '2024-08-02'
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a [paginated](https://docs.payroc.com/api/pagination) list of payment links.
          content:
            application/json:
              schema:
                required: &ref_591
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_592
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of payment links.
                        items:
                          type: object
                          oneOf:
                            - required: *ref_91
                              type: object
                              title: Multi-use link
                              description: Object that contains information about a multi-use payment link.
                              properties: *ref_92
                            - required: *ref_93
                              type: object
                              title: Single-use link
                              description: Object that contains information about a single-use payment link.
                              properties: *ref_94
              examples:
                paginatedResults:
                  summary: Payment links
                  description: Paginated list of payment links
                  value: &ref_848
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - type: multiUse
                        paymentLinkId: JZURRJBUPS
                        merchantReference: LinkRef6543
                        order:
                          description: Pie It Forward charitable trust donation
                          charge:
                            type: prompt
                            currency: USD
                        authType: sale
                        paymentMethods:
                          - card
                          - bankTransfer
                        customLabels:
                          - element: paymentButton
                            label: SUPPORT US
                        assets:
                          paymentUrl: https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d
                          paymentButton: |
                            <a href="https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d" 
                            target="_blank" style="color: #ffffff; background-color: #6C7A89; font-size: 18px; font-family: Helvetica, Arial, sans-serif; 
                            text-decoration: none; border-radius: 30px; padding: 14px 28px; display: inline-block;">SUPPORT US</a>
                        status: active
                        createdOn: '2024-07-02'
                      - type: singleUse
                        paymentLinkId: CKHP6VVWYT
                        merchantReference: LinkRef7654
                        order:
                          orderId: OrderRef7654
                          description: Large Pepperoni Pizza
                          charge:
                            type: preset
                            amount: 4999
                            currency: USD
                        authType: sale
                        paymentMethods:
                          - card
                        assets:
                          paymentUrl: https://payments.payroc.com/merchant/pay-by-link?token=7c2fc08c-cb0e-44ba-8bcd-cf6de6eb3206
                          paymentButton: |
                            <a href="https://payments.payroc.com/merchant/pay-by-link?token=7c2fc08c-cb0e-44ba-8bcd-cf6de6eb3206" 
                            target="_blank" style="color: #ffffff; background-color: #6C7A89; font-size: 18px; font-family: Helvetica, Arial, sans-serif; 
                            text-decoration: none; border-radius: 30px; padding: 14px 28px; display: inline-block;">Pay Now</a>
                        status: active
                        createdOn: '2024-09-24'
                        expiresOn: '2024-10-24'
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1001/payment-links?limit=2&after=CKHP6VVWYT
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1001/payment-links?limit=2&before=JZURRJBUPS
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /payment-links/{paymentLinkId}:
    get:
      tags:
        - Payment links
      summary: Retrieve payment link
      description: |
        Use this method to retrieve information about a payment link.  

        To retrieve a payment link, you need its paymentLinkId. Our gateway returned the paymentLinkId in the response of the [Create Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/create) method.  

        **Note:** If you don't have the paymentLinkId, use our [List Payment Links](https://docs.payroc.com/api/schema/payments/payment-links/list) method to search for the payment link.  

        Our gateway returns the following information about the payment link:  
        - **type** - Indicates whether the link can be used only once or if it can be used multiple times.  
        - **authType** - Indicates whether the transaction is a sale or a pre-authorization.  
        - **paymentMethods** - Indicates the payment method that the merchant accepts.  
        - **charge** - Indicates whether the merchant or the customer enters the amount for the transaction.
        - **status** - Indicates if the payment link is active.  
      operationId: retrievePaymentLink
      parameters:
        - name: paymentLinkId
          in: path
          description: Unique identifier that we assigned to the payment link.
          required: true
          schema: &ref_98
            type: string
            minLength: 10
            maxLength: 10
          examples: &ref_99
            example:
              value: JZURRJBUPS
      responses:
        '200':
          description: Successful request. Returns the payment link.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - required: *ref_91
                    type: object
                    title: Multi-use link
                    description: Object that contains information about a multi-use payment link.
                    properties: *ref_92
                  - required: *ref_93
                    type: object
                    title: Single-use link
                    description: Object that contains information about a single-use payment link.
                    properties: *ref_94
              examples:
                paymentLink:
                  summary: Payment Link
                  description: Active multi-use payment link.
                  value: *ref_97
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      tags:
        - Payment links
      summary: Partially update payment link
      description: |
        Use this method to partially update a payment link. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.

        To update a payment link, you need its paymentLinkId, which we sent you in the response of the [Create Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/create) method.  

        **Note:** If you don't have the paymentLinkId, use our [List Payment Links](https://docs.payroc.com/api/schema/payments/payment-links/list) method to search for the payment link.  

        You can update the following properties of a multi-use link:
        - **expiresOn parameter** - Expiration date of the link.
        - **customLabels object** - Label for the payment button.
        - **credentialOnFile object** - Settings for saving the customer's payment details.

        You can update the following properties of a single-use link:
        - **expiresOn parameter** - Expiration date of the link.
        - **authType parameter** - Transaction type of the payment link.
        - **amount parameter** - Total amount of the transaction.
        - **currency parameter** - Currency of the transaction.
        - **description parameter** - Brief description of the transaction.
        - **customLabels object** - Label for the payment button.
        - **credentialOnFile object** - Settings for saving the customer's payment details.

        **Note:** When a merchant updates a single-use link, we update the payment URL and HTML code in the assets object. The customer can't use the original link to make a payment.
      operationId: updatePaymentLink
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentLinkId
          in: path
          description: Unique identifier that we assigned to the payment link.
          required: true
          schema: *ref_98
          examples: *ref_99
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: *ref_100
              example: *ref_101
            examples:
              patchPaymentLinkRealistic:
                summary: Partially update payment link
                description: |
                  Partially update an existing payment link.  
                  Structure your request to follow the RFC 6902 standard.
                value: &ref_853
                  - op: replace
                    path: /expiresOn
                    value: '2024-10-25'
              patchOperations:
                summary: Example patch operations that apply the RFC 6902 standard
                description: |
                  Example patch operations that apply the RFC 6902 standard.
                value: *ref_102
        required: true
      responses:
        '200':
          description: Successful request. We updated the payment link.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - required: *ref_91
                    type: object
                    title: Multi-use link
                    description: Object that contains information about a multi-use payment link.
                    properties: *ref_92
                  - required: *ref_93
                    type: object
                    title: Single-use link
                    description: Object that contains information about a single-use payment link.
                    properties: *ref_94
              examples:
                paymentLink:
                  summary: Payment Link
                  description: Active multi-use payment link.
                  value: *ref_97
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /payment-links/{paymentLinkId}/deactivate:
    post:
      tags:
        - Payment links
      summary: Deactivate payment link
      description: |
        Use this method to deactivate a payment link.  

        To deactivate a payment link, you need its paymentLinkId. Our gateway returned the paymentLinkId in the response of the [Create Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/create) method.  

        **Note:** If you don't have the paymentLinkId, use our [List Payment Links](https://docs.payroc.com/api/schema/payments/payment-links/list) method to search for the payment link.  

        If your request is successful, our gateway deactivates the payment link. The customer can't use the link to make a payment, and you can't reactivate the payment link.    
      operationId: deactivatePaymentLink
      parameters:
        - name: paymentLinkId
          in: path
          description: Unique identifier that we assigned to the payment link.
          required: true
          schema: *ref_98
          examples: *ref_99
      responses:
        '200':
          description: Successful request. We deactivated the payment link.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - required: *ref_91
                    type: object
                    title: Multi-use link
                    description: Object that contains information about a multi-use payment link.
                    properties: *ref_92
                  - required: *ref_93
                    type: object
                    title: Single-use link
                    description: Object that contains information about a single-use payment link.
                    properties: *ref_94
              examples:
                deactivatedPaymentLink:
                  summary: Payment link
                  description: Deactivated multi-use payment link.
                  value: &ref_854
                    type: multiUse
                    paymentLinkId: JZURRJBUPS
                    merchantReference: LinkRef6543
                    order:
                      description: Pie It Forward charitable trust donation
                      charge:
                        type: prompt
                        currency: USD
                    authType: sale
                    paymentMethods:
                      - card
                      - bankTransfer
                    customLabels:
                      - element: paymentButton
                        label: SUPPORT US
                    assets:
                      paymentUrl: https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d
                      paymentButton: |
                        <a href="https://payments.payroc.com/merchant/pay-by-link?token=02ada211-ff51-4845-b0b5-e685aeb4b19d" 
                        target="_blank" style="color: #ffffff; background-color: #6C7A89; font-size: 18px; font-family: Helvetica, Arial, sans-serif; 
                        text-decoration: none; border-radius: 30px; padding: 14px 28px; display: inline-block;">SUPPORT US</a>
                    status: deactivated
                    createdOn: '2024-07-24'
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '500':
          description: An error has occured
          content: *ref_14
  /payment-links/{paymentLinkId}/sharing-events:
    post:
      tags:
        - Payment links
      summary: Share payment link
      description: |
        Use this method to email a payment link to a customer.  

        To email a payment link, you need its paymentLinkId. Our gateway returned the paymentLinkId in the response of the [Create Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/create) method.  

        **Note:** If you don't have the paymentLinkId, use our [List Payment Links](https://docs.payroc.com/api/schema/payments/payment-links/list) method to search for the payment link.  

        In the request, you must provide the recipient's name and email address.  

        In the response, our gateway returns a sharingEventId, which you can use to [List Payment Link Sharing Events](https://docs.payroc.com/api/schema/payments/payment-links/sharing-events/list).  
      operationId: sharePaymentLink
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentLinkId
          in: path
          description: Unique identifier that we assigned to the payment link.
          required: true
          schema: *ref_98
          examples: *ref_99
      requestBody:
        content:
          application/json:
            schema:
              type: object
              oneOf:
                - required: &ref_105
                    - sharingMethod
                    - recipients
                  type: object
                  title: Share via email
                  description: Object that contains the information about a sharing event that the merchant sent by email.
                  properties: &ref_106
                    sharingMethod:
                      type: string
                      description: Method that the merchant uses to share the payment link.
                      enum:
                        - email
                      example: email
                    sharingEventId:
                      maxLength: 10
                      minLength: 10
                      type: string
                      readOnly: true
                      description: Unique identifier that we assigned to the sharing event.
                      example: GTZH5WVXK9
                    dateTime:
                      type: string
                      readOnly: true
                      format: date-time
                      description: Date and time that the merchant shared the link. Our gateway returns this value in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                      example: '2024-07-02T15:30:00Z'
                    merchantCopy:
                      type: boolean
                      default: false
                      writeOnly: true
                      description: Indicates if we send a copy of the email to the merchant. By default, we don't send a copy to the merchant.
                      example: true
                    message:
                      type: string
                      description: Message that the merchant sends with the payment link.
                      maxLength: 1024
                      example: |
                        Dear Sarah,
                        Your insurance is expiring this month.
                        Please pay the renewal fee by the end of the month to renew your insurance.
                    recipients:
                      type: array
                      uniqueItems: true
                      description: Array that contains the recipients of the payment link.
                      items:
                        required: &ref_593
                          - name
                          - email
                        type: object
                        description: Object that contains the contact details of the recipient.
                        properties: &ref_594
                          name:
                            maxLength: 48
                            minLength: 1
                            type: string
                            description: Recipient's name.
                            example: Sarah Hazel Hopper
                          email:
                            maxLength: 128
                            minLength: 6
                            type: string
                            description: Recipient's email address.
                            example: sarah.hopper@example.com
            examples:
              sharePaymentLinkRequest:
                summary: Share a payment link.
                description: Share a payment link.
                value: &ref_856
                  sharingMethod: email
                  merchantCopy: true
                  message: |
                    Dear Sarah,

                    Your insurance is expiring this month.
                    Please, pay the renewal fee by the end of the month to renew it.
                  recipients:
                    - name: Sarah Hazel Hopper
                      email: sarah.hopper@example.com
      responses:
        '201':
          description: Successful request. We shared the payment link.
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - required: *ref_105
                    type: object
                    title: Share via email
                    description: Object that contains the information about a sharing event that the merchant sent by email.
                    properties: *ref_106
              examples:
                paymentLinkShareEvent:
                  summary: Payment link sharing event.
                  description: Payment link sharing event
                  value: &ref_857
                    sharingMethod: email
                    sharingEventId: GTZH5WVXK9
                    dateTime: '2024-07-02T15:30:00Z'
                    message: |
                      Dear Sarah,

                      You can pay for your order via the link below.
                    recipients:
                      - name: Sarah Hazel Hopper
                        email: sarah.hopper@example.com
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Payment links
      summary: List payment link sharing events
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of sharing events for a payment link. A sharing event occurs when a merchant shares a payment link with a customer.  

        To list the sharing events for a payment link, you need its paymentLinkId. Our gateway returned the paymentLinkId in the response of the [Create Payment Link](https://docs.payroc.com/api/schema/payments/payment-links/create) method.  

        **Note:** If you don't have the paymentLinkId, use our [List Payment Links](https://docs.payroc.com/api/schema/payments/payment-links/list) method to search for the payment link.  

        Use query parameters to filter the list of results that we return, for example, to search for links sent to a specific customer.  

        Our gateway returns the following information for each sharing event in the list:  
        - Customer that the merchant sent the link to.  
        - Date that the merchant sent the link.  
      operationId: listPaymentLinkShareEvents
      parameters:
        - name: paymentLinkId
          in: path
          description: Unique identifier that we assigned to the payment link.
          required: true
          schema: *ref_98
          examples: *ref_99
        - name: recipientName
          in: query
          description: Filter results by the customer's name.
          schema: *ref_107
          examples: *ref_108
        - name: recipientEmail
          in: query
          description: Filter results by the customer's email address.
          schema: *ref_109
          examples: *ref_110
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a [paginated](https://docs.payroc.com/api/pagination) list of sharing events for the payment link.
          content:
            application/json:
              schema:
                required: &ref_595
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_596
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of sharing events for the payment link.
                        items:
                          type: object
                          oneOf:
                            - required: *ref_105
                              type: object
                              title: Share via email
                              description: Object that contains the information about a sharing event that the merchant sent by email.
                              properties: *ref_106
              examples:
                paginatedResults:
                  summary: Sharing events
                  description: Paginated list of payment link sharing events
                  value: &ref_855
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - sharingMethod: email
                        sharingEventId: GKB49GZ6DL
                        dateTime: '2024-07-02T15:30:00Z'
                        message: |
                          Dear Sarah,

                          You can pay for your order via the link below.
                        recipients:
                          - name: Sarah Hazel Hopper
                            email: sarah.hopper@example.com
                      - sharingMethod: email
                        sharingEventId: GTZH5WVXK9
                        dateTime: '2024-07-02T15:30:00Z'
                        message: |
                          Dear Sarah,

                          Thank you for continuing to support our Pie It Forward charitable trust.
                          You can make your payment via the link below.
                        recipients:
                          - name: Sarah Hazel Hopper
                            email: sarah.hopper@example.com
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/payment-links/CKHP6VVWYT/sharing-events?limit=2&after=GTZH5WVXK9
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/payment-links/CKHP6VVWYT/sharing-events?limit=2&before=GKB49GZ6DL
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/payment-plans:
    post:
      tags:
        - Payment plans
      summary: Create payment plan
      description: "Use this method to create a payment schedule that you can assign customers to.  \n\n**Note:** This method is part of our Repeat Payments feature. To help you understand how this method works with our Subscriptions endpoints, go to [Repeat Payments](/guides/integrate/repeat-payments).  \n\nWhen you create a payment plan you need to provide a unique paymentPlanId that you use to run follow-on actions:  \n\n-\t[Retrieve Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/retrieve)  - View the details of the payment plan.  \n-\t[Update Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/partially-update)  - Update the details of the payment plan.  \n-\t[Delete Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/delete)  - Delete the payment plan.  \n-\t[Create Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create)  - Subscribe a customer to the payment plan.  \n\nThe request includes the following settings:  \n\n-\t**type** - Indicates if our gateway or the merchant collects payments. If the merchant manually collects payments, integrate with the [Pay Manual Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/pay) method.  \n-\t**recurringOrder** - Amount of each payment if the gateway automatically collect payments.  \n-\t**setupOrder** - Setup fee that our gateway immediately collects from the customer's payment method.  \n-\t**onUpdate and onDelete** - Indicates what happens to associated subscriptions if the merchant updates or deletes the payment plan.  \n"
      operationId: createPaymentPlan
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_113
                - paymentPlanId
                - name
                - currency
                - frequency
                - onDelete
                - onUpdate
                - type
              type: object
              properties: &ref_114
                paymentPlanId:
                  maxLength: 48
                  minLength: 1
                  type: string
                  description: Unique identifier that the merchant assigns to the payment plan.
                  example: PlanRef8765
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  readOnly: true
                  description: Unique identifier of the terminal that the payment plan is assigned to.
                  example: '1234001'
                name:
                  maxLength: 128
                  minLength: 5
                  type: string
                  description: Name of the payment plan.
                  example: Premium Club
                description:
                  maxLength: 128
                  minLength: 0
                  type: string
                  description: Description of the payment plan.
                  example: Monthly Premium Club subscription
                currency:
                  type: string
                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                  enum: *ref_82
                setupOrder:
                  type: object
                  description: Object that contains information about the initial cost that a customer pays to set up the subscription.
                  properties: &ref_597
                    amount:
                      type: integer
                      format: int64
                      description: Total amount before surcharges. The value is in the currency's lowest denomination, for example, cents.
                      example: 4999
                    description:
                      maxLength: 1024
                      minLength: 1
                      type: string
                      description: Description of the transaction.
                      example: Initial setup fee for Premium Club subscription
                    breakdown:
                      required: &ref_111
                        - subtotal
                      type: object
                      description: |
                        Object that contains information about the taxes that apply to the transaction.
                      properties: &ref_112
                        subtotal:
                          type: integer
                          format: int64
                          description: Total amount for the transaction before tax. The value is in the currency's lowest denomination, for example, cents.
                          example: 4999
                        taxes:
                          type: array
                          description: Array of tax objects.
                          items:
                            required: &ref_118
                              - name
                              - rate
                            type: object
                            properties: &ref_119
                              name:
                                type: string
                                description: Name of the tax.
                                maxLength: 64
                                minLength: 1
                                example: Sales Tax
                              rate:
                                type: number
                                format: double
                                description: Tax percentage for the transaction.
                                maximum: 99.99999
                                minimum: 0
                                example: 7
                              amount:
                                type: integer
                                format: int64
                                readOnly: true
                                description: Amount of tax that was applied to the transaction. The value is in the currency's lowest denomination, for example, cents.
                                exclusiveMinimum: 0
                                example: 190
                recurringOrder:
                  type: object
                  description: |
                    Object that contains information about the cost of each payment.  
                    **Note:** Send this object only if the value for **type** is `automatic`.
                  properties: &ref_598
                    amount:
                      type: integer
                      format: int64
                      description: Total amount before surcharges. The value is in the currency's lowest denomination, for example, cents.
                      example: 4999
                    description:
                      maxLength: 1024
                      minLength: 1
                      type: string
                      description: Description of the transaction.
                      example: Monthly Premium Club subscription
                    breakdown:
                      required: *ref_111
                      type: object
                      description: |
                        Object that contains information about the taxes that apply to the transaction.
                      properties: *ref_112
                length:
                  minimum: 0
                  default: 0
                  type: integer
                  format: int32
                  description: |
                    Number of payments for the payment plan.  

                    To indicate that the payment plan should run indefinitely, send a value of `0`.
                  example: 12
                type:
                  type: string
                  default: automatic
                  description: |
                    Indicates how the merchant takes the payment from the customer's account.
                    - `manual` - The merchant manually collects payments from the customer.
                    - `automatic` - The terminal automatically collects payments from the customer.
                  enum:
                    - manual
                    - automatic
                  example: automatic
                frequency:
                  type: string
                  description: Indicates how often the merchant or the terminal collects a payment from the customer.
                  enum:
                    - weekly
                    - fortnightly
                    - monthly
                    - quarterly
                    - yearly
                  example: monthly
                onUpdate:
                  type: string
                  default: continue
                  description: |
                    Indicates whether any changes that the merchant makes to the payment plan apply to existing subscriptions.
                    - `update` - Changes apply to existing subscriptions.
                    - `continue` - Changes don't apply to existing subscriptions.
                  enum:
                    - update
                    - continue
                  example: continue
                onDelete:
                  type: string
                  default: complete
                  description: |
                    Indicates what happens to existing subscriptions if the merchant deletes the payment plan.
                    - `complete` - Stops existing subscriptions.
                    - `continue` - Continues existing subscriptions.
                  enum:
                    - complete
                    - continue
                  example: continue
                customFieldNames:
                  type: array
                  description: |
                    Array of custom fields that you can use in subscriptions linked to the payment plan.
                  items:
                    maxLength: 56
                    minLength: 1
                    type: string
                  example:
                    - yourCustomField
            examples:
              paymentPlanRequest:
                summary: Payment Plan
                description: Payment Plan
                value: &ref_859
                  paymentPlanId: PlanRef8765
                  name: Premium Club
                  description: Monthly Premium Club subscription
                  currency: USD
                  setupOrder:
                    amount: 4999
                    description: Initial setup fee for Premium Club subscription
                    breakdown:
                      subtotal: 4347
                      taxes:
                        - name: Sales Tax
                          rate: 5
                  recurringOrder:
                    amount: 4999
                    description: Monthly Premium Club subscription
                    breakdown:
                      subtotal: 4347
                      taxes:
                        - name: Sales Tax
                          rate: 5
                  length: 12
                  type: automatic
                  frequency: monthly
                  onUpdate: continue
                  onDelete: complete
                  customFieldNames:
                    - yourCustomField
        required: true
      responses:
        '201':
          description: Successful request. We created the payment plan.
          content:
            application/json:
              schema:
                required: *ref_113
                type: object
                properties: *ref_114
              examples:
                createdPaymentPlan:
                  summary: Payment Plan
                  description: Payment Plan
                  value: &ref_115
                    paymentPlanId: PlanRef8765
                    processingTerminalId: '1234001'
                    name: Premium Club
                    description: Monthly Premium Club subscription
                    currency: USD
                    setupOrder:
                      amount: 4999
                      description: Initial setup fee for Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                    recurringOrder:
                      amount: 4999
                      description: Monthly Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                    length: 12
                    type: automatic
                    frequency: monthly
                    onUpdate: continue
                    onDelete: complete
                    customFieldNames:
                      - yourCustomField
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Payment plans
      summary: List payment plans
      description: "Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of payment plans for a processing terminal.  \n\n**Note:** If you want to view a specific payment plan and you have its paymentPlanId, use our [Retrieve Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/retrieve) method.  \n\nOur gateway returns the following information about each payment plan in the list:  \n\n  -\tName, length, and currency of the plan  \n  -\tHow often our gateway collects each payment  \n  -\tHow much our gateway collects for each payment  \n  -\tWhat happens if the merchant updates or deletes the plan  \n\nFor each payment plan, we return the paymentPlanId, which you can use to perform follow-on actions.\n"
      operationId: listPaymentPlans
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a paginated list of payment plans.
          content:
            application/json:
              schema:
                required: &ref_599
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_600
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of paymentPlan objects.
                        items:
                          required: *ref_113
                          type: object
                          properties: *ref_114
              examples:
                paginatedResults:
                  summary: Payment Plan
                  description: Payment Plan
                  value: &ref_858
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - paymentPlanId: PlanRef8765
                        processingTerminalId: '1234001'
                        name: Premium Club
                        description: Monthly Premium Club subscription
                        currency: USD
                        length: 12
                        type: automatic
                        frequency: monthly
                        onUpdate: continue
                        onDelete: complete
                      - paymentPlanId: PlanRef8766
                        processingTerminalId: '1234001'
                        name: Pie It Forward
                        description: Pie It Forward charitable trust donation
                        currency: USD
                        length: 0
                        type: automatic
                        frequency: yearly
                        onUpdate: continue
                        onDelete: complete
                        customFieldNames:
                          - yourCustomField
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1001/payment-plans?limit=2&after=PlanRef8766
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1001/payment-plans?limit=2&before=PlanRef8765
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/payment-plans/{paymentPlanId}:
    get:
      tags:
        - Payment plans
      summary: Retrieve payment plan
      description: "Use this method to retrieve information about a payment plan.  \n\nTo retrieve a payment plan, you need its paymentPlanId. Our gateway returned the paymentPlanId in the response of the [Create Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/create) method.  \n\n**Note:** If you don't have the paymentPlanId, use our [List Payment Plans](https://docs.payroc.com/api/schema/payments/payment-plans/list) method to search for the payment plan.  \n\nOur gateway returns the following information about the payment plan:  \n\n  -\tName, length, and currency of the plan  \n  -\tHow often our gateway collects each payment  \n  -\tHow much our gateway collects for each payment  \n  -\tWhat happens if the merchant updates or deletes the plan  \n"
      operationId: getPaymentPlan
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: paymentPlanId
          in: path
          description: Unique identifier that the merchant assigned to the payment plan.
          required: true
          schema: &ref_116
            maxLength: 48
            minLength: 1
            type: string
          examples: &ref_117
            example:
              value: PlanRef8765
      responses:
        '200':
          description: Successful request. Returns the requested payment plan.
          content:
            application/json:
              schema:
                required: *ref_113
                type: object
                properties: *ref_114
              examples:
                paymentPlan:
                  summary: Payment Plan
                  description: Payment Plan
                  value: *ref_115
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      tags:
        - Payment plans
      summary: Partially update payment plan
      description: |
        Use this method to partially update a payment plan. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.  

        To update a payment plan, you need its paymentPlanId, which you sent in the request of the [Create Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/create) method.  

        **Note:** If you don't have the paymentPlanId, use our [List Payment Plans](https://docs.payroc.com/api/schema/payments/payment-plans/list) method to search for the payment plan.  

        You can update all of the properties of the payment plan except for the paymentPlanId.  

        The value you sent for the onUpdate parameter when you created the payment plan indicates what happens to the associated subscriptions when you update the plan:  
        - `update` - Our gateway updates the subscriptions associated with the payment plan.
        - `continue` - Our  gateway doesn't update the subscriptions associated with the payment plan.
      operationId: updatePaymentPlan
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: paymentPlanId
          in: path
          description: Unique identifier that the merchant assigned to the payment plan.
          required: true
          schema: *ref_116
          examples: *ref_117
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: *ref_100
              example: *ref_101
            examples:
              patchPaymentPlanRealistic:
                summary: Update payment plan
                description: |
                  Make changes to an existing payment plan.

                  Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
                value: &ref_860
                  - op: replace
                    path: /currency
                    value: USD
                  - op: replace
                    path: /setupOrder/amount
                    value: 2999
                  - op: replace
                    path: /frequency
                    value: yearly
              patchOperations:
                summary: Example patch operations that apply the RFC 6902 standard
                description: |
                  Example patch operations that apply the RFC 6902 standard.
                value: *ref_102
        required: true
      responses:
        '200':
          description: Successful request. We updated the payment plan.
          content:
            application/json:
              schema:
                required: *ref_113
                type: object
                properties: *ref_114
              examples:
                paymentPlan:
                  summary: Payment Plan
                  description: Payment Plan
                  value: *ref_115
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Payment plans
      summary: Delete payment plan
      description: "Use this method to delete a payment plan.  \n\n> **Important:** When you delete a payment plan, you can’t recover it. You also won’t be able to add subscriptions to the payment plan.  \n\nTo delete a payment plan, you need its paymentPlanId, which you sent in the request of the [Create Payment Plan](https://docs.payroc.com/api/schema/payments/payment-plans/create) method.  \n\n**Note:** If you don't have the paymentPlanId, use our [List Payment Plans](https://docs.payroc.com/api/schema/payments/payment-plans/list) method to search for the payment plan.  \n\nThe value you sent for the onDelete parameter when you created the payment plan indicates what happens to associated subscriptions when you delete the plan:  \n\n  -\t`complete` - Our gateway stops taking payments for the subscriptions associated with the payment plan.  \n  -\t`continue` - Our gateway continues to take payments for the subscriptions associated with the payment plan. To stop a subscription for a cancelled payment plan, go to the [Deactivate Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/deactivate) method.  \n"
      operationId: deletePaymentPlan
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: paymentPlanId
          in: path
          description: Unique identifier that the merchant assigned to the payment plan.
          required: true
          schema: *ref_116
          examples: *ref_117
      responses:
        '204':
          description: Successful request. We deleted the payment plan.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create subscription
      description: |
        Use this method to assign a customer to a payment plan.  

        **Note:** This method is part of our Repeat Payments feature. To help you understand how this method works with our Payment plans endpoints, go to [Repeat Payments](/guides/integrate/repeat-payments).  

        When you create a subscription you need to provide a unique subscriptionId that you use to run follow-on actions:  

        - [Retrieve Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/retrieve) - View the details of the subscription.
        - [Update Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/partially-update) - Update the details of the subscription.
        - [Deactivate Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/deactivate) - Stop taking payments for the subscription.
        - [Re-activate Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/reactivate) - Start taking payments again for the subscription.
        - [Pay Manual Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/pay) - Manually collect a payment for the subscription.

        The request includes the following settings:
        - **paymentPlanId** - Unique identifier of the payment plan that the merchant wants to use. If you don't have the paymentPlanId, use our [List Payment Plans](https://docs.payroc.com/api/schema/payments/payment-plans/list) method to search for the payment plan.
        - **paymentMethod** - Object that contains information about the secure token, which represents the customer's card details or bank account details.
        - **startDate** - Date that you want to start to take payments.

        You can also update the settings that the subscription inherited from the payment plan, for example, you can change the amount for each payment. If you change the settings for the subscription, it doesn't change the settings in the payment plan that it's linked to. 
      operationId: createSubscription
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_605
                - paymentMethod
                - paymentPlanId
                - startDate
                - subscriptionId
              type: object
              properties: &ref_606
                subscriptionId:
                  maxLength: 48
                  minLength: 1
                  type: string
                  description: Unique identifier that the merchant assigned to the subscription.
                  example: SubRef7654
                paymentPlanId:
                  maxLength: 48
                  minLength: 1
                  type: string
                  description: Unique identifier that the merchant assigned to the payment plan.
                  example: PlanRef8765
                paymentMethod:
                  type: object
                  description: Object that contains information about the customer's payment details.
                  discriminator:
                    propertyName: type
                    mapping:
                      secureToken: '#/components/schemas/secureTokenPayload'
                  oneOf:
                    - required: &ref_168
                        - type
                        - token
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: &ref_169
                        type:
                          type: string
                          description: Method that the terminal used to take the payment.
                          enum:
                            - secureToken
                          example: secureToken
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  

                            **Note:** Send a value for accountType only if the secure token represents bank account details.
                          enum:
                            - checking
                            - savings
                          example: checking
                        token:
                          maxLength: 19
                          minLength: 12
                          type: string
                          description: Unique token that the gateway assigned to the payment details.
                          example: '1234567890123456789'
                        secCode:
                          type: string
                          description: |
                            Indicates how the customer authorized the ACH transaction. Send one of the following values:  

                            - `web` – Online transaction.  
                            - `tel` – Telephone transaction.  
                            - `ccd` – Corporate credit card or debit card transaction.  
                            - `ppd` – Pre-arranged transaction. 
                          enum:
                            - web
                            - tel
                            - ccd
                            - ppd
                          example: web
                name:
                  maxLength: 128
                  minLength: 5
                  type: string
                  description: |
                    Name of the subscription. 
                    This value replaces the name inherited from the payment plan.
                  example: Premium Club
                description:
                  maxLength: 128
                  minLength: 1
                  type: string
                  description: |
                    Description of the subscription. 
                    This value replaces the description inherited from the payment plan.
                  example: Monthly Premium Club subscription. Two large pizzas free per month, and exclusive member discounts.
                setupOrder:
                  description: Object that contains information about the initial cost that a customer pays to set up the subscription.
                  type: object
                  properties: &ref_122
                    orderId:
                      maxLength: 24
                      minLength: 1
                      type: string
                      description: A unique identifier assigned by the merchant.
                      example: OrderRef6543
                    amount:
                      type: integer
                      format: int64
                      description: |
                        Total amount for the transaction. The value is in the currency's lowest denomination, for example, cents.<br/>
                        <br/>**Important:** Do not add the surcharge to the amount parameter in the request. If the transaction is eligible for surcharging, our gateway adds the surcharge to the amount in the request, and then returns the updated amount in the response.
                      example: 4999
                    description:
                      maxLength: 1024
                      minLength: 1
                      type: string
                      description: Description of the transaction.
                      example: Monthly Premium Club subscription
                    breakdown:
                      required: &ref_120
                        - subtotal
                      type: object
                      description: |
                        Object that contains information about the surcharge and taxes that apply to the transaction.
                      properties: &ref_121
                        subtotal:
                          type: integer
                          format: int64
                          description: Total amount for the transaction before tax. The value is in the currency's lowest denomination, for example, cents.
                          example: 4500
                        taxes:
                          type: array
                          description: Array of tax objects.
                          items:
                            required: *ref_118
                            type: object
                            properties: *ref_119
                        surcharge:
                          description: Object that contains information about the [surcharge](https://docs.payroc.com/knowledge/card-payments/credit-card-surcharging) that we applied to the transaction.
                          allOf:
                            - readOnly: true
                            - type: object
                              description: |
                                Object that contains information about the surcharge.
                              properties: &ref_163
                                bypass:
                                  type: boolean
                                  description: |
                                    Indicates if the merchant wants to remove the surcharge fee from the transaction.  
                                    `true` - The gateway removes the surcharge fee from the transaction.  
                                    `false` - The gateway adds the fee to the transaction.   
                                  example: false
                                amount:
                                  exclusiveMinimum: 0
                                  type: integer
                                  format: int64
                                  readOnly: true
                                  description: |
                                    If the merchant added a surcharge fee, this value indicates the amount of the surcharge fee
                                    in the currency’s lowest denomination, for example, cents.
                                  example: 50
                                percentage:
                                  maximum: 100
                                  exclusiveMinimum: 0
                                  type: number
                                  format: double
                                  readOnly: true
                                  description: If the merchant added a surcharge fee, this value indicates the surcharge percentage.
                                  example: 2
                        convenienceFee:
                          required: &ref_164
                            - amount
                          type: object
                          readOnly: true
                          description: Object that contains information about the convenience fee for the transaction.
                          properties: &ref_165
                            amount:
                              exclusiveMinimum: 0
                              type: integer
                              format: int64
                              description: |
                                If the merchant added a convenience fee, this value indicates the amount of the convenience fee
                                in the currency’s lowest denomination, for example, cents.
                              example: 25
                recurringOrder:
                  type: object
                  description: |
                    Object that contains information about the cost of each payment.  
                    **Note:** Send this object only if the value for **type** is `automatic`.
                  properties: &ref_123
                    amount:
                      type: integer
                      format: int64
                      description: |
                        Total amount for the transaction. The value is in the currency's lowest denomination, for example, cents.<br/>
                        <br/>**Important:** Do not add the surcharge to the amount parameter in the request. If the transaction is eligible for surcharging, our gateway adds the surcharge to the amount in the request, and then returns the updated amount in the response.
                      example: 4999
                    description:
                      maxLength: 1024
                      minLength: 1
                      type: string
                      description: Description of the transaction.
                      example: Monthly Premium Club subscription
                    breakdown:
                      required: *ref_120
                      type: object
                      description: |
                        Object that contains information about the surcharge and taxes that apply to the transaction.
                      properties: *ref_121
                startDate:
                  type: string
                  format: date
                  description: |
                    Format: **YYYY-MM-DD**  
                    Subscription's start date.
                  example: '2024-05-02'
                endDate:
                  type: string
                  format: date
                  description: |
                    Format: **YYYY-MM-DD**  
                    Subscription's end date.  
                    **Note:** If you provide values for both **length** and **endDate**, 
                    our gateway uses the value for **endDate** to determine when the subscription should end.
                  example: '2025-05-02'
                length:
                  minimum: 0
                  type: integer
                  format: int32
                  description: |
                    Total number of billing cycles. To indicate that the subscription should run indefinitely, send a value of `0`.
                    This value replaces the **length** inherited from the payment plan.  
                    **Note:** If you provide values for both **length** and **endDate**, 
                    our gateway uses the value for **endDate** to determine when the subscription should end.
                  example: 12
                pauseCollectionFor:
                  type: integer
                  format: int32
                  description: |
                    Number of billing cycles that the merchant wants to pause payments for. 
                    For example, if the merchant wants to offer a free trial period.
                  example: 0
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: &ref_124
                      - name
                      - value
                    type: object
                    properties: &ref_125
                      name:
                        maxLength: 56
                        minLength: 1
                        type: string
                        description: Name of the custom field.
                        example: yourCustomField
                      value:
                        maxLength: 100
                        minLength: 1
                        type: string
                        description: Value for the custom field.
                        example: abc123
            examples:
              createSubscription:
                summary: Subscription
                description: Subscription
                value: &ref_862
                  subscriptionId: SubRef7654
                  paymentPlanId: PlanRef8765
                  paymentMethod:
                    type: secureToken
                    token: '296753123456'
                  name: Premium Club
                  description: Premium Club subscription
                  setupOrder:
                    amount: 4999
                    description: Initial setup fee for Premium Club subscription
                    breakdown:
                      subtotal: 4347
                      taxes:
                        - name: Sales Tax
                          rate: 5
                    orderId: OrderRef6543
                  recurringOrder:
                    amount: 4999
                    description: Monthly Premium Club subscription
                    breakdown:
                      subtotal: 4347
                      taxes:
                        - name: Sales Tax
                          rate: 5
                  startDate: '2024-07-02'
                  endDate: '2025-07-01'
                  length: 12
                  pauseCollectionFor: 0
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We created the subscription.
          content:
            application/json:
              schema:
                required: &ref_126
                  - subscriptionId
                  - processingTerminalId
                  - paymentPlan
                  - secureToken
                  - name
                  - currency
                  - currentState
                  - startDate
                  - type
                  - frequency
                type: object
                properties: &ref_127
                  subscriptionId:
                    maxLength: 48
                    minLength: 1
                    type: string
                    description: Unique identifier that the merchant assigned to the subscription.
                    example: SubRef7654
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier of the terminal that the subscription is linked to.
                    example: '1234001'
                  paymentPlan:
                    required: &ref_601
                      - name
                      - paymentPlanId
                    type: object
                    properties: &ref_602
                      paymentPlanId:
                        maxLength: 48
                        minLength: 1
                        type: string
                        description: Unique identifier that the merchant assigns to the payment plan.
                        example: PlanRef8765
                      name:
                        maxLength: 128
                        minLength: 5
                        type: string
                        description: Name of the payment plan.
                        example: Monthly Premium Club subscription
                      link:
                        type: object
                        readOnly: true
                        description: Object that contains HATEOAS links for the resource.
                        properties: *ref_4
                        required: *ref_5
                        example: *ref_6
                  secureToken:
                    required: &ref_132
                      - customerName
                      - secureTokenId
                      - status
                      - token
                    type: object
                    description: Object that contains information about the secure token.
                    properties: &ref_133
                      secureTokenId:
                        maxLength: 200
                        minLength: 1
                        type: string
                        description: Unique identifier that the merchant assigned to the secure token.
                        example: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                      customerName:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: Customer's name.
                        example: Sarah Hazel Hopper
                      token:
                        maxLength: 19
                        minLength: 12
                        type: string
                        description: |
                          Token that the merchant can use in future transactions to represent the customer's payment details. The token:  
                          - Begins with the six-digit identification number **296753**.  
                          - Contains up to 12 digits.  
                          - Contains a single check digit that we calculate using the Luhn algorithm.  
                        example: '296753123456'
                      status:
                        type: string
                        description: |
                          Status of the customer's bank account. The processor performs a security check on the customer's bank account and returns the status of the account.  
                          **Note:** Depending on the merchant's account settings, this feature may be unavailable.
                        enum:
                          - notValidated
                          - cvvValidated
                          - validationFailed
                          - issueNumberValidated
                          - cardNumberValidated
                          - bankAccountValidated
                        example: cvvValidated
                      link:
                        type: object
                        readOnly: true
                        description: Object that contains HATEOAS links for the resource.
                        properties: *ref_4
                        required: *ref_5
                        example: *ref_6
                  name:
                    maxLength: 128
                    minLength: 5
                    type: string
                    description: Name of the subscription.
                    example: Premium Club
                  description:
                    maxLength: 128
                    minLength: 1
                    type: string
                    description: Description of the subscription.
                    example: Monthly Premium Club subscription. Two large pizzas free per month, and exclusive member discounts.
                  currency:
                    type: string
                    description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                    enum: *ref_82
                  setupOrder:
                    description: Object that contains information about the initial cost that a customer pays to set up the subscription.
                    type: object
                    properties: *ref_122
                  recurringOrder:
                    type: object
                    description: |
                      Object that contains information about the cost of each payment.  
                      **Note:** Send this object only if the value for **type** is `automatic`.
                    properties: *ref_123
                  currentState:
                    required: &ref_134
                      - paidInvoices
                      - status
                    type: object
                    description: A snapshot of the subscription's current state.
                    properties: &ref_135
                      status:
                        type: string
                        description: |
                          Status of the Subscription.

                          - 'active' - Subscription is active.
                          - 'completed' - Subscription has reached the end date or the total number of billing cycles.
                          - 'cancelled' - Merchant deactivated the subscription.
                          - 'suspended' - Subscription is suspended. For example, if the customer misses payments.
                        enum:
                          - active
                          - completed
                          - suspended
                          - cancelled
                        example: active
                      nextDueDate:
                        type: string
                        description: Date that the merchant collects the next payment.
                        format: date
                        example: '2024-08-02'
                      paidInvoices:
                        minimum: 0
                        type: integer
                        description: Number of payments that the merchant has collected.
                        format: int32
                        example: 3
                      outstandingInvoices:
                        minimum: 0
                        type: integer
                        description: |
                          Number of payments until the end of the subscription. 
                          Our gateway returns a value for **outstandingInvoices** only if the subscription 
                          has an end date or a fixed number of billing cycles.
                        format: int32
                        example: 9
                  startDate:
                    type: string
                    format: date
                    description: |
                      Format: **YYYY-MM-DD**  
                      Subscription's start date.
                    example: '2024-05-02'
                  endDate:
                    type: string
                    format: date
                    description: |
                      Format: **YYYY-MM-DD** 
                      Subscription's end date.  
                      **Note:** If you provide values for both **length** and **endDate**, 
                      our gateway uses the value for **endDate** to determine when the subscription should end. 
                    example: '2025-05-02'
                  length:
                    minimum: 0
                    type: integer
                    format: int32
                    description: |
                      Total number of billing cycles. To indicate that the subscription should run indefinitely, send a value of `0`. This value replaces the **length** inherited from the payment plan.  
                      **Note:** If you provide values for both **length** and **endDate**, our gateway uses the value for **endDate** to determine when the subscription should end.
                    example: 12
                  type:
                    type: string
                    description: |
                      How the merchant takes the payment from the customer’s account.  
                      - `manual` – The merchant manually collects payments from the customer.  
                      - `automatic` – The terminal automatically collects payments from the customer.
                    enum:
                      - manual
                      - automatic
                    example: automatic
                  frequency:
                    type: string
                    description: Indicates how often the merchant or the terminal collects a payment from the customer.
                    enum:
                      - weekly
                      - fortnightly
                      - monthly
                      - quarterly
                      - yearly
                    example: monthly
                  pauseCollectionFor:
                    minimum: 0
                    type: integer
                    format: int32
                    description: |
                      Number of billing cycles that the merchant wants to pause payments for. 
                      For example, if the merchant wants to offer a free trial period.
                    example: 0
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                createdSubscriptionWithSurcharge:
                  summary: Subscription with surcharge
                  description: Subscription with surcharge
                  value: &ref_128
                    subscriptionId: SubRef7654
                    processingTerminalId: '1234001'
                    paymentPlan:
                      paymentPlanId: PlanRef8765
                      name: Monthly Premium Club subscription
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/payment-plans/PlanRef8765
                    secureToken:
                      secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                      customerName: Sarah Hazel Hopper
                      token: '296753123456'
                      status: notValidated
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    name: Premium Club
                    description: Premium Club subscription
                    currency: USD
                    setupOrder:
                      orderId: OrderRef6543
                      amount: 4999
                      description: Initial setup fee for Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        surcharge:
                          amount: 217
                          percentage: 5
                    recurringOrder:
                      amount: 4999
                      description: Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        surcharge:
                          amount: 217
                          percentage: 5
                    currentState:
                      status: active
                      nextDueDate: '2024-08-02'
                      paidInvoices: 0
                      outstandingInvoices: 3
                    startDate: '2024-07-02'
                    endDate: '2025-07-01'
                    length: 12
                    type: automatic
                    frequency: monthly
                    pauseCollectionFor: 0
                    customFields:
                      - name: yourCustomField
                        value: abc123
                createdSubscriptionWithConvenienceFee:
                  summary: Subscription with convenience fee
                  description: Subscription with convenience fee
                  value: &ref_129
                    subscriptionId: SubRef7654
                    processingTerminalId: '1234001'
                    paymentPlan:
                      paymentPlanId: PlanRef8765
                      name: Monthly Premium Club subscription
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/payment-plans/PlanRef8765
                    secureToken:
                      secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                      customerName: Sarah Hazel Hopper
                      token: '296753123456'
                      status: notValidated
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    name: Premium Club
                    description: Premium Club subscription
                    currency: USD
                    setupOrder:
                      orderId: OrderRef6543
                      amount: 4999
                      description: Initial setup fee for Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        convenienceFee:
                          amount: 217
                    recurringOrder:
                      amount: 4999
                      description: Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        convenienceFee:
                          amount: 217
                    currentState:
                      status: active
                      nextDueDate: '2024-08-02'
                      paidInvoices: 0
                      outstandingInvoices: 3
                    startDate: '2024-07-02'
                    endDate: '2025-07-01'
                    length: 12
                    type: automatic
                    frequency: monthly
                    pauseCollectionFor: 0
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Subscriptions
      summary: List subscriptions
      description: "Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of subscriptions.  \n\nNote: If you want to view a specific subscription and you have its subscriptionId, use our [Retrieve subscription](https://docs.payroc.com/api/schema/payments/subscriptions/retrieve) method.  \n\nUse query parameters to filter the list of results that we return, for example, to search for subscriptions for a customer, a payment plan, or frequency.  \n\nOur gateway returns information about the following for each subscription in the list:  \n\n-\tPayment plan the subscription is linked to.  \n-\tSecure token that represents cardholder’s payment details.  \n-\tCurrent state of the subscription, including its status, next due date, and invoices.  \n-\tFees for setup and the cost of the recurring order.  \n-\tSubscription length, end date, and frequency.  \n\nFor each subscription, we also return the subscriptionId, the paymentPlanId, and the secureTokenId, which you can use to perform follow-actions. \n"
      operationId: listSubscriptions
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: customerName
          in: query
          description: Filter by the customer's name.
          schema:
            maxLength: 50
            minLength: 1
            type: string
          examples:
            example:
              value: Sarah%20Hazel%20Hopper
        - name: last4
          in: query
          description: Filter by the last four digits of the card or account number.
          schema:
            pattern: '[0-9]{4}'
            type: string
          examples:
            example:
              value: '7062'
        - name: paymentPlan
          in: query
          description: Filter by the name of the payment plan.
          schema: &ref_367
            maxLength: 128
            minLength: 1
            type: string
          examples: &ref_368
            example:
              value: Premium%20Club
        - name: frequency
          in: query
          description: Filter by the frequency of subscription payments.
          schema: &ref_369
            type: string
            enum:
              - weekly
              - fortnightly
              - monthly
              - quarterly
              - yearly
          examples: &ref_370
            example:
              value: monthly
        - name: status
          in: query
          description: Filter by the current status of the subscription.
          schema: &ref_371
            type: string
            enum:
              - active
              - completed
              - suspended
              - cancelled
          examples: &ref_372
            example:
              value: active
        - name: endDate
          in: query
          description: |
            Format: `YYYY-MM-DD`  
            Filter subscriptions that end on a specific date.
          schema: &ref_373
            type: string
            format: date
          examples: &ref_374
            example:
              value: '2025-07-01'
        - name: nextDueDate
          in: query
          description: |
            Format: `YYYY-MM-DD`  
            Filter subscriptions by the date that the next payment is collected.
          schema: &ref_375
            type: string
            format: date
          examples: &ref_376
            example:
              value: '2024-08-01'
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a paginated list of subscriptions.
          content:
            application/json:
              schema:
                required: &ref_603
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_604
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of subscriptions.
                        items:
                          required: *ref_126
                          type: object
                          properties: *ref_127
              examples:
                paginatedResults:
                  summary: Paginated Subscription
                  description: Example of Paginated Subscription
                  value: &ref_861
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - subscriptionId: SubRef7654
                        processingTerminalId: '1234001'
                        paymentPlan:
                          paymentPlanId: PlanRef8765
                          name: Monthly Premium Club subscription
                          link:
                            rel: self
                            method: GET
                            href: https://api.payroc.com/v1/processing-terminals/1234001/payment-plans/PlanRef8765
                        secureToken:
                          secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                          customerName: Sarah Hazel Hopper
                          token: '296753123456'
                          status: notValidated
                          link:
                            rel: self
                            method: GET
                            href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                        name: Premium Club
                        description: Monthly Premium Club subscription
                        currency: USD
                        setupOrder:
                          orderId: OrderRef6543
                          amount: 4999
                          description: Initial setup fee for Premium Club subscription
                        recurringOrder:
                          amount: 4999
                        currentState:
                          status: active
                          nextDueDate: '2024-08-02'
                          paidInvoices: 1
                          outstandingInvoices: 11
                        startDate: '2024-07-02'
                        endDate: '2025-08-01'
                        length: 0
                        type: automatic
                        frequency: monthly
                        pauseCollectionFor: 0
                      - subscriptionId: SubRef8543
                        processingTerminalId: '1234001'
                        paymentPlan:
                          paymentPlanId: PlanRef7654
                          name: Pie it Forward charitable trust donation
                          link:
                            rel: self
                            method: GET
                            href: https://api.payroc.com/v1/processing-terminals/1234001/payment-plans/PlanRef7654
                        secureToken:
                          secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                          customerName: Sarah Hazel Hopper
                          token: '296753123456'
                          status: notValidated
                          link:
                            rel: self
                            method: GET
                            href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                        name: Pie It Forward
                        description: Pie It Forward charitable trust donation
                        currency: USD
                        setupOrder:
                          orderId: OrderRef7654
                          amount: 3999
                        recurringOrder:
                          amount: 3999
                        currentState:
                          status: active
                          nextDueDate: '2024-04-11'
                          paidInvoices: 1
                          outstandingInvoices: 11
                        startDate: '2024-07-02'
                        endDate: '2024-07-02'
                        length: 0
                        type: automatic
                        frequency: yearly
                        pauseCollectionFor: 0
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1234001/subscriptions?limit=2&after=SubRef8543
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1234001/subscriptions?limit=2&before=SubRef7654
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/subscriptions/{subscriptionId}:
    get:
      tags:
        - Subscriptions
      summary: Retrieve subscription
      description: "Use this method to retrieve information about a subscription.  \n\nTo retrieve a subscription, you need its subscriptionId. You sent the subscriptionId in the request of the [Create subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create) method.  \n\n**Note:** If you don't have the subscriptionId, use our [List subscriptions](https://docs.payroc.com/api/schema/payments/subscriptions/list) method to search for the subscription.  \n\nOur gateway returns information about the following for the subscription:  \n\n-\tPayment plan the subscription is linked to.  \n-\tSecure token that represents cardholder’s payment details.  \n-\tCurrent state of the subscription, including its status, next due date, and invoices.  \n-\tFees for setup and the cost of the recurring order.  \n-\tSubscription length, end date, and frequency.  \n\nWe also return the paymentPlanId and the secureTokenId, which you can use to perform follow-on actions.  \n"
      operationId: getSubscription
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: subscriptionId
          in: path
          description: Unique identifier that the merchant assigned to the subscription.
          required: true
          schema: &ref_130
            maxLength: 48
            minLength: 1
            type: string
          examples: &ref_131
            example:
              value: SubRef7654
      responses:
        '200':
          description: Successful request. Returns the requested subscription.
          content:
            application/json:
              schema:
                required: *ref_126
                type: object
                properties: *ref_127
              examples:
                subscriptionWithSurcharge:
                  summary: Subscription with surcharge
                  description: Subscription with surcharge
                  value: *ref_128
                subscriptionWithConvenienceFee:
                  summary: Subscription with convenience fee
                  description: Subscription with convenience fee
                  value: *ref_129
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      tags:
        - Subscriptions
      summary: Partially update subscription
      description: |
        Use this method to partially update a subscription. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.  

        To update a subscription, you need its subscriptionId, which you sent in the request of the [Create subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create) method.  

        **Note:** If you don't have the subscriptionId, use our [List subscriptions](https://docs.payroc.com/api/schema/payments/subscriptions/list) method to search for the payment.  

        You can update all of the properties of the subscription except for the following:  

        **Can't delete**  
        - recurringOrder
        - description
        - name

        **Can't perform any PATCH operation**  
        - currentState
        - type
        - frequency
        - paymentPlan
      operationId: updateSubscription
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: subscriptionId
          in: path
          description: Unique identifier that the merchant assigned to the subscription.
          required: true
          schema: *ref_130
          examples: *ref_131
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: *ref_100
              example: *ref_101
            examples:
              patchSubscriptionRealistic:
                summary: Update subscription
                description: |
                  Make changes to a subscription.

                  Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
                value: &ref_863
                  - op: replace
                    path: /setupOrder/amount
                    value: 2999
                  - op: replace
                    path: /recurringOrder/amount
                    value: 2999
                  - op: replace
                    path: /frequency
                    value: yearly
              patchOperations:
                summary: Example patch operations that apply the RFC 6902 standard
                description: |
                  Example patch operations that apply the RFC 6902 standard.
                value: *ref_102
      responses:
        '200':
          description: Successful request. We have updated the subscription.
          content:
            application/json:
              schema:
                required: *ref_126
                type: object
                properties: *ref_127
              examples:
                subscriptionWithSurcharge:
                  summary: Subscription with surcharge
                  description: Subscription with surcharge
                  value: *ref_128
                subscriptionWithConvenienceFee:
                  summary: Subscription with convenience fee
                  description: Subscription with convenience fee
                  value: *ref_129
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/subscriptions/{subscriptionId}/deactivate:
    post:
      tags:
        - Subscriptions
      summary: Deactivate subscription
      description: |
        Use this method to deactivate a subscription.  

        To deactivate a subscription, you need its subscriptionId, which you sent in the request of the [Create Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create) method.  

        **Note:** If you don't have the subscriptionId, use our [List Subscriptions](https://docs.payroc.com/api/schema/payments/subscriptions/list) method to search for the subscription.  

        If your request is successful, our gateway stops taking payments from the customer.  

        To reactivate the subscription, use our [Reactivate Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/reactivate) method.
      operationId: deactivateSubscription
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: subscriptionId
          in: path
          description: Unique identifier that the merchant assigned to the subscription.
          required: true
          schema: *ref_130
          examples: *ref_131
      responses:
        '200':
          description: Successful request. We deactivated the subscription.
          content:
            application/problem+json:
              schema:
                required: *ref_126
                type: object
                properties: *ref_127
              examples:
                deactivateSubscription:
                  summary: Deactivate subscription
                  description: Deactivate a subscription
                  value: &ref_864
                    subscriptionId: SubRef7654
                    processingTerminalId: '1234001'
                    paymentPlan:
                      paymentPlanId: PlanRef8765
                      name: Monthly Premium Club subscription
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/payment-plans/PlanRef8765
                    secureToken:
                      secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                      customerName: Sarah Hazel Hopper
                      token: '296753123456'
                      status: notValidated
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    name: Premium Club
                    description: Monthly Premium Club subscription
                    currency: USD
                    setupOrder:
                      orderId: OrderRef6543
                      amount: 4999
                      description: Initial setup fee for Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        surcharge:
                          amount: 217
                          percentage: 5
                    recurringOrder:
                      amount: 4999
                      description: Monthly Premium Club subscription
                      breakdown:
                        subtotal: 4347
                        taxes:
                          - name: Sales Tax
                            rate: 5
                        surcharge:
                          amount: 217
                          percentage: 5
                    currentState:
                      status: cancelled
                      nextDueDate: '2024-08-02'
                      paidInvoices: 0
                      outstandingInvoices: 3
                    startDate: '2024-07-02'
                    endDate: '2025-07-01'
                    length: 12
                    type: automatic
                    frequency: monthly
                    pauseCollectionFor: 0
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/subscriptions/{subscriptionId}/reactivate:
    post:
      tags:
        - Subscriptions
      summary: Re-activate subscription
      description: |
        Use this method to reactivate a subscription.  

        To reactivate a subscription, you need its subscriptionId, which you sent in the request of the [Create Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create) method.  

        **Note:** If you don't have the subscriptionId, use our [List Subscriptions](https://docs.payroc.com/api/schema/payments/subscriptions/list) method to search for the subscription.  

        If your request is successful, our gateway restarts taking payments from the customer.  

        To deactivate the subscription, use our [Deactivate Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/deactivate) method.
      operationId: reactivateSubscription
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: subscriptionId
          in: path
          description: Unique identifier that the merchant assigned to the subscription.
          required: true
          schema: *ref_130
          examples: *ref_131
      responses:
        '200':
          description: Successful request. We re-activated the subscription.
          content:
            application/json:
              schema:
                required: *ref_126
                type: object
                properties: *ref_127
              examples:
                subscriptionWithSurcharge:
                  summary: Subscription with surcharge
                  description: Subscription with surcharge
                  value: *ref_128
                subscriptionWithConvenienceFee:
                  summary: Subscription with convenience fee
                  description: Subscription with convenience fee
                  value: *ref_129
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/subscriptions/{subscriptionId}/pay:
    post:
      tags:
        - Subscriptions
      summary: Pay manual subscription
      description: |
        Use this method to manually collect a payment linked to a subscription. You can manually collect a payment only if the merchant chose not to let our gateway automatically collect each payment.  

        To manually collect a payment, you need the subscriptionId of the subscription that's linked to the payment. You sent the subscriptionId in the request of the [Create Subscription](https://docs.payroc.com/api/schema/payments/subscriptions/create) method.  

        **Note:** If you don't have the subscriptionId, use our [List Subscriptions](https://docs.payroc.com/api/schema/payments/subscriptions/list) method to search for the subscription.  

        The request includes an order object that contains information about the amount that you want to collect.  

        In the response, our gateway returns information about the payment and a paymentId. You can use the paymentId in follow-on actions with the [Payments](https://docs.payroc.com/api/schema/payments) endpoints or [Bank Transfer Payments](https://docs.payroc.com/api/schema/payments/bank-transfer-payments) endpoints.  
      operationId: paySubscription
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: subscriptionId
          in: path
          description: Unique identifier that the merchant assigned to the subscription.
          required: true
          schema: *ref_130
          examples: *ref_131
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_607
                - order
              properties: &ref_608
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                order:
                  description: Object that contains information about the payment.
                  type: object
                  properties: *ref_122
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              subscriptionPaymentRequest:
                summary: Subscription manual payment
                description: Subscription manual payment
                value: &ref_865
                  operator: Jane
                  order:
                    amount: 4999
                    description: Monthly Premium Club subscription
                    breakdown:
                      subtotal: 4999
                      taxes:
                        - name: Sales Tax
                          rate: 5
                    orderId: OrderRef6543
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We have processed the payment for the subscription.
          content:
            application/json:
              schema:
                required: &ref_609
                  - subscriptionId
                  - processingTerminalId
                  - payment
                  - secureToken
                  - currentState
                type: object
                properties: &ref_610
                  subscriptionId:
                    type: string
                    description: Unique identifier that the merchant assigned to the subscription.
                    example: SubRef7654
                  processingTerminalId:
                    type: string
                    description: Unique identifier of the terminal that the subscription is linked to.
                    example: '1234001'
                  payment:
                    required: &ref_218
                      - amount
                      - currency
                      - dateTime
                      - paymentId
                      - status
                      - responseCode
                      - responseMessage
                    type: object
                    description: Object that contains information about a payment.
                    properties: &ref_219
                      paymentId:
                        maxLength: 10
                        minLength: 10
                        type: string
                        description: Unique identifier of the payment.
                        example: M2MJOG6O2Y
                      dateTime:
                        type: string
                        format: date-time
                        description: Date and time that the payment was processed.
                        example: '2024-07-02T15:30:00Z'
                      currency:
                        type: string
                        description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                        enum: *ref_82
                      amount:
                        type: integer
                        format: int64
                        description: Amount of the payment. This value is in the currency’s lowest denomination, for example, cents.
                        example: 4999
                      status:
                        type: string
                        description: Current status of the payment.
                        enum:
                          - ready
                          - pending
                          - declined
                          - complete
                          - referral
                          - pickup
                          - reversal
                          - returned
                          - admin
                          - expired
                          - accepted
                        example: complete
                      responseCode:
                        type: string
                        description: |
                          Response from the processor.  
                          - `A` - The processor approved the transaction.  
                          - `D` - The processor declined the transaction.  
                          - `E` - The processor received the transaction but will process the transaction later.  
                          - `P` - The processor authorized a portion of the original amount of the transaction.  
                          - `R` - The issuer declined the transaction and indicated that the customer should contact their bank.  
                          - `C` - The issuer declined the transaction and indicated that the merchant should keep the card as it was reported lost or stolen.
                        enum:
                          - A
                          - D
                          - E
                          - P
                          - R
                          - C
                        example: A
                      responseMessage:
                        maxLength: 48
                        minLength: 1
                        type: string
                        description: Response description from the processor.
                        example: Transaction approved
                      link:
                        type: object
                        readOnly: true
                        description: Object that contains HATEOAS links for the resource.
                        properties: *ref_4
                        required: *ref_5
                        example: *ref_6
                  secureToken:
                    required: *ref_132
                    type: object
                    description: Object that contains information about the secure token.
                    properties: *ref_133
                  currentState:
                    required: *ref_134
                    type: object
                    description: A snapshot of the subscription's current state.
                    properties: *ref_135
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                subscriptionPaymentResponse:
                  summary: Subscription manual payment
                  description: Subscription manual payment
                  value: &ref_866
                    subscriptionId: SubRef7654
                    processingTerminalId: '1234001'
                    payment:
                      paymentId: M2MJOG6O2Y
                      dateTime: '2024-07-02T15:30:00Z'
                      amount: 4999
                      currency: USD
                      status: ready
                      responseCode: A
                      responseMessage: Transaction approved
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/bank-transfer-payments/M2MJOG6O2Y
                    secureToken:
                      secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                      customerName: Sarah Hazel Hopper
                      token: '296753123456'
                      status: notValidated
                      link:
                        rel: self
                        method: GET
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    currentState:
                      status: active
                      nextDueDate: '2024-08-02'
                      paidInvoices: 1
                      outstandingInvoices: 2
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/secure-tokens:
    post:
      tags:
        - Secure tokens
      summary: Create secure token
      description: |
        Use this method to create a secure token that represents a customer's payment details.  

        When you create a secure token, you need to generate and provide a secureTokenId that you use to run follow-on actions:  
        - [Retrieve Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/retrieve) – View the details of the secure token.  
        - [Delete Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/delete) – Delete the secure token.  
        - [Update Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/partially-update) – Update the details of the secure token.  
        - [Update Account Details](https://docs.payroc.com/api/schema/payments/secure-tokens/update-account) – Update the secure token with the details from a single-use token.  

        **Note:** If you don't generate a secureTokenId to identify the token, our gateway generates a unique identifier and returns it in the response.  

        If the request is successful, our gateway returns a token that the merchant can use in transactions instead of the customer's sensitive payment details, for example, when they [run a sale](https://docs.payroc.com/api/schema/payments/create).
      operationId: createSecureToken
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_639
                - source
              type: object
              properties: &ref_640
                secureTokenId:
                  maxLength: 200
                  minLength: 1
                  type: string
                  description: |
                    Unique identifier that the merchant created for the secure token that represents the customer's payment details. 
                    If the merchant doesn't create a secureTokenId, the gateway generates one and returns it in the response.
                  example: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                operator:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: Operator who saved the customer's payment details.
                  example: Jane
                mitAgreement:
                  type: string
                  description: |
                    Indicates how the merchant can use the customer's card details, as agreed by the customer:  

                    - `unscheduled` - Transactions for a fixed or variable amount that are run at a certain pre-defined event.  
                    - `recurring` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Recurring transactions don't have a fixed duration and run until the customer cancels the agreement.  
                    - `installment` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Installment transactions have a fixed duration.
                  enum:
                    - unscheduled
                    - recurring
                    - installment
                  example: recurring
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: &ref_144
                    firstName:
                      type: string
                      description: Customer's first name.
                      maxLength: 60
                      minLength: 0
                      example: Sarah
                    lastName:
                      type: string
                      description: Customer's last name.
                      maxLength: 60
                      minLength: 0
                      example: Hopper
                    dateOfBirth:
                      type: string
                      format: date
                      description: Customer's date of birth. The format for this value is **YYYY-MM-DD**.
                      example: '1990-07-15'
                    referenceNumber:
                      type: string
                      description: |
                        Identifier of the transaction, also known as a customer code. 

                        For requests, you must send a value for **referenceNumber** if the customer provides one. 
                      maxLength: 48
                      minLength: 0
                      example: CustomerCode234567
                    billingAddress:
                      description: Object that contains information about the address that the card is registered to.
                      required: *ref_0
                      type: object
                      title: address
                      properties: *ref_1
                    shippingAddress:
                      description: Object that contains information about the customer and their shipping address.
                      type: object
                      properties: &ref_196
                        recipientName:
                          maxLength: 50
                          minLength: 0
                          type: string
                          description: Recipient's name.
                          example: Sarah Hopper
                        address:
                          required: *ref_0
                          type: object
                          title: address
                          description: Object that contains information about the address.
                          properties: *ref_1
                    contactMethods:
                      type: array
                      uniqueItems: true
                      description: Customer's contact information.
                      items:
                        discriminator: *ref_2
                        oneOf: *ref_3
                    notificationLanguage:
                      type: string
                      format: iso-639-1
                      description: |
                        Language that the customer uses for notifications. This code follows the [ISO 639-1](https://www.iso.org/iso-639-language-code) alpha-2 standard. 
                      enum:
                        - en
                        - fr
                      maxLength: 2
                      minLength: 2
                      example: en
                ipAddress:
                  required: &ref_166
                    - type
                    - value
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: &ref_167
                    type:
                      type: string
                      description: Internet protocol version of the IP address.
                      enum:
                        - ipv4
                        - ipv6
                    value:
                      type: string
                      description: IP address of the device.
                source:
                  description: Object that contains information about the payment method to tokenize.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      pad: '#/components/schemas/padPayload'
                      card: '#/components/schemas/cardPayload'
                      singleUseToken: '#/components/schemas/singleUseTokenPayload'
                  oneOf:
                    - required: &ref_157
                        - type
                        - accountNumber
                        - nameOnAccount
                        - routingNumber
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: &ref_158
                        type:
                          type: string
                          description: |
                            Indicates the type of bank account details the customer is using:  
                            - **ACH** - Customer's bank account is in the United States.  
                            - **PAD** - Customer's bank account is in Canada.  
                          enum:
                            - ach
                          example: ach
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  

                            **Note:** For bank account details, send a value for accountType.
                          enum:
                            - checking
                            - savings
                          example: checking
                        secCode:
                          type: string
                          description: |
                            Indicates how the customer authorized the ACH transaction. Send one of the following values:  

                            - `web` – Online transaction.  
                            - `tel` – Telephone transaction.  
                            - `ccd` – Corporate credit card or debit card transaction.  
                            - `ppd` – Pre-arranged transaction. 
                          enum:
                            - web
                            - tel
                            - ccd
                            - ppd
                          example: web
                        nameOnAccount:
                          maxLength: 50
                          minLength: 1
                          type: string
                          description: Customer's name.
                          example: Shara Hazel Hopper
                        accountNumber:
                          maxLength: 17
                          minLength: 4
                          pattern: ^[0-9]*$
                          type: string
                          description: |
                            Customer’s bank account number.  
                            **Note:** In responses, our gateway shows only the last four digits of the account number, for example, `*****5929`.
                          example: '1234567890'
                        routingNumber:
                          maxLength: 9
                          minLength: 9
                          pattern: ^[0-9]*$
                          type: string
                          description: Nine-digit number that identifies the customer's bank.
                          example: '123456789'
                    - required: &ref_159
                        - type
                        - nameOnAccount
                        - accountNumber
                        - transitNumber
                        - institutionNumber
                      type: object
                      writeOnly: true
                      title: PAD
                      description: Object that contains information about the payment details for the customer’s preauthorized electronic debit (PAD) transactions.
                      properties: &ref_160
                        type:
                          type: string
                          description: |
                            Indicates the type of bank account details the customer is using:  
                            - **ACH** - Customer's bank account is in the United States.  
                            - **PAD** - Customer's bank account is in Canada.  
                          enum:
                            - pad
                          example: pad
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  
                            **Note:** For bank account details, send a value for accountType.
                          enum:
                            - checking
                            - savings
                          example: checking
                        nameOnAccount:
                          maxLength: 29
                          minLength: 1
                          type: string
                          description: Customer's name.
                          example: Sarah Hazel Hopper
                        accountNumber:
                          maxLength: 12
                          minLength: 7
                          pattern: ^[0-9]*$
                          type: string
                          description: |
                            Customer's account number.  
                            **Note:** In responses, our gateway shows only the last four digits of the account number, for example, `*****5929`.
                          example: '1234567890'
                        transitNumber:
                          maxLength: 5
                          minLength: 5
                          pattern: ^[0-9]*$
                          type: string
                          description: Five-digit number that identifies the customer's bank branch.
                          example: '76543'
                        institutionNumber:
                          maxLength: 3
                          minLength: 3
                          pattern: ^[0-9]*$
                          type: string
                          description: Three-digit number that identifies the customer's bank.
                          example: '543'
                    - required: &ref_161
                        - type
                        - cardDetails
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: &ref_162
                        type:
                          type: string
                          description: Method that the terminal used to take the payment.
                          enum:
                            - card
                          example: card
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  

                            **Note:** Send a value for accountType only for bank account details.
                          enum:
                            - checking
                            - savings
                          example: checking
                        cardDetails:
                          type: object
                          description: Object that contains the details of the payment card.
                          discriminator:
                            propertyName: entryMethod
                            mapping:
                              raw: '#/components/schemas/rawCardDetails'
                              icc: '#/components/schemas/iccCardDetails'
                              keyed: '#/components/schemas/keyedCardDetails'
                              swiped: '#/components/schemas/swipedCardDetails'
                          oneOf:
                            - required: &ref_617
                                - entryMethod
                                - device
                                - rawData
                              type: object
                              title: Raw
                              description: Object that contains information about the unencrypted card details.
                              properties: &ref_618
                                entryMethod:
                                  type: string
                                  description: Method that the terminal used to capture the card details.
                                  enum:
                                    - raw
                                  example: raw
                                downgradeTo:
                                  type: string
                                  description: |
                                    If an offline transaction is not approved using the initial entry method, reprocess the transaction using a downgraded entry method.
                                    For example, an Integrated Circuit Card (ICC) transaction can be downgraded to a swiped transaction or to a keyed transaction.
                                  enum:
                                    - keyed
                                    - swiped
                                  example: swiped
                                device:
                                  required: &ref_136
                                    - model
                                    - serialNumber
                                  type: object
                                  description: Object that contains information about the physical device the merchant used to capture the customer’s card details.
                                  properties: &ref_137
                                    model:
                                      type: string
                                      description: Model of the device that the merchant used to process the transaction.
                                      enum:
                                        - bbposChp
                                        - bbposChp2x
                                        - bbposChp3x
                                        - bbposRambler
                                        - bbposWp
                                        - bbposWp2
                                        - bbposWp3
                                        - genericCtlsMsr
                                        - genericMsr
                                        - idtechAugusta
                                        - idtechMinismart
                                        - idtechSredkey
                                        - idtechVp3300
                                        - idtechVp5300
                                        - idtechVp6300
                                        - idtechVp6800
                                        - ingenicoAxiumDx4000
                                        - ingenicoAxiumDx8000
                                        - ingenicoAxiumEx8000
                                        - ingenicoIct220
                                        - ingenicoIpp320
                                        - ingenicoIpp350
                                        - ingenicoIuc285
                                        - ingenicoL3000
                                        - ingenicoL7000
                                        - ingenicoS2000
                                        - ingenicoS3000
                                        - ingenicoS4000
                                        - ingenicoS5000
                                        - ingenicoS7000
                                        - paxA80
                                        - paxA920
                                        - paxA920Pro
                                        - paxE500
                                        - paxE700
                                        - paxE800
                                        - paxIm30
                                        - uic680
                                        - uicBezel8
                                      example: paxA920
                                    category:
                                      type: string
                                      description: Indicates if the device is attended or unattended.
                                      enum:
                                        - attended
                                        - unattended
                                      default: attended
                                      example: attended
                                    serialNumber:
                                      maxLength: 64
                                      minLength: 1
                                      type: string
                                      description: Serial number of the physical device.
                                      example: '1850010868'
                                    firmwareVersion:
                                      type: string
                                      description: Firmware version of the physical device.
                                      example: v1.2.3
                                    config:
                                      required: &ref_615
                                        - quickChip
                                      type: object
                                      description: Object that contains information about the configuration of the POS terminal.
                                      properties: &ref_616
                                        quickChip:
                                          type: boolean
                                          default: false
                                          description: Indicates if Quick Chip mode is active on a merchant’s POS terminal.
                                          example: false
                                rawData:
                                  maxLength: 2147483647
                                  minLength: 1
                                  type: string
                                  format: hexadecimal
                                  description: Unencrypted data from the POS terminal.
                                  example: A1B2C3D4E5F67890ABCD1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
                                cardholderSignature:
                                  type: string
                                  description: Cardholder's signature. For more information about how to format the signature, go to [How to send a signature to our gateway](/knowledge/basic-concepts/signature-capture).
                                  example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                            - required: &ref_619
                                - entryMethod
                                - device
                                - iccData
                              type: object
                              title: Chip
                              description: Object that contains information about the Integrated Circuit Card (ICC).
                              properties: &ref_620
                                entryMethod:
                                  type: string
                                  description: Method that the terminal used to capture the card details.
                                  enum:
                                    - icc
                                  example: icc
                                downgradeTo:
                                  type: string
                                  description: |
                                    If an offline transaction is not approved using the initial entry method, reprocess the transaction using a downgraded entry method. 
                                    For example, an Integrated Circuit Card (ICC) transaction can be downgraded to a swiped transaction or a keyed transaction.
                                  enum:
                                    - keyed
                                    - swiped
                                  example: swiped
                                device:
                                  required: &ref_138
                                    - model
                                    - dataKsn
                                    - serialNumber
                                  type: object
                                  description: Object that contains information about the encryption details of the POS terminal.
                                  allOf: &ref_139
                                    - required: *ref_136
                                      type: object
                                      description: Object that contains information about the physical device the merchant used to capture the customer’s card details.
                                      properties: *ref_137
                                    - type: object
                                      properties:
                                        dataKsn:
                                          maxLength: 20
                                          minLength: 20
                                          type: string
                                          format: hexadecimal
                                          description: Key serial number.
                                          example: A1B2C3D4E5F67890ABCD
                                iccData:
                                  type: string
                                  format: hexadecimal
                                  description: Cardholder data from the ICC. The data consists of EMV tags in Tag-Length-Value (TLV) format.
                                  example: 5A08476173921001010F
                                firstDigitOfPan:
                                  maxLength: 1
                                  minLength: 1
                                  type: string
                                  description: First digit of the card number.
                                  example: '4'
                                cardholderSignature:
                                  type: string
                                  description: Cardholder's signature. For more information about how to format the signature, go to [How to send a signature to our gateway](/knowledge/basic-concepts/signature-capture).
                                  example: 012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k1a1b1c0000
                            - required: &ref_629
                                - entryMethod
                                - keyedData
                              type: object
                              title: Keyed
                              description: Object that contains information about the keyed card details.
                              properties: &ref_630
                                entryMethod:
                                  type: string
                                  description: Method that the terminal used to capture the card details.
                                  enum:
                                    - keyed
                                  example: keyed
                                keyedData:
                                  type: object
                                  discriminator:
                                    propertyName: dataFormat
                                    mapping:
                                      fullyEncrypted: '#/components/schemas/fullyEncryptedKeyedDataFormat'
                                      partiallyEncrypted: '#/components/schemas/partiallyEncryptedKeyedDataFormat'
                                      plainText: '#/components/schemas/plainTextKeyedDataFormat'
                                  oneOf:
                                    - required: &ref_621
                                        - dataFormat
                                        - device
                                        - encryptedData
                                      type: object
                                      title: Encrypted
                                      description: Object that contains information about the encrypted card data for keyed transactions.
                                      properties: &ref_622
                                        dataFormat:
                                          type: string
                                          description: "Indicates the data format of the customer’s card data.\n-\t`plainText` – Data is not truncated and shows the raw data.\n-\t`fullyEncrypted` – Data is truncated to show only the first digit of the customer’s account number.\n-\t`partiallyEncrypted` – Data is truncated to show only the first six digits and the last four digits of the customer’s card number.\n"
                                          enum:
                                            - fullyEncrypted
                                          example: fullyEncrypted
                                        device:
                                          required: *ref_138
                                          type: object
                                          description: Object that contains information about the encryption details of the POS terminal.
                                          allOf: *ref_139
                                        encryptedData:
                                          maxLength: 2147483647
                                          minLength: 1
                                          type: string
                                          description: Encrypted card data.
                                          format: hexadecimal
                                          example: A1B2C3D4E5F67890ABCD1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
                                        firstDigitOfPan:
                                          maxLength: 1
                                          minLength: 1
                                          type: string
                                          description: First digit of the customer’s card number.
                                          example: '4'
                                    - required: &ref_623
                                        - dataFormat
                                        - device
                                        - encryptedPan
                                        - expiryDate
                                        - maskedPan
                                      type: object
                                      title: Partially encrypted
                                      description: Object that contains information about the partially-encrypted card data for keyed transactions.
                                      properties: &ref_624
                                        dataFormat:
                                          type: string
                                          description: "Indicates the data format of the customer’s card data.\n-\t`plainText` – Data is not truncated and shows the raw data.\n-\t`fullyEncrypted` – Data is truncated to show only the first digit of the customer’s account number.\n-\t`partiallyEncrypted` – Data is truncated to show only the first six digits and the last four digits of the customer’s card number.\n"
                                          enum:
                                            - partiallyEncrypted
                                          example: partiallyEncrypted
                                        device:
                                          required: *ref_138
                                          type: object
                                          description: Object that contains information about the encryption details of the POS terminal.
                                          allOf: *ref_139
                                        encryptedPan:
                                          maxLength: 2147483647
                                          minLength: 1
                                          type: string
                                          format: hexadecimal
                                          description: Encrypted card number.
                                          example: A1B2C3D4E5F67890ABCD1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
                                        maskedPan:
                                          maxLength: 19
                                          minLength: 12
                                          type: string
                                          description: |
                                            Masked card number. 
                                            The gateway shows only the first six digits and the last four digits of the account number. For example, `453985******7062`.
                                          example: 453985******7062
                                        expiryDate:
                                          pattern: '[0-9]{4}'
                                          type: string
                                          description: Expiry date of the customer’s card.
                                          example: '1225'
                                        cvv:
                                          pattern: '[0-9]{3,4}'
                                          type: string
                                          description: Security code of the customer’s card.
                                          example: '234'
                                        cvvEncrypted:
                                          type: string
                                          format: hexadecimal
                                          description: Encrypted security code data.
                                        issueNumber:
                                          pattern: '[0-9]{1,2}'
                                          type: string
                                          description: Issue number of the customer’s card.
                                          example: '78'
                                    - required: &ref_625
                                        - dataFormat
                                        - cardNumber
                                      type: object
                                      title: Unencrypted
                                      description: Object that contains information about the plain-text card data for keyed transactions.
                                      properties: &ref_626
                                        dataFormat:
                                          type: string
                                          description: "Indicates the data format of the customer’s card data.\n-\t`plainText` – Data is not truncated and shows the raw data.\n-\t`fullyEncrypted` – Data is truncated to show only the first digit of the customer’s account number.\n-\t`partiallyEncrypted` – Data is truncated to show only the first six digits and the last four digits of the customer’s card number.\n"
                                          enum:
                                            - plainText
                                          example: plainText
                                        device:
                                          required: *ref_136
                                          type: object
                                          description: Object that contains information about the physical device the merchant used to capture the customer’s card details.
                                          properties: *ref_137
                                        cardNumber:
                                          maxLength: 19
                                          minLength: 12
                                          type: string
                                          description: Customer’s card number.
                                          example: '4539858876047062'
                                        expiryDate:
                                          pattern: '[0-9]{4}'
                                          type: string
                                          description: |
                                            Expiry date of the customer’s card.  
                                            **Note:** We require you to send an expiry date for most BIN lookups and electronic voucher transactions.
                                          example: '1225'
                                        cvv:
                                          pattern: '[0-9]{3,4}'
                                          type: string
                                          description: Security code of the customer’s card.
                                          example: '234'
                                        issueNumber:
                                          pattern: '[0-9]{1,2}'
                                          type: string
                                          description: Issue number of the customer’s card.
                                          example: '78'
                                cardholderName:
                                  maxLength: 50
                                  minLength: 1
                                  type: string
                                  description: Cardholder’s name.
                                  example: Sarah Hazel Hopper
                                cardholderSignature:
                                  type: string
                                  description: Cardholder's signature. For more information about how to format the signature, go to [How to send a signature to our gateway](/knowledge/basic-concepts/signature-capture).
                                  example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                                pinDetails:
                                  type: object
                                  discriminator:
                                    propertyName: dataFormat
                                    mapping:
                                      dukpt: '#/components/schemas/dukptPinDetails'
                                  oneOf:
                                    - required: &ref_140
                                        - dataFormat
                                        - pin
                                        - pinKsn
                                      type: object
                                      title: Encrypted
                                      description: Object that contains information about encrypted PIN details.
                                      properties: &ref_141
                                        dataFormat:
                                          type: string
                                          description: Indicates the format of the PIN data.
                                          enum:
                                            - dukpt
                                          example: dukpt
                                        pin:
                                          maxLength: 2147483647
                                          minLength: 1
                                          type: string
                                          description: |
                                            Encrypted PIN.  
                                            **Note:** PIN is encrypted using the DUKPT scheme.
                                          format: hexadecimal
                                          example: A1B2C3D4E5F67890ABCD1234567890ABCDEF
                                        pinKsn:
                                          maxLength: 20
                                          minLength: 20
                                          type: string
                                          description: Key serial number.
                                          format: hexadecimal
                                          example: 1234567890ABCDEF1234
                                ebtDetails:
                                  type: object
                                  required: &ref_142
                                    - benefitCategory
                                  description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                                  allOf: &ref_143
                                    - type: object
                                      required: &ref_206
                                        - benefitCategory
                                      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                                      properties: &ref_207
                                        benefitCategory:
                                          type: string
                                          description: |
                                            Indicates if the balance relates to an EBT Cash account or an EBT SNAP account.  
                                             - `cash` – EBT Cash  
                                             - `foodStamp` – EBT SNAP
                                          enum:
                                            - cash
                                            - foodStamp
                                          example: cash
                                        withdrawal:
                                          type: boolean
                                          description: |
                                            Indicates whether the customer wants to withdraw cash.  

                                            **Note:** Cash withdrawals are available only from EBT Cash accounts.
                                          example: false
                                    - type: object
                                      properties:
                                        voucher:
                                          required: &ref_627
                                            - approvalCode
                                            - serialNumber
                                          type: object
                                          description: |
                                            Object that contains information about the EBT voucher.  

                                            **Note:** Vouchers are available only for EBT SNAP payments.
                                          properties: &ref_628
                                            approvalCode:
                                              maxLength: 6
                                              minLength: 6
                                              type: string
                                              description: Authorization code that the processor issued for the transaction.
                                              example: '123456'
                                            serialNumber:
                                              maxLength: 15
                                              minLength: 7
                                              type: string
                                              description: Serial number of the voucher.
                                              example: SN123456789
                            - required: &ref_635
                                - entryMethod
                                - swipedData
                              type: object
                              title: Swiped
                              description: Object that contains information about the customer’s card details for swiped transactions.
                              properties: &ref_636
                                entryMethod:
                                  type: string
                                  description: Method that the terminal used to capture the card details.
                                  enum:
                                    - swiped
                                  example: swiped
                                downgradeTo:
                                  type: string
                                  description: |
                                    If an offline transaction is not approved using the initial entry method, reprocess the transaction using a downgraded entry method. 
                                    For example, a swiped transaction can be downgraded to a keyed transaction.
                                  enum:
                                    - keyed
                                    - swiped
                                  example: swiped
                                swipedData:
                                  type: object
                                  discriminator:
                                    propertyName: dataFormat
                                    mapping:
                                      encrypted: '#/components/schemas/encryptedSwipedDataFormat'
                                      plainText: '#/components/schemas/plainTextSwipedDataFormat'
                                  oneOf:
                                    - required: &ref_631
                                        - dataFormat
                                        - device
                                        - encryptedData
                                      type: object
                                      title: Encrypted
                                      description: Object that contains information about the encrypted swiped card data.
                                      properties: &ref_632
                                        dataFormat:
                                          type: string
                                          description: Format of the card data.
                                          enum:
                                            - encrypted
                                          example: encrypted
                                        device:
                                          required: *ref_138
                                          type: object
                                          description: Object that contains information about the encryption details of the POS terminal.
                                          allOf: *ref_139
                                        encryptedData:
                                          maxLength: 2147483647
                                          minLength: 1
                                          type: string
                                          format: hexadecimal
                                          description: Encrypted data received from the magnetic stripe reader.
                                          example: A1B2C3D4E5F67890ABCD1234567890ABCDEF1234567890ABCDEF1234567890ABCDEF
                                        firstDigitOfPan:
                                          maxLength: 1
                                          minLength: 1
                                          type: string
                                          description: First digit of the of the card number.
                                          example: '4'
                                        fallback:
                                          type: boolean
                                          description: Indicates that this is a fallback transaction. For example, if there was a technical issue with the chip on the customer's card and the merchant then swiped the card.
                                          example: true
                                        fallbackReason:
                                          type: string
                                          description: Reason for the fallback.
                                          enum:
                                            - technical
                                            - repeatFallback
                                            - emptyCandidateList
                                          example: technical
                                    - required: &ref_633
                                        - dataFormat
                                        - device
                                        - trackData
                                      type: object
                                      title: Unencrypted
                                      description: Object that contains information about plain-text swiped card data.
                                      properties: &ref_634
                                        dataFormat:
                                          type: string
                                          description: |
                                            Indicates the method the customer’s card data is encrypted.
                                            Send swiped card data in encrypted format or `plainText` format.
                                          enum:
                                            - plainText
                                          example: plainText
                                        device:
                                          required: *ref_136
                                          type: object
                                          description: Object that contains information about the physical device the merchant used to capture the customer’s card details.
                                          properties: *ref_137
                                        trackData:
                                          maxLength: 256
                                          minLength: 16
                                          type: string
                                          description: Customer’s card data from the swiped transaction.
                                          example: '1234567890123456789012345678901234567890'
                                        fallback:
                                          type: boolean
                                          description: Indicates that this is a fallback transaction. For example, if there was a technical issue with the chip on the customer's card and the merchant then swiped the card.
                                          example: true
                                        fallbackReason:
                                          type: string
                                          description: Reason for the fallback.
                                          enum:
                                            - technical
                                            - repeatFallback
                                            - emptyCandidateList
                                          example: technical
                                cardholderName:
                                  maxLength: 50
                                  minLength: 0
                                  type: string
                                  description: Cardholder’s name.
                                  example: Sarah Hazel Hopper
                                cardholderSignature:
                                  type: string
                                  description: Cardholder's signature. For more information about how to format the signature, go to [How to send a signature to our gateway](/knowledge/basic-concepts/signature-capture).
                                  example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                                pinDetails:
                                  type: object
                                  discriminator:
                                    propertyName: dataFormat
                                    mapping:
                                      dukpt: '#/components/schemas/dukptPinDetails'
                                  oneOf:
                                    - required: *ref_140
                                      type: object
                                      title: Encrypted
                                      description: Object that contains information about encrypted PIN details.
                                      properties: *ref_141
                                ebtDetails:
                                  type: object
                                  required: *ref_142
                                  description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                                  allOf: *ref_143
                    - required: &ref_170
                        - type
                        - token
                      type: object
                      writeOnly: true
                      title: Single-use token
                      description: Object that contains information about the single-use token, which represents the customer’s payment details.
                      properties: &ref_171
                        type:
                          type: string
                          description: Method that the terminal used to take the payment.
                          enum:
                            - singleUseToken
                          example: singleUseToken
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  

                            **Note:** Send a value for accountType only if the single-use token represents bank account details.
                          enum:
                            - checking
                            - savings
                          example: checking
                        token:
                          maxLength: 128
                          minLength: 128
                          type: string
                          description: Unique token that the gateway assigned to the payment details.
                          example: abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
                        pinDetails:
                          type: object
                          discriminator:
                            propertyName: dataFormat
                            mapping:
                              dukpt: '#/components/schemas/dukptPinDetails'
                              raw: '#/components/schemas/rawPinDetails'
                          oneOf:
                            - required: *ref_140
                              type: object
                              title: Encrypted
                              description: Object that contains information about encrypted PIN details.
                              properties: *ref_141
                            - required: &ref_637
                                - dataFormat
                                - pin
                              type: object
                              title: Unencrypted
                              description: Object that contains information about the unencrypted PIN details.
                              properties: &ref_638
                                dataFormat:
                                  type: string
                                  description: Indicates the format of the PIN data.
                                  enum:
                                    - raw
                                  example: raw
                                pin:
                                  maxLength: 2147483647
                                  minLength: 1
                                  type: string
                                  description: Customer’s unencrypted PIN.
                                  example: '4422'
                        ebtDetails:
                          type: object
                          required: *ref_142
                          description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                          allOf: *ref_143
                        secCode:
                          type: string
                          description: |
                            Indicates how the customer authorized the ACH transaction. Send one of the following values:  

                            - `web` – Online transaction.  
                            - `tel` – Telephone transaction.  
                            - `ccd` – Corporate credit card or debit card transaction.  
                            - `ppd` – Pre-arranged transaction. 
                          enum:
                            - web
                            - tel
                            - ccd
                            - ppd
                          example: web
                threeDSecure:
                  type: object
                  description: Object that contains information for an authentication check on the customer's payment details using the 3-D Secure protocol.
                  discriminator:
                    propertyName: type
                    mapping:
                      gatewayThreeDSecure: '#/components/schemas/gatewayThreeDSecure'
                      thirdPartyThreeDSecure: '#/components/schemas/thirdPartyThreeDSecure'
                  oneOf:
                    - required: &ref_172
                        - serviceProvider
                        - mpiReference
                      type: object
                      title: Gateway
                      description: Object that contains the 3-D Secure information from our gateway.
                      properties: &ref_173
                        serviceProvider:
                          type: string
                          description: Provider of your 3-D Secure protocol.
                          enum:
                            - gateway
                          example: gateway
                        mpiReference:
                          maxLength: 20
                          minLength: 20
                          type: string
                          description: Reference that our gateway assigned to the 3-D Secure authentication response.
                          example: MPI45678901234567890
                    - required: &ref_174
                        - eci
                        - serviceProvider
                      type: object
                      title: Third party
                      description: Object that contains the 3-D Secure information from a third party.
                      properties: &ref_175
                        serviceProvider:
                          type: string
                          description: Provider of your 3-D Secure protocol.
                          enum:
                            - thirdParty
                          example: thirdParty
                        eci:
                          type: string
                          description: E-commerce indicator (ECI) result of a the 3-D Secure check.
                          enum:
                            - fullyAuthenticated
                            - attemptedAuthentication
                          example: fullyAuthenticated
                        xid:
                          maxLength: 50
                          minLength: 0
                          type: string
                          description: Unique transaction identifier that the merchant assigned to the transaction and sent in the authentication request.
                          example: VGhpcyBpcyBhbiBleGFtcGxlIFhJRA==
                        cavv:
                          maxLength: 50
                          minLength: 0
                          type: string
                          description: Cardholder Authentication Verification Value (CAVV) that the card issuer provided to prove that they authorized the online payment.
                          example: QWxhZGRpbjpvcGVuIHNlc2FtZQ==
                        dsTransactionId:
                          maxLength: 36
                          minLength: 0
                          type: string
                          description: Directory Server Transaction ID that the processor assigned to the request.
                          example: 123e4567-e89b-12d3-a456-426614174000
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              createSecureToken:
                summary: Secure Token
                description: Secure Token
                value: &ref_868
                  operator: Jane
                  mitAgreement: unscheduled
                  customer:
                    firstName: Sarah
                    lastName: Hopper
                    dateOfBirth: '1990-07-15'
                    referenceNumber: Customer-12
                    billingAddress:
                      address1: 1 Example Ave.
                      address2: Example Address Line 2
                      address3: Example Address Line 3
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    shippingAddress:
                      recipientName: Sarah Hopper
                      address:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                    contactMethods:
                      - type: email
                        value: sarah.hopper@example.com
                    notificationLanguage: en
                  ipAddress:
                    type: ipv4
                    value: 104.18.24.203
                  source:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
                        cvv: '234'
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We created a secure token that represents your customer's payment details.
          content:
            application/json:
              schema:
                required: &ref_145
                  - processingTerminalId
                  - secureTokenId
                  - source
                  - status
                  - token
                type: object
                description: Object that contains information about the secure token.
                properties: &ref_146
                  secureTokenId:
                    maxLength: 200
                    minLength: 0
                    type: string
                    description: Unique identifier that the merchant created for the secure token that represents the customer's payment details.
                    example: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  mitAgreement:
                    type: string
                    description: |
                      Indicates how the merchant can use the customer's card details, as agreed by the customer:

                      - `unscheduled` - Transactions for a fixed or variable amount that are run at a certain pre-defined event.
                      - `recurring` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Recurring transactions don't have a fixed duration and run until the customer cancels the agreement.
                      - `installment` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Installment transactions have a fixed duration.
                    enum:
                      - unscheduled
                      - recurring
                      - installment
                    example: recurring
                  customer:
                    type: object
                    description: Object that contains the customer's contact details and address information.
                    properties: *ref_144
                  source:
                    description: Object that contains information about the payment method that we tokenized.
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        ach: '#/components/schemas/achSource'
                        pad: '#/components/schemas/padSource'
                        card: '#/components/schemas/cardSource'
                    oneOf:
                      - required: &ref_147
                          - type
                          - nameOnAccount
                          - accountNumber
                          - routingNumber
                        type: object
                        title: ACH account
                        description: Object that contains the customer's account details.
                        properties: &ref_148
                          type:
                            type: string
                            enum:
                              - ach
                            example: ach
                          nameOnAccount:
                            maxLength: 50
                            minLength: 1
                            type: string
                            description: Customer's name.
                            example: Sarah Hazel Hopper
                          accountNumber:
                            maxLength: 17
                            minLength: 4
                            pattern: ^[0-9]*$
                            type: string
                            description: Customer's account number.
                            example: '123456789'
                          routingNumber:
                            maxLength: 9
                            minLength: 9
                            pattern: ^[0-9]*$
                            type: string
                            description: Routing number of the customer's account.
                            example: '123456789'
                      - required: &ref_149
                          - type
                          - nameOnAccount
                          - accountNumber
                          - transitNumber
                          - institutionNumber
                        type: object
                        title: PAD account
                        description: Object that contains the customer's account details.
                        properties: &ref_150
                          type:
                            type: string
                            enum:
                              - pad
                            example: pad
                          nameOnAccount:
                            maxLength: 29
                            minLength: 1
                            type: string
                            description: Customer's name.
                            example: Sarah Hazel Hopper
                          accountNumber:
                            maxLength: 12
                            minLength: 7
                            pattern: ^[0-9]*$
                            type: string
                            description: Customer's account number.
                            example: '1234567890'
                          transitNumber:
                            maxLength: 5
                            minLength: 5
                            pattern: ^[0-9]*$
                            type: string
                            description: Five-digit code that represents the customer's banking branch.
                            example: '76543'
                          institutionNumber:
                            maxLength: 3
                            minLength: 3
                            pattern: ^[0-9]*$
                            type: string
                            description: Three-digit code that represents the customer's bank.
                            example: '543'
                      - required: &ref_151
                          - type
                          - cardholderName
                          - cardNumber
                        type: object
                        title: Card
                        description: Object that contains the customer's card details.
                        properties: &ref_152
                          type:
                            description: Type of payment.
                            type: string
                            enum:
                              - card
                            example: card
                          cardholderName:
                            maxLength: 50
                            minLength: 1
                            type: string
                            description: Cardholder's name.
                            example: Sarah Hazel Hopper
                          cardNumber:
                            maxLength: 19
                            minLength: 12
                            type: string
                            description: Primary account number of the customer's card.
                            example: '4539858876047062'
                          expiryDate:
                            pattern: '[0-9]{4}'
                            type: string
                            description: Expiry date of the customer's card.
                            example: '1225'
                          cardType:
                            type: string
                            description: Card brand of the card, for example, Visa.
                          currency:
                            type: string
                            description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                            enum: *ref_82
                          debit:
                            type: boolean
                            description: Indicates if the card is a debit card.
                          surcharging:
                            required: &ref_239
                              - allowed
                            type: object
                            description: Object that contains surcharge information. Our gateway returns this object only if the merchant adds a surcharge to transactions.
                            properties: &ref_240
                              allowed:
                                type: boolean
                                description: Indicates if the merchant can add a surcharge when the customer uses this card.
                                example: true
                              amount:
                                exclusiveMinimum: 0
                                type: integer
                                format: int64
                                description: |
                                  Surcharge amount to add to the transaction.  
                                  **Note:** Our gateway returns the surcharge amount only if you include a transaction amount in the request.
                                example: 87
                              percentage:
                                exclusiveMinimum: 0
                                maximum: 100
                                type: number
                                format: double
                                description: Surcharge rate that the merchant configures on their account.
                                example: 3
                              disclosure:
                                type: string
                                description: Statement that informs the customer about the surcharge fee.
                                example: A 3% surcharge is applied to cover processing fees.
                  token:
                    maxLength: 19
                    minLength: 12
                    type: string
                    description: |
                      Token that the merchant can use in future transactions to represent the customer's payment details. The token:  
                      - Begins with the six-digit identification number **296753**.
                      - Contains up to 12 digits.  
                      - Contains a single check digit that we calculate using the Luhn algorithm.
                    example: '296753123456'
                  status:
                    type: string
                    description: |
                      Outcome of a security check on the status of the customer's payment card or bank account.  

                      **Note:** Depending on the merchant's account settings, this feature may be unavailable. 
                    enum:
                      - notValidated
                      - cvvValidated
                      - validationFailed
                      - issueNumberValidated
                      - cardNumberValidated
                      - bankAccountValidated
                    example: cvvValidated
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                createdSecureToken:
                  summary: Secure Token
                  description: Secure Token
                  value: &ref_154
                    secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    processingTerminalId: '1234001'
                    mitAgreement: unscheduled
                    customer:
                      firstName: Sarah
                      lastName: Hopper
                      dateOfBirth: '1990-07-15'
                      referenceNumber: Customer-12
                      billingAddress:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    source:
                      type: card
                      cardholderName: Sarah Hazel Hopper
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                    token: '296753123456'
                    status: notValidated
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Secure tokens
      summary: List secure tokens
      description: "Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of secure tokens.  \n\n**Note:** If you want to view a specific seure token and you have its secureTokenId, use our [Retrieve Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/retrieve) method.  \n\nUse query parameters to filter the list of results that we return, for example, to search for secure tokens by customer or by the first four digits of a card number.  \n\nOur gateway returns information about the following for each secure token in the list:  \n\n  -\tPayment details that the secure token represents.  \n  -\tCustomer details, including shipping and billing addresses.  \n  -\tSecure token that you can use to carry out transactions.  \n\n  For each secure token, we also return the secureTokenId, which you can use to perform follow-on actions.\n"
      operationId: listSecureTokens
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: secureTokenId
          in: query
          description: Unique identifier that the merchant assigned to the secure token.
          schema: &ref_377
            maxLength: 200
            minLength: 1
            type: string
          examples: &ref_378
            example:
              value: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
        - name: customerName
          in: query
          description: Filter by the customer's name.
          schema: &ref_363
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_364
            example:
              value: Sarah%20Hazel%20Hopper
        - name: phone
          in: query
          description: Filter by the customer's phone number.
          schema: &ref_379
            maxLength: 15
            minLength: 1
            type: string
          examples: &ref_380
            example:
              value: '2025550165'
        - name: email
          in: query
          description: Filter by the customer's email address.
          schema: &ref_381
            maxLength: 100
            minLength: 1
            type: string
          examples: &ref_382
            example:
              value: sarah.hopper@example.com
        - name: token
          in: query
          description: Filter by the token that the merchant used in a transaction to represent the customer's payment details.
          schema: &ref_383
            maxLength: 19
            minLength: 12
            type: string
          examples: &ref_384
            example:
              value: '296753123456'
        - name: first6
          in: query
          description: Filter by the first six digits of the card number.
          schema: &ref_385
            pattern: '[0-9]{6}'
            type: string
          examples: &ref_386
            example:
              value: '453985'
        - name: last4
          in: query
          description: Filter by the last four digits of the card or account number.
          schema: &ref_365
            pattern: '[0-9]{4}'
            type: string
          examples: &ref_366
            example:
              value: '7062'
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of secure tokens that are currently saved on the terminal.
          content:
            application/json:
              schema:
                required: &ref_613
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_614
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of saved payment details.
                        items:
                          allOf: &ref_153
                            - required: *ref_145
                              type: object
                              description: Object that contains information about the secure token.
                              properties: *ref_146
                            - type: object
                              properties:
                                source:
                                  description: Object that contains information about the payment method that we tokenized.
                                  type: object
                                  discriminator:
                                    propertyName: type
                                    mapping:
                                      ach: '#/components/schemas/achSourceWithAccountType'
                                      pad: '#/components/schemas/padSourceWithAccountType'
                                      card: '#/components/schemas/cardSource'
                                  oneOf:
                                    - allOf: &ref_611
                                        - required: *ref_147
                                          type: object
                                          title: ACH account
                                          description: Object that contains the customer's account details.
                                          properties: *ref_148
                                        - type: object
                                          properties:
                                            accountType:
                                              type: string
                                              description: |
                                                Indicates the customer's account type.
                                              enum:
                                                - checking
                                                - savings
                                              example: checking
                                    - allOf: &ref_612
                                        - required: *ref_149
                                          type: object
                                          title: PAD account
                                          description: Object that contains the customer's account details.
                                          properties: *ref_150
                                        - type: object
                                          properties:
                                            accountType:
                                              type: string
                                              description: |
                                                Indicates the customer's account type.
                                              enum:
                                                - checking
                                                - savings
                                              example: checking
                                    - required: *ref_151
                                      type: object
                                      title: Card
                                      description: Object that contains the customer's card details.
                                      properties: *ref_152
              examples:
                paginatedResults:
                  summary: Paginated Secure Token
                  description: Paginated Secure Token
                  value: &ref_867
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                        processingTerminalId: '1234001'
                        mitAgreement: unscheduled
                        customer:
                          firstName: Sarah
                          lastName: Hopper
                          dateOfBirth: '1990-07-15'
                          referenceNumber: Customer-12
                          billingAddress:
                            address1: 1 Example Ave.
                            address2: Example Address Line 2
                            address3: Example Address Line 3
                            city: Chicago
                            state: Illinois
                            country: US
                            postalCode: '60056'
                          shippingAddress:
                            recipientName: Sarah Hopper
                            address:
                              address1: 1 Example Ave.
                              address2: Example Address Line 2
                              address3: Example Address Line 3
                              city: Chicago
                              state: Illinois
                              country: US
                              postalCode: '60056'
                        source:
                          type: card
                          cardholderName: Sarah Hopper
                          cardNumber: 453985******7062
                          expiryDate: '1225'
                        token: '296753123456'
                        status: notValidated
                      - secureTokenId: MREF_fe0d9876-cba5-432f-e10d-9cb87654a3f2e1
                        processingTerminalId: '1234001'
                        mitAgreement: unscheduled
                        customer:
                          firstName: Sarah
                          lastName: Hopper
                          dateOfBirth: '1990-07-15'
                          referenceNumber: Customer-12
                          billingAddress:
                            address1: 1 Example Ave.
                            address2: Example Address Line 2
                            address3: Example Address Line 3
                            city: Chicago
                            state: Illinois
                            country: US
                            postalCode: '60056'
                          shippingAddress:
                            recipientName: Sarah Hopper
                            address:
                              address1: 1 Example Ave.
                              address2: Example Address Line 2
                              address3: Example Address Line 3
                              city: Chicago
                              state: Illinois
                              country: US
                              postalCode: '60056'
                        source:
                          type: card
                          cardholderName: Sarah Hazel Hopper
                          cardNumber: 500165******0000
                          expiryDate: '0328'
                        token: '307864234567'
                        status: notValidated
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens?limit=2&after=MREF_fe0d9876-cba5-432f-e10d-9cb87654a3f2e1
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens?limit=2&before=MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/secure-tokens/{secureTokenId}:
    get:
      tags:
        - Secure tokens
      summary: Retrieve secure token
      description: "Use this method to retrieve information about a secure token.  \n\nTo retrieve a secure token, you need its secureTokenID, which you sent in the request of the [Create Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/create) method.  \n\n**Note:** If you don't have the secureTokenId, use our [List Secure Tokens](https://docs.payroc.com/api/schema/payments/secure-tokens/list) method to search for the secure token.  \n\nOur gateway returns the following information about the secure token:  \n\n  -\tPayment details that the secure token represents.  \n  -\tCustomer details, including shipping and billing addresses.  \n  -\tSecure token that you can use to carry out transactions.  \n"
      operationId: getSecureToken
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: secureTokenId
          in: path
          required: true
          description: Unique identifier that the merchant assigned to the secure token.
          schema: &ref_155
            maxLength: 200
            minLength: 1
            type: string
          examples: &ref_156
            example:
              value: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
      responses:
        '200':
          description: Successful request. Returns the secure token and its related payment details.
          content:
            application/json:
              schema:
                allOf: *ref_153
              examples:
                secureToken:
                  summary: Secure Token
                  description: Secure Token
                  value: *ref_154
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      tags:
        - Secure tokens
      summary: Partially update secure token
      description: |
        Use this method to partially update a secure token. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.  

        To update a secure token, you need its secureTokenId, which you sent in the request of the [Create Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/create) method.  

        **Note:** If you don't have the secureTokenId, use our [List Secure Tokens](https://docs.payroc.com/api/schema/payments/secure-tokens/list) method to search  for the payment.  

        You can update all of the properties of the secure token, except the following:  
        - processingTerminalId  
        - type  
        - token  
        - status  
        - source/Card  
          - type  
          - cardNumber  
          - cardType  
          - currency  
          - debit  
          - surcharging  
        - source/ACH account  
          - accountNumber  
          - routingNumber  
        - source/PAD account  
          - type  
          - accountNumber  
          - transitNumber  
      operationId: updateSecureToken
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: secureTokenId
          in: path
          required: true
          description: Unique identifier that the merchant assigned to the secure token.
          schema: *ref_155
          examples: *ref_156
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: *ref_100
              example: *ref_101
            examples:
              patchSecureTokenRealistic:
                summary: Update secure token
                description: |
                  Update the customer's payment details that are represented by the secure token.

                  Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
                value: &ref_869
                  - op: replace
                    path: /customer/lastName
                    value: Reed
                  - op: replace
                    path: /shippingAddress/recipientName
                    value: Sarah Reed
                  - op: replace
                    path: /source/cardDetails/cardholderName
                    value: Sarah Reed
              patchOperations:
                summary: Example patch operations that apply the RFC 6902 standard
                description: |
                  Example patch operations that apply the RFC 6902 standard.
                value: *ref_102
      responses:
        '200':
          description: Successful request. We updated the customer's payment details.
          content:
            application/json:
              schema:
                required: *ref_145
                type: object
                description: Object that contains information about the secure token.
                properties: *ref_146
              examples:
                secureToken:
                  summary: Secure Token
                  description: Secure Token
                  value: *ref_154
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Secure tokens
      summary: Delete secure token
      description: |
        Use this method to delete a secure token and its related payment details from our vault.  

        To delete a secure token, you need its secureTokenId, which you sent in the request of the [Create Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/create) method.  

        **Note:** If you don’t have the secureTokenId, use our [List Secure Tokens](https://docs.payroc.com/api/schema/payments/secure-tokens/list) method to search for the secure token.  

        When you delete a secure token, you can’t recover it, and you can’t reuse its identifier for a new token.  
      operationId: deleteSecureToken
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: secureTokenId
          in: path
          required: true
          description: Unique identifier that the merchant assigned to the secure token.
          schema: *ref_155
          examples: *ref_156
      responses:
        '204':
          description: Successful request. We deleted the secure token.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/secure-tokens/{secureTokenId}/update-account:
    post:
      tags:
        - Secure tokens
      summary: Update account details
      description: |
        Use this method to update a secure token if you have a single-use token from Hosted Fields.  

        **Note:** If you don't have a single-use token, you can update saved payment details with our [Update Secure Token](https://docs.payroc.com/api/resources#updateSecureToken) method. For more information about our two options to update a secure token, go to [Update saved payment details](/guides/integrate/update-saved-payment-details).  
      operationId: accountUpdate
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
        - name: secureTokenId
          in: path
          required: true
          description: Unique identifier that the merchant assigned to the secure token.
          schema: *ref_155
          examples: *ref_156
      requestBody:
        content:
          application/json:
            schema:
              description: Object that contains the single-use token.
              discriminator: &ref_643
                propertyName: type
                mapping:
                  singleUseToken: '#/components/schemas/singleUseTokenAccountUpdate'
              oneOf: &ref_644
                - required: &ref_641
                    - type
                    - token
                  type: object
                  description: Object that contains the token.
                  properties: &ref_642
                    type:
                      type: string
                      enum:
                        - singleUseToken
                      example: singleUseToken
                      description: Type of token.
                    token:
                      description: Single-use token that the gateway assigned to the payment details.
                      maxLength: 128
                      minLength: 128
                      type: string
                      example: abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
            examples:
              accountUpdate:
                summary: Update account details
                description: Account update request by single use token
                value: &ref_870
                  type: singleUseToken
                  token: abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef1234567890
        required: true
      responses:
        '200':
          description: Successful request. We updated the payment details represented by the secure token.
          content:
            application/json:
              schema:
                required: *ref_145
                type: object
                description: Object that contains information about the secure token.
                properties: *ref_146
              examples:
                accountUpdateResponse:
                  summary: Secure Token
                  description: Secure Token
                  value: *ref_154
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '413':
          description: Payload too large
          content: &ref_962
            application/problem+json:
              schema:
                type: object
                properties: &ref_504
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#payload-too-large
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Payload too large
                  status:
                    type: integer
                    description: Http status code
                    example: 413
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: The payload submitted is too large.
                required: &ref_505
                  - type
                  - title
                  - status
                  - detail
              examples:
                payloadTooLarge:
                  summary: Payload too large
                  description: The payload submitted is too large
                  value: &ref_871
                    type: https://docs.payroc.com/api/errors#payload-too-large
                    title: Payload too large
                    status: 413
                    detail: The payload submitted is too large
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/single-use-tokens:
    post:
      tags:
        - Single use tokens
      summary: Create single use token
      description: |
        Use this method to create a single-use token that represents a customer’s payment details.  

        A single-use token expires after 30 minutes and merchants can use them only once.  

        **Note:** To create a reusable permanent token, go to [Create Secure Token](https://docs.payroc.com/api/schema/payments/secure-tokens/create).  

        In the request, send the customer’s payment details. If the request is successful, our gateway returns a token that you can use in a follow-on action, for example, [run a sale](https://docs.payroc.com/api/schema/payments/create).
      operationId: createSingleUseToken
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that our gateway assigned to the terminal.
          schema: &ref_387
            maxLength: 50
            minLength: 4
            type: string
          examples: &ref_388
            example:
              value: '1234001'
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_645
                - channel
                - source
              type: object
              properties: &ref_646
                channel:
                  type: string
                  description: Channel that the merchant used to receive the payment details.
                  enum:
                    - pos
                    - web
                    - moto
                  example: web
                operator:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: Operator who initiated the request.
                  example: Jane
                source:
                  description: Object that contains information about the payment method to tokenize.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      pad: '#/components/schemas/padPayload'
                      card: '#/components/schemas/cardPayload'
                  oneOf:
                    - required: *ref_157
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: *ref_158
                    - required: *ref_159
                      type: object
                      writeOnly: true
                      title: PAD
                      description: Object that contains information about the payment details for the customer’s preauthorized electronic debit (PAD) transactions.
                      properties: *ref_160
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
            examples:
              createSingleUseToken:
                summary: Create single-use token
                description: Create a single-use token. The token expires after 30 minutes.
                value: &ref_872
                  channel: web
                  operator: Jane
                  source:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
                        cvv: '234'
        required: true
      responses:
        '201':
          description: Successful request. We created the single-use token.
          content:
            application/json:
              schema:
                required: &ref_647
                  - processingTerminalId
                  - token
                  - expiresAt
                  - source
                type: object
                properties: &ref_648
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    readOnly: true
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    writeOnly: true
                    description: Operator who initiated the request.
                    example: Jane
                  paymentMethod:
                    type: object
                    description: Object that contains information about the customer's payment details.
                    writeOnly: true
                    discriminator:
                      propertyName: type
                      mapping:
                        card: '#/components/schemas/cardPayload'
                    oneOf:
                      - required: *ref_161
                        type: object
                        writeOnly: true
                        title: Card
                        description: Object that contains information about the customer’s payment card.
                        properties: *ref_162
                  token:
                    maxLength: 128
                    minLength: 128
                    type: string
                    readOnly: true
                    description: |
                      Unique identifier that our gateway assigned to the payment details.  
                      **Note:** Merchants can use the token with other terminals linked to their account.
                    example: fa2e9e51bc5265a33a5ca41449524d53d1def596ffd8c0904f222183a71a65cdb58835120a65196a48a6375abc4deafe2b7e948689ab9d6aba919e860f32e247
                  expiresAt:
                    type: string
                    format: date-time
                    readOnly: true
                    description: Date and time that the token expires. We return this value in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                    example: '2024-07-02T16:00:00Z'
                  source:
                    description: Object that contains information about the payment method that we tokenized.
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        ach: '#/components/schemas/achSource'
                        pad: '#/components/schemas/padSource'
                        card: '#/components/schemas/cardSource'
                    oneOf:
                      - required: *ref_147
                        type: object
                        title: ACH account
                        description: Object that contains the customer's account details.
                        properties: *ref_148
                      - required: *ref_149
                        type: object
                        title: PAD account
                        description: Object that contains the customer's account details.
                        properties: *ref_150
                      - required: *ref_151
                        type: object
                        title: Card
                        description: Object that contains the customer's card details.
                        properties: *ref_152
              examples:
                createSingleUseToken:
                  summary: Create single-use token
                  description: Create a single-use token. The token expires after 30 minutes.
                  value: &ref_873
                    processingTerminalId: '1234001'
                    token: fa2e9e51bc5265a33a5ca41449524d53d1def596ffd8c0904f222183a71a65cdb58835120a65196a48a6375abc4deafe2b7e948689ab9d6aba919e860f32e247
                    expiresAt: '2024-08-05T19:50:05.723+02:00'
                    source:
                      type: card
                      cardholderName: Sarah Hazel Hopper
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      cardType: Visa Credit
                      country: US
                      currency: USD
                      debit: false
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/hosted-fields-sessions:
    post:
      tags:
        - Hosted Fields
      summary: Create Hosted Fields session
      description: |
        Use this method to create a Hosted Fields session token. You need to generate a new session token each time you load Hosted Fields on a webpage.  

        In your request, you need to indicate whether the merchant is using Hosted Fields to run a sale, save payment details, or update saved payment details.  

        In the response, our gateway returns the session token and the time that it expires. You need the session token when you configure the JavaScript for Hosted Fields.  

        For more information about adding Hosted Fields to a webpage, go to [Hosted Fields](https://docs.payroc.com/guides/integrate/hosted-fields). 
      operationId: createSession
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_649
                - libVersion
                - scenario
              type: object
              title: Hosted Fields Initialization
              description: Object that contains information about Hosted Fields initialization request.
              properties: &ref_650
                libVersion:
                  type: string
                  pattern: ^\d{1,2}.\d{1,2}.\d{1,2}(?:-beta)?.\d+$
                  description: |
                    Version of the Hosted Fields JavaScript library that you are using.  

                    The current production version is `1.6.0.172441`.
                  example: 1.6.0.172441
                scenario:
                  type: string
                  enum:
                    - payment
                    - tokenization
                  description: |
                    Indicates if a merchant wants to take a payment or tokenize a customer's payment details:  

                    - `payment` - The merchant wants to run a sale or run a sale and tokenize in the same transaction.  
                    - `tokenization` - The merchant wants to save the customer's payment details to take a payment later or to update a customer's payment details that they've already saved.  
                  example: payment
                secureTokenId:
                  maxLength: 200
                  minLength: 1
                  type: string
                  description: |
                    Unique identifier that represents a customer's payment details.  

                    If a merchant wants to update a customer's payment details that are linked to a secure token, include the secureTokenId in your request.  
                  example: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
            examples:
              createSessionRequest:
                summary: Create session request
                description: Create session request.
                value: &ref_874
                  libVersion: 1.1.0.123456
                  scenario: payment
        required: true
      responses:
        '201':
          description: Successful request. We created the session and returned a session token.
          content:
            application/json:
              schema:
                required: &ref_651
                  - processingTerminalId
                  - token
                  - expiresAt
                type: object
                properties: &ref_652
                  processingTerminalId:
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                  token:
                    type: string
                    description: |
                      Token that our gateway assigned to the Hosted Fields session.  

                      Include this session token in the config file for Hosted Fields.  

                      The session token expires after 10 minutes.
                    example: abcdef1234567890abcdef1234567890
                  expiresAt:
                    type: string
                    format: date-time
                    readOnly: true
                    description: Date and time that the token expires. We return this value in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                    example: '2025-07-02T15:30:00.000+02:00'
              examples:
                createSessionResponse:
                  summary: Create session response
                  description: Create session response.
                  value: &ref_875
                    processingTerminalId: '1234001'
                    token: abcdef1234567890abcdef1234567890
                    expiresAt: '2025-07-02T15:30:00.000+02:00'
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/apple-pay-sessions:
    post:
      tags:
        - Apple Pay session
      summary: Start Apple Pay session
      description: |
        Use this method to start an Apple Pay session for your merchant.  

        In the response, we return the startSessionObject that you send to Apple when you retrieve the cardholder's encrypted payment details.  

        **Note:** For more information about how to integrate with Apple Pay, go to [Apple Pay](https://docs.payroc.com/guides/integrate/apple-pay).
      operationId: applePaySessions
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_653
                - appleDomainId
                - appleValidationUrl
              type: object
              properties: &ref_654
                appleDomainId:
                  type: string
                  description: Unique identifier of the merchant's domain that we assigned when you added their domain to our Self-Care Portal.
                  example: DUHDZJHGYY
                appleValidationUrl:
                  type: string
                  description: Validation URL from the Apple Pay JS API.
                  example: https://apple-pay-gateway.apple.com/paymentservices/startSession
            examples:
              applePaySessions:
                summary: Apple Pay session
                description: Start a session with Apple to accept a payment with Apple Pay.
                value: &ref_876
                  appleDomainId: DUHDZJHGYY
                  appleValidationUrl: https://apple-pay-gateway.apple.com/paymentservices/startSession
        required: true
      responses:
        '200':
          description: Successful request. We started the Apple Pay session.
          content:
            application/json:
              schema:
                required: &ref_655
                  - startSessionResponse
                type: object
                properties: &ref_656
                  startSessionResponse:
                    type: string
                    description: |
                      Object that Apple returns when they start the merchant's Apple Pay session.  

                      Send the content in this object to Apple to retrieve the cardholder's encrypted payment details.  
                    example: |
                      {
                        "epochTimestamp": 1736264582447,
                        "expiresAt": 1736268182447,
                        "merchantSessionIdentifier": "SSHE464E2B91B714F18BFD19D46D0F582BF_916523AAED1343F5BC5815E12BEE9250AFFDC1A17C46B0DE5A943F0F94927C24",
                        "nonce": "e5775127",
                        "merchantIdentifier": "BFB110EE83BE2AF4AA7468926C926CCFC57F4A541CCE6E7F3BEFD05002ECE503",
                        "domainName": "store.com",
                        "displayName": "Store One",
                        "signature": "308006092a864886f70d010702a0803080020101310d300b0609608648016503040201308006092a864886f70d0107010000a080308203e43082038ba003020102020859d8a1bcaaf4e3cd300a06082a8648ce3d040302307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553301e170d3231303432303139333730305a170d3236303431393139333635395a30623128302606035504030c1f6563632d736d702d62726f6b65722d7369676e5f5543342d53414e44424f5831143012060355040b0c0b694f532053797374656d7331133011060355040a0c0a4170706c6520496e632e310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d030107034200048230fdabc39cf75e202c50d99b4512e637e2a901dd6cb3e0b1cd4b526798f8cf4ebde81a25a8c21e4c33ddce8e2a96c2f6afa1930345c4e87a4426ce951b1295a38202113082020d300c0603551d130101ff04023000301f0603551d2304183016801423f249c44f93e4ef27e6c4f6286c3fa2bbfd2e4b304506082b0601050507010104393037303506082b060105050730018629687474703a2f2f6f6373702e6170706c652e636f6d2f6f63737030342d6170706c65616963613330323082011d0603551d2004820114308201103082010c06092a864886f7636405013081fe3081c306082b060105050702023081b60c81b352656c69616e6365206f6e207468697320636572746966696361746520627920616e7920706172747920617373756d657320616363657074616e6365206f6620746865207468656e206170706c696361626c65207374616e64617264207465726d7320616e6420636f6e646974696f6e73206f66207573652c20636572746966696361746520706f6c69637920616e642063657274696669636174696f6e2070726163746963652073746174656d656e74732e303606082b06010505070201162a687474703a2f2f7777772e6170706c652e636f6d2f6365727469666963617465617574686f726974792f30340603551d1f042d302b3029a027a0258623687474703a2f2f63726c2e6170706c652e636f6d2f6170706c6561696361332e63726c301d0603551d0e041604140224300b9aeeed463197a4a65a299e4271821c45300e0603551d0f0101ff040403020780300f06092a864886f76364061d04020500300a06082a8648ce3d0403020347003044022074a1b324db4249430dd3274c5074c4808d9a1f480e3a85c5c1362566325fbca3022069369053abf50b5a52f9f6004dc58aad6c50a7d608683790e0a73ad01e4ad981308202ee30820275a0030201020208496d2fbf3a98da97300a06082a8648ce3d0403023067311b301906035504030c124170706c6520526f6f74204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553301e170d3134303530363233343633305a170d3239303530363233343633305a307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d03010703420004f017118419d76485d51a5e25810776e880a2efde7bae4de08dfc4b93e13356d5665b35ae22d097760d224e7bba08fd7617ce88cb76bb6670bec8e82984ff5445a381f73081f4304606082b06010505070101043a3038303606082b06010505073001862a687474703a2f2f6f6373702e6170706c652e636f6d2f6f63737030342d6170706c65726f6f7463616733301d0603551d0e0416041423f249c44f93e4ef27e6c4f6286c3fa2bbfd2e4b300f0603551d130101ff040530030101ff301f0603551d23041830168014bbb0dea15833889aa48a99debebdebafdacb24ab30370603551d1f0430302e302ca02aa0288626687474703a2f2f63726c2e6170706c652e636f6d2f6170706c65726f6f74636167332e63726c300e0603551d0f0101ff0404030201063010060a2a864886f7636406020e04020500300a06082a8648ce3d040302036700306402303acf7283511699b186fb35c356ca62bff417edd90f754da28ebef19c815e42b789f898f79b599f98d5410d8f9de9c2fe0230322dd54421b0a305776c5df3383b9067fd177c2c216d964fc6726982126f54f87a7d1b99cb9b0989216106990f09921d00003182018930820185020101308186307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553020859d8a1bcaaf4e3cd300b0609608648016503040201a08193301806092a864886f70d010903310b06092a864886f70d010701301c06092a864886f70d010905310f170d3235303130373135343330325a302806092a864886f70d010934311b3019300b0609608648016503040201a10a06082a8648ce3d040302302f06092a864886f70d010904312204209a4e5d8d01ad895c444f1dc7d92737c013db0837955996dc633fb44c096dfcb3300a06082a8648ce3d04030204483046022100aef85f669578d5e2628d7e570b41558dd8504fd0050ca0e9d82db9b1120a8319022100cdbfba17f0873be9be029786e84d4e6cef99cc5c79f32d61ee73aafc157296aa000000000000",
                        "operationalAnalyticsIdentifier": "Store One:BFB110EE83BE2AF4AA7468926C926CCFC57F4A541CCE6E7F3BEFD05002ECE503",
                        "retries": 0,
                        "pspId": "17D4AAA8D9357D26D771ABA0DAA0B9D3BB462AD1585492E1FE688AF8BB9558E5"
                      }
              examples:
                applePayResponseSession:
                  summary: Apple Pay session response
                  description: Wrapper for the content that Apple returns after starting the Apple Pay session.
                  value: &ref_877
                    startSessionResponse: |
                      {
                        "epochTimestamp": 1736264582447,
                        "expiresAt": 1736268182447,
                        "merchantSessionIdentifier": "SSHE464E2B91B714F18BFD19D46D0F582BF_916523AAED1343F5BC5815E12BEE9250AFFDC1A17C46B0DE5A943F0F94927C24",
                        "nonce": "e5775127",
                        "merchantIdentifier": "BFB110EE83BE2AF4AA7468926C926CCFC57F4A541CCE6E7F3BEFD05002ECE503",
                        "domainName": "store.com",
                        "displayName": "Store One",
                        "signature": "308006092a864886f70d010702a0803080020101310d300b0609608648016503040201308006092a864886f70d0107010000a080308203e43082038ba003020102020859d8a1bcaaf4e3cd300a06082a8648ce3d040302307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553301e170d3231303432303139333730305a170d3236303431393139333635395a30623128302606035504030c1f6563632d736d702d62726f6b65722d7369676e5f5543342d53414e44424f5831143012060355040b0c0b694f532053797374656d7331133011060355040a0c0a4170706c6520496e632e310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d030107034200048230fdabc39cf75e202c50d99b4512e637e2a901dd6cb3e0b1cd4b526798f8cf4ebde81a25a8c21e4c33ddce8e2a96c2f6afa1930345c4e87a4426ce951b1295a38202113082020d300c0603551d130101ff04023000301f0603551d2304183016801423f249c44f93e4ef27e6c4f6286c3fa2bbfd2e4b304506082b0601050507010104393037303506082b060105050730018629687474703a2f2f6f6373702e6170706c652e636f6d2f6f63737030342d6170706c65616963613330323082011d0603551d2004820114308201103082010c06092a864886f7636405013081fe3081c306082b060105050702023081b60c81b352656c69616e6365206f6e207468697320636572746966696361746520627920616e7920706172747920617373756d657320616363657074616e6365206f6620746865207468656e206170706c696361626c65207374616e64617264207465726d7320616e6420636f6e646974696f6e73206f66207573652c20636572746966696361746520706f6c69637920616e642063657274696669636174696f6e2070726163746963652073746174656d656e74732e303606082b06010505070201162a687474703a2f2f7777772e6170706c652e636f6d2f6365727469666963617465617574686f726974792f30340603551d1f042d302b3029a027a0258623687474703a2f2f63726c2e6170706c652e636f6d2f6170706c6561696361332e63726c301d0603551d0e041604140224300b9aeeed463197a4a65a299e4271821c45300e0603551d0f0101ff040403020780300f06092a864886f76364061d04020500300a06082a8648ce3d0403020347003044022074a1b324db4249430dd3274c5074c4808d9a1f480e3a85c5c1362566325fbca3022069369053abf50b5a52f9f6004dc58aad6c50a7d608683790e0a73ad01e4ad981308202ee30820275a0030201020208496d2fbf3a98da97300a06082a8648ce3d0403023067311b301906035504030c124170706c6520526f6f74204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553301e170d3134303530363233343633305a170d3239303530363233343633305a307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b30090603550406130255533059301306072a8648ce3d020106082a8648ce3d03010703420004f017118419d76485d51a5e25810776e880a2efde7bae4de08dfc4b93e13356d5665b35ae22d097760d224e7bba08fd7617ce88cb76bb6670bec8e82984ff5445a381f73081f4304606082b06010505070101043a3038303606082b06010505073001862a687474703a2f2f6f6373702e6170706c652e636f6d2f6f63737030342d6170706c65726f6f7463616733301d0603551d0e0416041423f249c44f93e4ef27e6c4f6286c3fa2bbfd2e4b300f0603551d130101ff040530030101ff301f0603551d23041830168014bbb0dea15833889aa48a99debebdebafdacb24ab30370603551d1f0430302e302ca02aa0288626687474703a2f2f63726c2e6170706c652e636f6d2f6170706c65726f6f74636167332e63726c300e0603551d0f0101ff0404030201063010060a2a864886f7636406020e04020500300a06082a8648ce3d040302036700306402303acf7283511699b186fb35c356ca62bff417edd90f754da28ebef19c815e42b789f898f79b599f98d5410d8f9de9c2fe0230322dd54421b0a305776c5df3383b9067fd177c2c216d964fc6726982126f54f87a7d1b99cb9b0989216106990f09921d00003182018930820185020101308186307a312e302c06035504030c254170706c65204170706c69636174696f6e20496e746567726174696f6e204341202d20473331263024060355040b0c1d4170706c652043657274696669636174696f6e20417574686f7269747931133011060355040a0c0a4170706c6520496e632e310b3009060355040613025553020859d8a1bcaaf4e3cd300b0609608648016503040201a08193301806092a864886f70d010903310b06092a864886f70d010701301c06092a864886f70d010905310f170d3235303130373135343330325a302806092a864886f70d010934311b3019300b0609608648016503040201a10a06082a8648ce3d040302302f06092a864886f70d010904312204209a4e5d8d01ad895c444f1dc7d92737c013db0837955996dc633fb44c096dfcb3300a06082a8648ce3d04030204483046022100aef85f669578d5e2628d7e570b41558dd8504fd0050ca0e9d82db9b1120a8319022100cdbfba17f0873be9be029786e84d4e6cef99cc5c79f32d61ee73aafc157296aa000000000000",
                        "operationalAnalyticsIdentifier": "Store One:BFB110EE83BE2AF4AA7468926C926CCFC57F4A541CCE6E7F3BEFD05002ECE503",
                        "retries": 0,
                        "pspId": "17D4AAA8D9357D26D771ABA0DAA0B9D3BB462AD1585492E1FE688AF8BB9558E5"
                      }
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
        '500':
          description: An error has occured
          content: *ref_14
  /payments:
    post:
      tags:
        - Payments
      summary: Create payment
      operationId: payment
      description: "Use this method to run a sale or a pre-authorization with a customer's payment card. \n\nIn the response, our gateway returns information about the card payment and a paymentId, which you need for the following methods:\n\n-\t[Retrieve payment](https://docs.payroc.com/api/schema/payments/retrieve) - View the details of the card payment.\n-\t[Adjust payment](https://docs.payroc.com/api/schema/payments/adjust) - Update the details of the card payment.\n-\t[Capture payment](https://docs.payroc.com/api/schema/payments/capture)  - Capture the pre-authorization.\n-\t[Reverse payment](https://docs.payroc.com/api/schema/payments/reverse)  - Cancel the card payment if it's in an open batch.\n-\t[Refund payment](https://docs.payroc.com/api/schema/payments/refund)  - Run a referenced refund to return funds to the payment card.\n\n**Payment methods** \n\n- **Cards** - Credit, debit, and EBT\n- **Digital wallets** - [Apple Pay®](/guides/integrate/apple-pay) and [Google Pay®](/guides/integrate/google-pay) \n- **Tokens** - Secure tokens and single-use tokens\n\n**Features** \n\nOur Create Payment method also supports the following features: \n\n- [Repeat payments](/guides/integrate/repeat-payments/use-your-own-software) - Run multiple payments as part of a payment schedule that you manage with your own software. \n- **Offline sales** - Run a sale or a pre-authorization if the terminal loses its connection to our gateway. \n- [Tokenization](h/guides/integrate/save-payment-details) - Save card details to use in future transactions. \n- [3-D Secure](/guides/integrate/3-d-secure) - Verify the identity of the cardholder. \n- [Custom fields](/guides/integrate/add-custom-fields) - Add your own data to a payment. \n- **Tips** - Add tips to the card payment.  \n- **Taxes** - Add local taxes to the card payment. \n- **Surcharging** - Add a surcharge to the card payment. \n- **Dual pricing** - Offer different prices based on payment method, for example, if you use our RewardPay Choice pricing program. \n"
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_673
                - channel
                - order
                - paymentMethod
                - processingTerminalId
              type: object
              properties: &ref_674
                channel:
                  type: string
                  description: Channel that the merchant used to receive the payment details.
                  enum:
                    - pos
                    - web
                    - moto
                  example: web
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who ran the transaction.
                  example: Jane
                order:
                  required: &ref_176
                    - amount
                    - currency
                    - orderId
                  type: object
                  description: Object that contains information about the payment.
                  allOf: &ref_177
                    - required: &ref_201
                        - amount
                        - currency
                        - orderId
                      type: object
                      description: Object that contains details about the transaction.
                      properties: &ref_202
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: Unique identifier that the merchant assigns to the transaction.
                          example: OrderRef6543
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: Date and time that the processor processed the transaction. Our gateway returns this value in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                          example: '2024-07-02T15:30:00Z'
                        description:
                          maxLength: 1024
                          minLength: 0
                          type: string
                          description: Description of the transaction.
                          example: 'Pizza Doe #1234 - Dinner'
                        amount:
                          type: integer
                          format: int64
                          description: Total amount of the transaction. The value is in the currency’s lowest denomination, for example, cents.
                          example: 2899
                        currency:
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                    - type: object
                      properties:
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: A unique identifier assigned by the merchant.
                          example: OrderRef6543
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: Date and time that the processor processed the transaction. Our gateway returns this value in the ISO 8601 format.
                          example: '2024-07-02T15:30:00Z'
                        description:
                          maxLength: 256
                          minLength: 1
                          type: string
                          description: Description of the transaction.
                          example: Large Pepperoni Pizza
                        amount:
                          type: integer
                          format: int64
                          description: Total amount of the transaction. The value is in the currency’s lowest denomination, for example, cents.
                          example: 4999
                        currency:
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                        breakdown:
                          required: &ref_199
                            - subtotal
                          type: object
                          description: Object that contains information about the breakdown of the transaction.
                          allOf: &ref_200
                            - required: &ref_203
                                - subtotal
                              type: object
                              description: Object that contains information about the breakdown of the transaction.
                              properties: &ref_204
                                subtotal:
                                  type: integer
                                  format: int64
                                  description: |
                                    Total amount of the transaction before tax and fees.
                                    The value is in the currency’s lowest denomination, for example, cents.
                                  example: 2899
                                cashbackAmount:
                                  type: integer
                                  format: int64
                                  description: Value of cashback for the transaction.
                                  example: 0
                                tip:
                                  description: Object that contains tip information for the transaction.
                                  required: &ref_194
                                    - type
                                  type: object
                                  properties: &ref_195
                                    type:
                                      type: string
                                      description: |
                                        Indicates if the tip is a fixed amount or a percentage.  
                                        **Note:** Our gateway applies the percentage tip to the total amount of the transaction after tax.
                                      enum:
                                        - percentage
                                        - fixedAmount
                                      example: percentage
                                    mode:
                                      type: string
                                      readOnly: true
                                      description: |
                                        Indicates how the tip was added to the transaction.
                                        - `prompted` – The customer was prompted to add a tip during payment.
                                        - `adjusted` – The customer added a tip on the receipt for the merchant to adjust post-transaction.
                                      enum:
                                        - prompted
                                        - adjusted
                                      example: prompted
                                    amount:
                                      exclusiveMinimum: 0
                                      type: integer
                                      format: int64
                                      description: |
                                        If the value for **type** is `fixedAmount`, the value indicates the tip amount in the currency's lowest denomination, for example, cents.            
                                      example: 500
                                    percentage:
                                      maximum: 100
                                      exclusiveMinimum: 0
                                      type: number
                                      format: double
                                      description: If the value for **type** is `percentage`, the value indicates the tip as a percentage.
                                      example: 10
                                taxes:
                                  type: array
                                  description: List of taxes.
                                  items:
                                    required: *ref_118
                                    type: object
                                    properties: *ref_119
                                surcharge:
                                  description: Object that contains surcharge information for the transaction.
                                  type: object
                                  properties: *ref_163
                                dualPricing:
                                  description: Object that contains dual pricing information for the transaction.
                                  required: &ref_659
                                    - offered
                                  type: object
                                  properties: &ref_660
                                    offered:
                                      type: boolean
                                      description: Indicates if the merchant offers dual pricing to the customer.
                                      example: false
                                    choiceRate:
                                      description: |
                                        Object that contains information about the choice rate.  
                                        **Note:** For requests, if the value for **offered** is `true`, you must send this object in the request.
                                      required: &ref_657
                                        - applied
                                        - rate
                                        - amount
                                      type: object
                                      readOnly: true
                                      properties: &ref_658
                                        applied:
                                          type: boolean
                                          description: |
                                            Indicates if the merchant applies a choice rate to the transaction amount. 

                                            Our gateway adds a choice rate to the transaction when the merchant offers an alternative payment type, but the customer chooses to pay by card.
                                          default: false
                                          example: true
                                        rate:
                                          type: number
                                          format: double
                                          description: |
                                            If the customer used a card to pay for the transaction, this value indicates the percentage that our gateway added to the transaction amount.  
                                            **Note:** Our gateway returns a value for **rate** only if the value for **applied** in the request is `true`.
                                          maximum: 100
                                          exclusiveMinimum: 0
                                          example: 2.5
                                        amount:
                                          type: integer
                                          format: int64
                                          description: |
                                            If the customer used a card to pay for the transaction, this value indicates the amount that our gateway added to the transaction amount. This value is in the currency’s lowest denomination, for example, cents.  
                                            **Note:** Our gateway returns a value for **amount** only if the value for **applied** in the request is `true`.
                                          exclusiveMinimum: 0
                                          example: 75
                                    alternativeTender:
                                      type: string
                                      description: |
                                        Payment method that the merchant presented to the customer as an alternative to their chosen method.  
                                        **Note:** For requests, if the value for **offered** is `true`, you must send a value for **alternativeTender** in the request.
                                      enum:
                                        - card
                                        - cash
                                        - bankTransfer
                                      example: card
                            - type: object
                              properties:
                                dutyAmount:
                                  type: integer
                                  format: int64
                                  description: |
                                    Amount of duties or fees that apply to the order. The value is in the currency's lowest denomination, for example, cents. 
                                  example: 0
                                freightAmount:
                                  type: integer
                                  format: int64
                                  description: |
                                    Amount for shipping in the currency's lowest denomination, for example, cents.
                                  example: 0
                                convenienceFee:
                                  required: *ref_164
                                  type: object
                                  readOnly: true
                                  description: Object that contains information about the convenience fee for the transaction.
                                  properties: *ref_165
                                items:
                                  type: array
                                  description: Array of objects that contain information about each item that the customer purchased.
                                  items:
                                    description: Array of 'lineItem' objects. Each object contains information about the items in the transaction.
                                    required: &ref_662
                                      - quantity
                                      - unitPrice
                                    type: object
                                    properties: &ref_663
                                      commodityCode:
                                        maxLength: 45
                                        minLength: 0
                                        type: string
                                        description: Commodity code of the item.
                                        example: 5812-0111
                                      productCode:
                                        maxLength: 45
                                        minLength: 0
                                        type: string
                                        description: Product code of the item.
                                        example: PZA-001-LG
                                      description:
                                        maxLength: 250
                                        minLength: 0
                                        type: string
                                        description: Description of the item.
                                        example: Large Pepperoni Pizza
                                      unitOfMeasure:
                                        type: string
                                        description: Unit of measurement for the item. For more information about units of measurement, go to [Units of measurement](/knowledge/basic-concepts/units-of-measurement).
                                        example: QAN
                                        enum: &ref_661
                                          - ACR
                                          - AMH
                                          - AMP
                                          - APZ
                                          - ARE
                                          - ASM
                                          - ASV
                                          - ATM
                                          - ATT
                                          - BAR
                                          - BFT
                                          - BHP
                                          - BHX
                                          - BIL
                                          - BLD
                                          - BLL
                                          - BQL
                                          - BTU
                                          - BUA
                                          - BUI
                                          - BX
                                          - CCT
                                          - CDL
                                          - CEL
                                          - CEN
                                          - CGM
                                          - CKG
                                          - CLF
                                          - CLT
                                          - CMK
                                          - CMT
                                          - CNP
                                          - CNT
                                          - COU
                                          - CS
                                          - CTM
                                          - CUR
                                          - CWA
                                          - DAA
                                          - DAD
                                          - DAY
                                          - DEC
                                          - DLT
                                          - DMK
                                          - DMQ
                                          - DMT
                                          - DPC
                                          - DPT
                                          - DRA
                                          - DRI
                                          - DRL
                                          - DRM
                                          - DTH
                                          - DTN
                                          - DWT
                                          - DZN
                                          - DZP
                                          - DZR
                                          - EA
                                          - EAC
                                          - FAH
                                          - FAR
                                          - FOT
                                          - FTK
                                          - FTQ
                                          - GBQ
                                          - GFI
                                          - GGR
                                          - GII
                                          - GLD
                                          - GLI
                                          - GLL
                                          - GRM
                                          - GRN
                                          - GRO
                                          - GRT
                                          - GWH
                                          - HAR
                                          - HBA
                                          - HGM
                                          - HIU
                                          - HLT
                                          - HMQ
                                          - HMT
                                          - HPA
                                          - HTZ
                                          - HUR
                                          - INH
                                          - INK
                                          - INQ
                                          - ITM
                                          - JOU
                                          - KBA
                                          - KEL
                                          - KGM
                                          - KGS
                                          - KHZ
                                          - KJO
                                          - KMH
                                          - KMK
                                          - KMQ
                                          - KMT
                                          - KNI
                                          - KNS
                                          - KNT
                                          - KPA
                                          - KPH
                                          - KPO
                                          - KPP
                                          - KSD
                                          - KSH
                                          - KTN
                                          - KUR
                                          - KVA
                                          - KVR
                                          - KVT
                                          - KWH
                                          - KWT
                                          - LBR
                                          - LBS
                                          - LEF
                                          - LPA
                                          - LTN
                                          - LTR
                                          - LUM
                                          - LUX
                                          - MAL
                                          - MAM
                                          - MAW
                                          - MBE
                                          - MBF
                                          - MBR
                                          - MCU
                                          - MGM
                                          - MHZ
                                          - MIK
                                          - MIL
                                          - MIN
                                          - MIO
                                          - MIU
                                          - MLD
                                          - MLT
                                          - MMK
                                          - MMQ
                                          - MMT
                                          - MON
                                          - MPA
                                          - MQH
                                          - MQS
                                          - MSK
                                          - MTK
                                          - MTQ
                                          - MTR
                                          - MTS
                                          - MVA
                                          - MWH
                                          - NAR
                                          - NBB
                                          - NCL
                                          - NEW
                                          - NIU
                                          - NMB
                                          - NMI
                                          - NMP
                                          - NMR
                                          - NPL
                                          - NPT
                                          - NRL
                                          - NTT
                                          - OHM
                                          - ONZ
                                          - OZA
                                          - OZI
                                          - PAL
                                          - PCB
                                          - PCE
                                          - PGL
                                          - PK
                                          - PSC
                                          - PTD
                                          - PTI
                                          - PTL
                                          - QAN
                                          - QTD
                                          - QTI
                                          - QTL
                                          - QTR
                                          - RPM
                                          - RPS
                                          - SAN
                                          - SCO
                                          - SCR
                                          - SEC
                                          - SET
                                          - SHT
                                          - SIE
                                          - SMI
                                          - SST
                                          - ST
                                          - STI
                                          - TAH
                                          - TNE
                                          - TPR
                                          - TQD
                                          - TRL
                                          - TSD
                                          - TSH
                                          - VLT
                                          - WCD
                                          - WEB
                                          - WEE
                                          - WHR
                                          - WSD
                                          - WTT
                                          - YDK
                                          - YDQ
                                      unitPrice:
                                        type: number
                                        description: Price of each unit.
                                        exclusiveMinimum: 0
                                        example: 2709
                                      quantity:
                                        type: number
                                        format: double
                                        exclusiveMinimum: 0
                                        description: Number of units.
                                        example: 1
                                      discountRate:
                                        type: number
                                        format: double
                                        description: Discount rate that the merchant applies to the item.
                                        exclusiveMinimum: 0
                                        example: 5
                                      taxes:
                                        type: array
                                        description: Array of objects that contain information about each tax that applies to the item.
                                        items:
                                          required: *ref_118
                                          type: object
                                          properties: *ref_119
                        dccOffer:
                          required: &ref_212
                            - fxAmount
                            - fxCurrency
                            - fxRate
                            - markup
                          type: object
                          description: |
                            Object that contains information about the dynamic currency conversion (DCC) offer.  
                              
                            For more information about DCC, go to [Dynamic Currency Conversion](/knowledge/card-payments/dynamic-currency-conversion).
                          properties: &ref_213
                            accepted:
                              type: boolean
                              writeOnly: true
                              description: Indicates if the cardholder accepted DCC offer.
                              example: true
                            offerReference:
                              type: string
                              description: Unique identifier of the DCC offer.
                              example: DCC123456789
                            fxAmount:
                              type: integer
                              format: int64
                              description: Amount in the cardholder’s currency in the currency’s lowest denomination, for example, cents.
                              example: 3955
                            fxCurrency:
                              description: Currency of the transaction in the card’s currency. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                              allOf:
                                - type: string
                                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                                  enum: *ref_82
                            fxCurrencyCode:
                              maxLength: 3
                              minLength: 3
                              type: string
                              readOnly: true
                              description: Three-digit currency code for the card. This code follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                              example: CAD
                            fxCurrencyExponent:
                              type: integer
                              readOnly: true
                              description: |
                                Number of decimal places between the smallest currency unit and a whole currency unit. 

                                For example, for GBP, the smallest currency unit is 1p and it is equal to £0.01. 
                                If you use GBP, the value for **fxCurrencyExponent** is 2.
                              format: int32
                              example: 2
                            fxRate:
                              type: number
                              description: Foreign exchange rate for the card's currency.
                              format: double
                              example: 1.37
                            markup:
                              type: number
                              description: Markup percentage rate that the DCC provider applies to the foreign exchange rate.
                              format: double
                              example: 3.5
                            markupText:
                              type: string
                              readOnly: true
                              description: Supporting text for the markup rate.
                              example: 3.5% mark-up applied.
                            provider:
                              type: string
                              readOnly: true
                              description: Name of the DCC provider.
                              example: DCC Provider Inc.
                            source:
                              type: string
                              readOnly: true
                              description: Source that the DCC provider used to get the foreign exchange rates.
                              example: European Central Bank
                        standingInstructions:
                          required: &ref_665
                            - processingModel
                            - sequence
                          type: object
                          description: If you don't use our Subscriptions mechanism, include this section to configure your standing/recurring orders.
                          properties: &ref_666
                            sequence:
                              type: string
                              description: Position of the transaction in the payment plan sequence.
                              enum:
                                - first
                                - subsequent
                              example: first
                            processingModel:
                              type: string
                              description: |
                                Indicates the type of payment instruction.

                                - 'unscheduled' – The payment is not part of a regular billing cycle.
                                - 'recurring' – The payment is part of a regular billing cycle with no end date.
                                - 'installment' – The payment is part of a regular billing cycle with an end date.
                              enum:
                                - unscheduled
                                - recurring
                                - installment
                              example: recurring
                            referenceDataOfFirstTxn:
                              description: Object that contains information about the initial payment for the payment instruction.
                              type: object
                              properties: &ref_664
                                paymentId:
                                  maxLength: 10
                                  minLength: 10
                                  type: string
                                  description: |
                                    Unique identifier of the first payment.  
                                    **Note:** We recommend that you always send a value for **paymentId**.
                                  example: M2MJOG6O2Y
                                cardSchemeReferenceId:
                                  maxLength: 64
                                  minLength: 1
                                  type: string
                                  description: Identifier that the card brand assigns to the payment instruction.
                                  example: ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                ipAddress:
                  required: *ref_166
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: *ref_167
                paymentMethod:
                  type: object
                  description: Object that contains information about the customer's payment details.
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                      digitalWallet: '#/components/schemas/digitalWalletPayload'
                      singleUseToken: '#/components/schemas/singleUseTokenPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                    - required: &ref_237
                        - type
                        - encryptedData
                        - serviceProvider
                      type: object
                      writeOnly: true
                      title: Digital wallet
                      description: Object that contains information about the payment details in the customer’s digital wallet.
                      properties: &ref_238
                        type:
                          type: string
                          description: Method that the terminal used to take the payment.
                          enum:
                            - digitalWallet
                        accountType:
                          type: string
                          description: |
                            Indicates the customer’s account type.  

                            **Note:** Send a value for accountType only for bank account details.
                          enum:
                            - checking
                            - savings
                          example: checking
                        serviceProvider:
                          type: string
                          description: |
                            Provider of the digital wallet. Send one of the following values:
                            - `apple` - For more information about how to integrate with Apple Pay, go to [Apple Pay®](/guides/integrate/apple-pay).
                            - `google` - For more information about how to integrate with google Pay, go to [Google Pay®](/guides/integrate/google-pay).
                          enum:
                            - apple
                            - google
                        cardholderName:
                          maxLength: 50
                          minLength: 0
                          type: string
                          description: Cardholder’s name.
                        encryptedData:
                          maxLength: 20480
                          minLength: 128
                          type: string
                          description: Encrypted data of the digital wallet.
                    - required: *ref_170
                      type: object
                      writeOnly: true
                      title: Single-use token
                      description: Object that contains information about the single-use token, which represents the customer’s payment details.
                      properties: *ref_171
                threeDSecure:
                  type: object
                  description: Object that contains information for an authentication check on the customer's payment details using the 3-D Secure protocol.
                  discriminator:
                    propertyName: serviceProvider
                    mapping:
                      gateway: '#/components/schemas/gatewayThreeDSecure'
                      thirdParty: '#/components/schemas/thirdPartyThreeDSecure'
                  oneOf:
                    - required: *ref_172
                      type: object
                      title: Gateway
                      description: Object that contains the 3-D Secure information from our gateway.
                      properties: *ref_173
                    - required: *ref_174
                      type: object
                      title: Third party
                      description: Object that contains the 3-D Secure information from a third party.
                      properties: *ref_175
                credentialOnFile:
                  type: object
                  description: Object that contains information about saving the customer’s payment details.
                  properties: &ref_205
                    externalVault:
                      type: boolean
                      default: false
                      description: Indicates if the merchant uses a third-party vault to store the customer’s payment details.
                      example: false
                    tokenize:
                      type: boolean
                      description: Indicates if our gateway should tokenize the customer’s payment details as part of the transaction.
                      example: true
                    secureTokenId:
                      maxLength: 200
                      minLength: 0
                      type: string
                      description: |
                        Unique identifier that the merchant creates for the secure token that represents the customer’s payment details.  
                        **Note:** If you do not send a value for the **secureTokenId**, our gateway generates a unique identifier for the token.
                      example: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    mitAgreement:
                      type: string
                      description: |
                        Indicates how the merchant can use the customer’s card details, as agreed by the customer:  

                        - `unscheduled` - Transactions for a fixed or variable amount that are run at a certain pre-defined event.  
                        - `recurring` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Recurring transactions don’t have a fixed duration and run until the customer cancels the agreement.  
                        - `installment` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Installment transactions have a fixed duration.  
                          
                        **Note:** If you send a value for **mitAgreement**, you must send the **standingInstructions** object in the **paymentOrder** object.
                      enum:
                        - unscheduled
                        - recurring
                        - installment
                      example: recurring
                offlineProcessing:
                  required: &ref_671
                    - operation
                  type: object
                  description: Object that contains information about the transaction if the merchant ran it when the terminal was offline.
                  properties: &ref_672
                    operation:
                      type: string
                      description: Status of the transaction.
                      enum:
                        - offlineDecline
                        - offlineApproval
                        - deferredAuthorization
                      example: offlineApproval
                    approvalCode:
                      maxLength: 48
                      minLength: 0
                      type: string
                      description: Approval code for the transaction from the processor.
                      example: OK3
                    dateTime:
                      type: string
                      format: date-time
                      description: Date and time that the merchant ran the transaction. The date follows the ISO 8601 standard.
                      example: '2024-07-02T15:30:00Z'
                autoCapture:
                  type: boolean
                  default: true
                  description: |
                    Indicates if we should automatically capture the payment amount.  

                    - `true` - Run a sale and automatically capture the transaction.
                    - `false`- Run a pre-authorization and capture the transaction later.  
                      
                    **Note:** If you send `false` and the terminal doesn't support pre-authorization, we set the transaction's status to pending. The merchant must capture the transaction to take payment from the customer.
                  example: true
                processAsSale:
                  type: boolean
                  default: false
                  description: |
                    Indicates if we should immediately settle the sale transaction. The merchant cannot adjust the transaction if we immediately settle it.  
                    **Note:** If the value for **processAsSale** is `true`, the gateway ignores the value in **autoCapture**.
                  example: false
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              paymentRequest:
                summary: Card Payment
                description: Payment
                value: &ref_879
                  channel: web
                  processingTerminalId: '1234001'
                  operator: Jane
                  order:
                    orderId: OrderRef6543
                    description: Large Pepperoni Pizza
                    currency: USD
                    amount: 4999
                  customer:
                    firstName: Sarah
                    lastName: Hopper
                    billingAddress:
                      address1: 1 Example Ave.
                      address2: Example Address Line 2
                      address3: Example Address Line 3
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    shippingAddress:
                      recipientName: Sarah Hopper
                      address:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                  paymentMethod:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      keyedData:
                        dataFormat: plainText
                        device:
                          model: paxA80
                          serialNumber: WPC202833004712
                        expiryDate: '1225'
                        cardNumber: '4539858876047062'
                  customFields:
                    - name: yourCustomField
                      value: abc123
              applePaySaleRequest:
                summary: Apple Pay Payment
                value: &ref_880
                  channel: web
                  processingTerminalId: '1234001'
                  operator: Jane
                  order:
                    orderId: 1234567890W
                    description: Card Transaction (APPLE)
                    amount: 4999
                    currency: USD
                  paymentMethod:
                    type: digitalWallet
                    serviceProvider: apple
                    encryptedData: 
        required: true
      responses:
        '201':
          description: Successful request. We processed the transaction.
          content:
            application/json:
              schema:
                required: &ref_197
                  - card
                  - order
                  - paymentId
                  - processingTerminalId
                  - transactionResult
                type: object
                properties: &ref_198
                  paymentId:
                    maxLength: 10
                    minLength: 10
                    type: string
                    description: Unique identifier that our gateway assigned to the transaction.
                    example: M2MJOG6O2Y
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier of the terminal that initiated the transaction.
                    example: '1234001'
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    description: Operator who initiated the request.
                    example: Jane
                  order:
                    required: *ref_176
                    type: object
                    description: Object that contains information about the payment.
                    allOf: *ref_177
                  customer:
                    type: object
                    description: Object that contains the customer's contact details and address information.
                    properties: *ref_144
                  card:
                    required: &ref_216
                      - cardNumber
                      - entryMethod
                      - expiryDate
                      - type
                    type: object
                    description: Object that contains the details of the payment card.
                    properties: &ref_217
                      type:
                        type: string
                        description: Card brand of the card, for example, Visa.
                        example: Visa
                      entryMethod:
                        type: string
                        description: Method that the device used to capture the card details.
                        enum:
                          - icc
                          - keyed
                          - swiped
                          - swipedFallback
                          - contactlessIcc
                          - contactlessMsr
                        example: contactlessIcc
                      cardholderName:
                        maxLength: 50
                        minLength: 1
                        type: string
                        description: Cardholder’s name.
                        example: Sarah Hazel Hopper
                      cardholderSignature:
                        type: string
                        description: Cardholder’s signature.
                        example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      cardNumber:
                        maxLength: 19
                        minLength: 12
                        type: string
                        description: |
                          Masked card number. Our gateway shows only the first six digits and the last four digits of the card number, for example, 548010******5929.
                        example: '4539858876047062'
                      expiryDate:
                        pattern: '[0-9]{4}'
                        type: string
                        description: Expiry date of the customer's card. The format is in **MMYY**.
                        example: '0725'
                      secureToken:
                        required: *ref_132
                        type: object
                        description: Object that contains information about the secure token.
                        properties: *ref_133
                      securityChecks:
                        type: object
                        description: Object that contains information about card verification and security checks.
                        properties: &ref_178
                          cvvResult:
                            type: string
                            description: |
                              Indicates if the card verification value (CVV) that the customer provided in the request matches the CVV on the card.  
                              - `M` – The CVV matches the card’s CVV.  
                              - `N` – The CVV doesn’t match the card’s CVV.  
                              - `P` – The CVV wasn’t processed.  
                              - `U` – The CVV isn’t registered.  

                              **Note:** Our gateway doesn’t automatically decline transactions when the CVV doesn’t match the card’s CVV, unless the merchant selects this setting in their account.
                            enum:
                              - M
                              - 'N'
                              - P
                              - U
                            example: M
                          avsResult:
                            type: string
                            description: |
                              Indicates if the address that the customer provided in the request matches the address linked to the card.

                              - `Y` – The address in the request matches the address linked to the card.  
                              - `N` – The address in the request doesn’t match the address linked to the card.  
                              - `A` – The street address matches, but ZIP code or postal code doesn’t match.  
                              - `Z` - The ZIP code or postal code matches, but street address doesn’t match.  
                              - `U` – The address information is unavailable.  
                              - `G` – The issuer or card brand doesn’t support the Address Verification Service (AVS).  
                              - `R` – The AVS is currently unavailable. Try again later.  
                              - `S` – There was no AVS data in the request, or it was sent in the wrong format.  
                              - `F` - For UK addresses, the address in the request matches the address linked to the card.  
                              - `W` – For US addresses, the nine-digit ZIP code or postal code in the request matches the address linked to the card but the street address doesn’t.  
                              - `X` – For US addresses, the nine-digit ZIP code or postal code and the street address matches the address linked to the card.  
                                
                              **Note:** Our gateway doesn’t automatically decline transactions when the address doesn’t match the address linked to the card, 
                              unless the merchant selects this setting in their account.
                            enum:
                              - 'Y'
                              - A
                              - Z
                              - 'N'
                              - U
                              - R
                              - G
                              - S
                              - F
                              - W
                              - X
                            example: 'Y'
                      emvTags:
                        type: array
                        uniqueItems: true
                        description: Array of emvTag objects.
                        items:
                          required: &ref_179
                            - hex
                            - value
                          type: object
                          description: Object that contains information about the EMV tag.
                          properties: &ref_180
                            hex:
                              type: string
                              description: Hex code of the EMV tag.
                              example: 9F36
                            value:
                              type: string
                              description: Value of the EMV tag.
                              example: '001234'
                        example:
                          - hex: 9F36
                            value: '001234'
                          - hex: 5F2A
                            value: '0840'
                      balances:
                        type: array
                        description: Array of cardBalance objects. Our gateway returns this array only when the customer uses an Electronic Benefit Transfer (EBT) card.
                        items:
                          required: &ref_181
                            - amount
                            - benefitCategory
                            - currency
                          type: object
                          description: Object that contains information about the total funds available in the card.
                          properties: &ref_182
                            benefitCategory:
                              type: string
                              description: |
                                Indicates if the balance relates to an EBT Cash account or EBT SNAP account.  
                                - `cash` – EBT Cash  
                                - `foodStamp` – EBT SNAP
                              enum:
                                - cash
                                - foodStamp
                              example: cash
                            amount:
                              type: integer
                              format: int64
                              description: Current balance of the account. This value is in the currency's lowest denomination, for example, cents.
                              example: 50000
                            currency:
                              type: string
                              description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                              enum: *ref_82
                        example:
                          - benefitCategory: cash
                            amount: 50000
                            currency: USD
                          - benefitCategory: foodStamp
                            amount: 10000
                            currency: USD
                  refunds:
                    type: array
                    uniqueItems: true
                    description: |
                      Array of refundSummary objects. 
                      Each object contains information about refunds linked to the transaction.
                    items:
                      required: &ref_183
                        - amount
                        - currency
                        - dateTime
                        - refundId
                        - status
                        - responseCode
                        - responseMessage
                      type: object
                      description: Object that contains information about a refund.
                      properties: &ref_184
                        refundId:
                          maxLength: 10
                          minLength: 10
                          type: string
                          description: Unique identifier of the refund.
                          example: CD3HN88U9F
                        dateTime:
                          type: string
                          format: date-time
                          description: Date and time that the refund was processed.
                          example: '2024-07-14T12:25:00Z'
                        currency:
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                        amount:
                          type: integer
                          format: int64
                          description: Amount of the refund. This value is in the currency’s lowest denomination, for example, cents.
                          example: 4999
                        status:
                          type: string
                          description: Current status of the refund.
                          enum:
                            - ready
                            - pending
                            - declined
                            - complete
                            - referral
                            - pickup
                            - reversal
                            - returned
                            - admin
                            - expired
                            - accepted
                          example: complete
                        responseCode:
                          type: string
                          description: |
                            Response from the processor.  
                            - `A` - The processor approved the transaction.  
                            - `D` - The processor declined the transaction.  
                            - `E` - The processor received the transaction but will process the transaction later.  
                            - `P` - The processor authorized a portion of the original amount of the transaction.  
                            - `R` - The issuer declined the transaction and indicated that the customer should contact their bank.  
                            - `C` - The issuer declined the transaction and indicated that the merchant should keep the card as it was reported lost or stolen.
                          enum:
                            - A
                            - D
                            - E
                            - P
                            - R
                            - C
                          example: A
                        responseMessage:
                          maxLength: 48
                          minLength: 1
                          type: string
                          description: Description of the response from the processor.
                          example: Transaction refunded
                        link:
                          type: object
                          readOnly: true
                          description: Object that contains HATEOAS links for the resource.
                          properties: *ref_4
                          required: *ref_5
                          example: *ref_6
                  supportedOperations:
                    type: array
                    items: &ref_185
                      type: string
                      enum:
                        - capture
                        - refund
                        - fullyReverse
                        - partiallyReverse
                        - incrementAuthorization
                        - adjustTip
                        - addSignature
                        - setAsReady
                        - setAsPending
                    description: |
                      Array of operations that you can perform on the transaction.
                      - `capture`                - Capture the payment.
                      - `refund`                 - Refund the payment.
                      - `fullyReverse`           - Fully reverse the transaction.
                      - `partiallyReverse`       - Partially reverse the payment.
                      - `incrementAuthorization` - Increase the amount of the authorization.
                      - `adjustTip`              - Adjust the tip post-payment.
                      - `addSignature`           - Add a signature to the payment.
                      - `setAsReady`             - Set the transaction’s status to `ready`.
                      - `setAsPending`           - Set the transaction’s status to `pending`.
                    example: &ref_186
                      - capture
                      - refund
                      - fullyReverse
                      - partiallyReverse
                      - incrementAuthorization
                      - adjustTip
                      - addSignature
                      - setAsReady
                      - setAsPending
                  transactionResult:
                    required: &ref_187
                      - status
                      - responseCode
                    type: object
                    properties: &ref_188
                      type:
                        type: string
                        description: Transaction type.
                        enum:
                          - sale
                          - refund
                          - preAuthorization
                          - preAuthorizationCompletion
                      ebtType:
                        type: string
                        description: Indicates the subtype of EBT in the transaction.
                        enum:
                          - cashPurchase
                          - cashPurchaseWithCashback
                          - foodStampPurchase
                          - foodStampVoucherPurchase
                          - foodStampReturn
                          - foodStampVoucherReturn
                          - cashBalanceInquiry
                          - foodStampBalanceInquiry
                          - cashWithdrawal
                      status:
                        type: string
                        description: Current status of the transaction.
                        enum:
                          - ready
                          - pending
                          - declined
                          - complete
                          - referral
                          - pickup
                          - reversal
                          - admin
                          - expired
                          - accepted
                      approvalCode:
                        maxLength: 48
                        minLength: 1
                        type: string
                        description: Authorization code that the processor assigned to the transaction.
                      authorizedAmount:
                        type: integer
                        format: int64
                        description: |
                          Amount that the processor authorized for the transaction. This value is in the currency’s lowest denomination, for example, cents.  

                          **Notes:**  
                          - For partial authorizations, this amount is lower than the amount in the request.
                          - If the value for **authorizedAmount** is negative, this indicates that the merchant sent funds to the customer.
                      currency:
                        type: string
                        description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                        enum: *ref_82
                      responseCode:
                        type: string
                        description: |
                          Response from the processor.  
                          - `A` - The processor approved the transaction.  
                          - `D` - The processor declined the transaction.  
                          - `E` - The processor received the transaction but will process the transaction later.  
                          - `P` - The processor authorized a portion of the original amount of the transaction.  
                          - `R` - The issuer declined the transaction and indicated that the customer should contact their bank.  
                          - `C` - The issuer declined the transaction and indicated that the merchant should keep the card as it was reported lost or stolen.
                        enum:
                          - A
                          - D
                          - E
                          - P
                          - R
                          - C
                      responseMessage:
                        maxLength: 48
                        minLength: 1
                        type: string
                        description: Response description from the processor.
                      processorResponseCode:
                        type: string
                        description: Original response code that the processor sent.
                      cardSchemeReferenceId:
                        maxLength: 64
                        minLength: 1
                        type: string
                        description: Identifier that the card brand assigns to the payment instruction.
                    description: Object that contains information about the transaction response details.
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                createdPayment:
                  summary: Payment
                  description: Payment
                  value: &ref_191
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    operator: Jane
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Large Pepperoni Pizza
                      amount: 4999
                      currency: USD
                    customer:
                      firstName: Sarah
                      lastName: Hopper
                      billingAddress:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                    card:
                      type: MasterCard
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      securityChecks:
                        cvvResult: M
                        avsResult: 'Y'
                    supportedOperations:
                      - capture
                      - fullyReverse
                      - partiallyReverse
                      - incrementAuthorization
                      - adjustTip
                      - setAsPending
                    transactionResult:
                      type: sale
                      status: ready
                      approvalCode: OK3
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                      responseMessage: OK3
                    customFields:
                      - name: yourCustomField
                        value: abc123
                applePaySaleResponse:
                  summary: Apple Pay Payment
                  value: &ref_881
                    paymentId: J9VULKIKFP
                    processingTerminalId: '1234001'
                    operator: Jane
                    order:
                      orderId: 1234567890W
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Card Transaction (APPLE)
                      amount: 4999
                      currency: USD
                    card:
                      type: MasterCard
                      entryMethod: keyed
                      cardNumber: 500165******0000
                      expiryDate: '0328'
                      securityChecks:
                        avsResult: U
                    supportedOperations:
                      - capture
                      - fullyReverse
                      - partiallyReverse
                      - incrementAuthorization
                      - adjustTip
                      - setAsPending
                    transactionResult:
                      type: sale
                      status: ready
                      approvalCode: OK3
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                      responseMessage: APPROVAL
                      processorResponseCode: '00'
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Payments
      summary: List payments
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of payments. 

        **Note:** If you want to view a specific payment and you have its paymentId, use our [Retrieve Payment](https://docs.payroc.com/api/schema/payments/retrieve) method.  

        Use query parameters to filter the list of results that we return, for example, to search for payments for a customer, a tip mode, or a date range.  

        Our gateway returns the following information about each payment in the list:  

        - Order details, including the transaction amount and when it was processed.  
        - Payment card details, including the masked card number, expiry date, and payment method. 
        - Cardholder details, including their contact information and shipping address. 
        - Payment details, including the payment type, status, and response. 
         
        For each transaction, we also return the paymentId and an optional secureTokenId, which you can use to perform follow-on actions. 
      operationId: listPayments
      parameters:
        - name: processingTerminalId
          in: query
          description: Filter by terminal ID.
          schema: &ref_220
            maxLength: 50
            minLength: 4
            type: string
          examples: &ref_221
            example:
              value: '1234001'
        - name: orderId
          in: query
          description: Filter payments by order ID.
          schema: &ref_389
            maxLength: 24
            minLength: 1
            type: string
          examples: &ref_390
            example:
              value: OrderRef6543
        - name: operator
          in: query
          description: Filter payments by operator.
          schema: &ref_391
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_392
            example:
              value: Jane
        - name: cardholderName
          in: query
          description: Filter payments by the cardholder’s name.
          schema: &ref_393
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_394
            example:
              value: Sarah%20Hazel%20Hopper
        - name: first6
          in: query
          description: Filter payments by the first six digits of the card number that the customer used in the transaction.
          schema: &ref_395
            pattern: '[0-9]{6}'
            type: string
          examples: &ref_396
            example:
              value: '453985'
        - name: last4
          in: query
          description: Filter payments by the last four digits of the card number that the customer used in the transaction.
          schema: &ref_397
            pattern: '[0-9]{4}'
            type: string
          examples: &ref_398
            example:
              value: '7062'
        - name: tender
          in: query
          description: Filter by tender type.
          schema:
            type: string
            enum:
              - ebt
              - creditDebit
          examples:
            example:
              value: ebt
        - name: tipMode
          in: query
          description: Filter payments by tip.
          schema: &ref_401
            type: array
            items:
              type: string
              enum:
                - noTip
                - prompted
                - adjusted
          examples: &ref_402
            example:
              value:
                - noTip
                - prompted
        - name: type
          in: query
          description: Filter payments by transaction type.
          schema: &ref_403
            type: array
            items:
              type: string
              enum:
                - sale
                - preAuthorization
                - preAuthorizationCompletion
          examples: &ref_404
            example:
              value:
                - sale
                - preAuthorization
        - name: status
          in: query
          description: Filter payments by the status of the transaction.
          schema: &ref_405
            type: array
            items:
              type: string
              enum:
                - ready
                - pending
                - declined
                - complete
                - referral
                - pickup
                - reversal
                - admin
                - expired
                - accepted
          examples: &ref_406
            example:
              value:
                - accepted
                - ready
                - complete
        - name: dateFrom
          in: query
          description: Filter by payments that the processor processed after a specific date. The date format follows the ISO 8601 standard.
          schema: &ref_407
            type: string
            format: date-time
          examples: &ref_408
            example:
              value: '2024-07-01T15:30:00Z'
        - name: dateTo
          in: query
          description: Filter by payments that the processer processed before a specific date. The date format follows the ISO 8601 standard.
          schema: &ref_409
            type: string
            format: date-time
          examples: &ref_410
            example:
              value: '2024-07-03T15:30:00Z'
        - name: settlementState
          in: query
          description: Filter payments by the settlement status of the transaction.
          schema: &ref_411
            type: string
            enum:
              - settled
              - unsettled
          examples: &ref_412
            example:
              value: settled
        - name: settlementDate
          in: query
          description: Filter by payments that the processor settled on a specific date in the format **YYYY-MM-DD**.
          schema: &ref_413
            type: string
            format: date
          examples: &ref_414
            example:
              value: '2024-07-02'
        - name: paymentLinkId
          in: query
          description: Unique identifier that our gateway assigned to the payment link.
          schema: &ref_415
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_416
            example:
              value: JZURRJBUPS
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of payments.
          content:
            application/json:
              schema:
                required: &ref_669
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_670
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of transactions.
                        items:
                          required: &ref_189
                            - card
                            - order
                            - paymentId
                            - processingTerminalId
                            - transactionResult
                          type: object
                          properties: &ref_190
                            paymentId:
                              maxLength: 10
                              minLength: 10
                              type: string
                              description: Unique identifier that our gateway assigned to the transaction.
                              example: M2MJOG6O2Y
                            processingTerminalId:
                              maxLength: 50
                              minLength: 4
                              type: string
                              description: Unique identifier of the terminal that initiated the transaction.
                              example: '1234001'
                            operator:
                              maxLength: 50
                              minLength: 0
                              type: string
                              description: Operator who initiated the request.
                              example: Jane
                            order:
                              required: *ref_176
                              type: object
                              description: Object that contains information about the payment.
                              allOf: *ref_177
                            customer:
                              type: object
                              description: Object that contains the customer's contact details and address information.
                              properties: *ref_144
                            card:
                              required: &ref_667
                                - cardNumber
                                - expiryDate
                                - type
                              type: object
                              description: Object that contains the details of the payment card.
                              properties: &ref_668
                                type:
                                  type: string
                                  description: Card brand that the card is linked to. For example, Visa.
                                  example: Visa
                                entryMethod:
                                  type: string
                                  description: Method that the device used to capture the card details.
                                  enum:
                                    - icc
                                    - keyed
                                    - swiped
                                    - swipedFallback
                                    - contactlessIcc
                                    - contactlessMsr
                                  example: contactlessIcc
                                cardholderName:
                                  maxLength: 50
                                  minLength: 1
                                  type: string
                                  description: Cardholder’s name.
                                  example: Sarah Hazel Hopper
                                cardholderSignature:
                                  type: string
                                  description: Cardholder’s signature.
                                  example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                                cardNumber:
                                  maxLength: 19
                                  minLength: 12
                                  type: string
                                  description: |
                                    Masked card number. Our gateway shows only the first six digits and the last four digits of the card number, for example, 548010******5929.
                                  example: '4539858876047062'
                                expiryDate:
                                  pattern: '[0-9]{4}'
                                  type: string
                                  description: Expiry date of the customer's card. The format is in **MMYY**.
                                  example: '0725'
                                secureToken:
                                  required: *ref_132
                                  type: object
                                  description: Object that contains information about the secure token.
                                  properties: *ref_133
                                securityChecks:
                                  type: object
                                  description: Object that contains information about card verification and security checks.
                                  properties: *ref_178
                                emvTags:
                                  type: array
                                  uniqueItems: true
                                  description: Array of emvTag objects.
                                  items:
                                    required: *ref_179
                                    type: object
                                    description: Object that contains information about the EMV tag.
                                    properties: *ref_180
                                  example:
                                    - hex: 9F36
                                      value: '001234'
                                    - hex: 5F2A
                                      value: '0840'
                                balances:
                                  type: array
                                  description: Array of cardBalance objects. Our gateway returns this array only when the customer uses an Electronic Benefit Transfer (EBT) card.
                                  items:
                                    required: *ref_181
                                    type: object
                                    description: Object that contains information about the total funds available in the card.
                                    properties: *ref_182
                                  example:
                                    - benefitCategory: cash
                                      amount: 50000
                                      currency: USD
                                    - benefitCategory: foodStamp
                                      amount: 10000
                                      currency: USD
                            refunds:
                              type: array
                              uniqueItems: true
                              description: |
                                Array of refundSummary objects. 
                                Each object contains information about refunds linked to the transaction.
                              items:
                                required: *ref_183
                                type: object
                                description: Object that contains information about a refund.
                                properties: *ref_184
                            supportedOperations:
                              type: array
                              items: *ref_185
                              description: |
                                Array of operations that you can perform on the transaction.
                                - `capture`                - Capture the payment.
                                - `refund`                 - Refund the payment.
                                - `fullyReverse`           - Fully reverse the transaction.
                                - `partiallyReverse`       - Partially reverse the payment.
                                - `incrementAuthorization` - Increase the amount of the authorization.
                                - `adjustTip`              - Adjust the tip post-payment.
                                - `addSignature`           - Add a signature to the payment.
                                - `setAsReady`             - Set the transaction’s status to `ready`.
                                - `setAsPending`           - Set the transaction’s status to `pending`.
                              example: *ref_186
                            transactionResult:
                              required: *ref_187
                              type: object
                              properties: *ref_188
                              description: Object that contains information about the transaction response details.
                            customFields:
                              type: array
                              description: |
                                Array of customField objects.
                              items:
                                required: *ref_124
                                type: object
                                properties: *ref_125
              examples:
                paginatedResults:
                  summary: Payment
                  description: Payment
                  value: &ref_878
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - paymentId: M2MJOG6O2Y
                        processingTerminalId: '1234001'
                        operator: Automatic Payment
                        order:
                          orderId: OrderRef6543
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Monthly Premium Club subscription
                          amount: 4999
                          currency: USD
                        card:
                          type: Visa Credit
                          cardholderName: Sarah Hopper
                          cardNumber: 453985******7062
                          expiryDate: '1225'
                          entryMethod: keyed
                          secureToken:
                            secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                            customerName: Sarah Hopper
                            token: '296753123456'
                            status: notValidated
                            link:
                              rel: self
                              method: GET
                              href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                          securityChecks:
                            cvvResult: M
                            avsResult: X
                        supportedOperations:
                          - fullyReverse
                          - setAsPending
                        transactionResult:
                          type: sale
                          status: ready
                          approvalCode: OK3
                          authorizedAmount: 4999
                          currency: USD
                          responseCode: A
                          responseMessage: APPROVAL
                      - paymentId: E29U8OU8Q4
                        processingTerminalId: '1234001'
                        operator: Automatic Payment
                        order:
                          orderId: OrderRef7654
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Monthly Premium Club subscription
                          amount: 4999
                          currency: USD
                        card:
                          type: Visa Debit
                          cardholderName: Sarah Hopper
                          cardNumber: 453985******7062
                          expiryDate: '1225'
                          entryMethod: keyed
                          secureToken:
                            secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                            customerName: Sarah Hopper
                            token: '296753123456'
                            status: notValidated
                            link:
                              rel: self
                              method: GET
                              href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                          securityChecks:
                            cvvResult: M
                            avsResult: X
                        supportedOperations:
                          - fullyReverse
                          - setAsPending
                        transactionResult:
                          type: sale
                          status: ready
                          approvalCode: '475318'
                          authorizedAmount: 1000
                          currency: EUR
                          responseCode: A
                          responseMessage: APPROVAL
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/payments?processingTerminalId=1234001&limit=2&after=E29U8OU8Q4
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/payments?processingTerminalId=1234001&limit=2&before=M2MJOG6O2Y
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /payments/{paymentId}:
    get:
      tags:
        - Payments
      summary: Retrieve payment
      operationId: getPayment
      description: |
        Use this method to retrieve information about a card payment.  

        To retrieve a payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/create) method.  

        **Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/list) method to search for the payment.  

        Our gateway returns the following information about the payment:  

        - Order details, including the transaction amount and when it was processed.  
        - Payment card details, including the masked card number, expiry date, and payment method.  
        - Cardholder details, including their contact information and shipping address.  
        - Payment details, including the payment type, status, and response.  

        If the merchant saved the customer's card details, our gateway returns a secureTokenID, which you can use to perform follow-on actions.  
      parameters:
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment that the merchant wants to retrieve.
          schema: &ref_192
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_193
            example:
              value: M2MJOG6O2Y
      responses:
        '200':
          description: Successful request. Returns the payment.
          content:
            application/json:
              schema:
                required: *ref_189
                type: object
                properties: *ref_190
              examples:
                createdPayment:
                  summary: Payment
                  description: Payment
                  value: *ref_191
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /payments/{paymentId}/adjust:
    post:
      tags:
        - Payments
      summary: Adjust payment
      operationId: adjustPayment
      description: |
        Use this method to adjust a payment in an open batch. 

        To adjust a payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/create) method.

        **Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/list) method to search for the payment. 

        You can adjust the following details of the payment:
        - Sale amount and tip amount
        - Payment status
        - Cardholder shipping address and contact information
        - Cardholder signature data

        Our gateway returns information about the adjusted payment, including information about the payment card and the cardholder.
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment that the merchant wants to retrieve.
          schema: *ref_192
          examples: *ref_193
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_680
                - adjustments
              type: object
              description: Object that contains the transaction adjustment object.
              properties: &ref_681
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who adjusted the payment.
                  example: Jane
                adjustments:
                  type: array
                  description: Array of objects that contain information about the adjustments to the payment.
                  uniqueItems: true
                  items:
                    discriminator:
                      propertyName: type
                      mapping:
                        order: '#/components/schemas/orderAdjustment'
                        status: '#/components/schemas/statusAdjustment'
                        customer: '#/components/schemas/customerAdjustment'
                        signature: '#/components/schemas/signatureAdjustment'
                    oneOf:
                      - required: &ref_676
                          - type
                          - amount
                        type: object
                        title: Order
                        description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the order details.
                        properties: &ref_677
                          type:
                            type: string
                            description: Type of adjustment.
                            enum:
                              - order
                            example: order
                          amount:
                            exclusiveMinimum: 0
                            type: integer
                            format: int64
                            description: Total amount of the transaction.
                            example: 4999
                          breakdown:
                            type: object
                            description: Object that contains information about the tip amount of a transaction.
                            properties: &ref_675
                              tip:
                                required: *ref_194
                                type: object
                                description: Object that contains information about the tip.
                                properties: *ref_195
                      - required: &ref_227
                          - type
                          - toStatus
                        type: object
                        title: Status
                        description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the status of the transaction.
                        properties: &ref_228
                          type:
                            type: string
                            description: Type of adjustment.
                            enum:
                              - status
                            example: status
                          toStatus:
                            type: string
                            description: Status that you want to change the transaction to.
                            enum:
                              - ready
                              - pending
                            example: ready
                      - required: &ref_229
                          - type
                        type: object
                        title: Customer
                        description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the customer’s contact details.
                        properties: &ref_230
                          type:
                            type: string
                            description: Type of adjustment.
                            enum:
                              - customer
                            example: customer
                          shippingAddress:
                            description: Object that contains information about the customer and their shipping address.
                            type: object
                            properties: *ref_196
                          contactMethods:
                            uniqueItems: true
                            description: Customer's contact information.
                            type: array
                            items:
                              discriminator: *ref_2
                              oneOf: *ref_3
                      - required: &ref_678
                          - type
                          - cardholderSignature
                        type: object
                        title: Signature
                        description: |
                          Object that contains the signature for the transaction.  
                          **Note:** If the merchant previously added a signature to the transaction, they can’t adjust or delete the signature.
                        properties: &ref_679
                          type:
                            type: string
                            description: Type of adjustment.
                            enum:
                              - signature
                            example: signature
                          cardholderSignature:
                            type: string
                            description: Cardholder’s signature. For more information about the format of the signature, see Special Fields and Parameters.
                            example: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
            examples:
              adjustPaymentRequest:
                summary: Adjust Payment
                description: Adjust Payment
                value: &ref_882
                  adjustments:
                    - type: customer
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                    - type: order
                      amount: 3999
        required: true
      responses:
        '200':
          description: Successful request. We adjusted the transaction.
          content:
            application/json:
              schema:
                required: *ref_197
                type: object
                properties: *ref_198
              examples:
                adjustPaymentResponse:
                  summary: Adjust Payment
                  description: Adjust Payment
                  value: &ref_883
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Example payment
                      amount: 4999
                      currency: USD
                    customer:
                      firstName: Sarah
                      lastName: Hopper
                      billingAddress:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                    card:
                      type: MasterCard
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      securityChecks:
                        cvvResult: M
                        avsResult: 'Y'
                    supportedOperations:
                      - capture
                      - fullyReverse
                      - partiallyReverse
                      - incrementAuthorization
                      - adjustTip
                      - setAsPending
                    transactionResult:
                      type: sale
                      status: ready
                      approvalCode: OK6
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                      responseMessage: OK6
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /payments/{paymentId}/capture:
    post:
      tags:
        - Payments
      summary: Capture payment
      operationId: capturePayment
      description: "Use this method to capture a pre-authorization. \n\nTo capture a pre-authorization, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/create) method.\n\n**Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/list) method to search for the payment.\n\nDepending on the amount you want to capture, complete the following:\n-\t**Capture the full amount of the pre-authorization** - Don't send a value for the amount parameter in your request.\n-\t**Capture less than the amount of the pre-authorization** - Send a value for the amount parameter in your request. \n-\t**Capture more than the amount of the pre-authorization** - Adjust the pre-authorization before you capture it. For more information about adjusting a pre-authorization, go to [Adjust Payment](https://docs.payroc.com/api/schema/payments/adjust).\n\nIf your request is successful, our gateway takes the amount from the payment card. \n\n**Note:** For more information about pre-authorizations and captures, go to [Run a pre-authorization](/guides/integrate/run-a-pre-authorization).\n"
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment that the merchant wants to retrieve.
          schema: *ref_192
          examples: *ref_193
      requestBody:
        content:
          application/json:
            schema:
              description: Object that contains the details of the payment that the merchant wants to capture.
              type: object
              properties: &ref_682
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that our gateway assigned to the terminal.
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who captured the payment.
                  example: Jane
                amount:
                  type: integer
                  format: int64
                  description: |
                    Amount that the merchant wants to capture. The value is in the currency's lowest denomination, for example, cents.  
                    **Note:** If the merchant does not send an amount, we capture the total amount of the transaction.
                  example: 4999
                breakdown:
                  required: *ref_199
                  type: object
                  description: Object that contains information about the breakdown of the transaction.
                  allOf: *ref_200
            examples:
              paymentCapture:
                summary: Payment capture
                description: Capture a payment with itemized breakdown
                value: &ref_884
                  processingTerminalId: '1234001'
                  operator: Jane
                  amount: 4999
                  breakdown:
                    dutyAmount: 499
                    freightAmount: 500
                    subtotal: 4999
                    items:
                      - unitPrice: 4000
                        quantity: 1
      responses:
        '200':
          description: Successful request. We captured the payment.
          content:
            application/json:
              schema:
                required: *ref_197
                type: object
                properties: *ref_198
              examples:
                payment:
                  summary: Payment
                  description: Payment
                  value: *ref_191
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /payments/{paymentId}/reverse:
    post:
      tags:
        - Payments
      summary: Reverse payment
      operationId: reversePayment
      description: |
        Use this method to cancel or to partially cancel a payment in an open batch. This is also known as voiding a payment.  

        To cancel a payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/create) method.  

        **Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/list) method to search for the payment.  

        If your request is successful, our gateway removes the payment from the merchant's open batch and no funds are taken from the cardholder's account. 
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment that the merchant wants to retrieve.
          schema: *ref_192
          examples: *ref_193
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: &ref_683
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who reversed the payment.
                amount:
                  type: integer
                  format: int64
                  description: |
                    Amount of the payment that the merchant wants to reverse. The value is in the currency’s lowest denomination, for example, cents.  
                    **Note:** If the merchant doesn’t send an amount, we reverse the total amount of the transaction.
            examples:
              reversalPayment:
                summary: Reversal Payment
                description: Reversal Payment
                value: &ref_885
                  amount: 4999
      responses:
        '200':
          description: Successful request. We reversed the payment.
          content:
            application/json:
              schema:
                required: *ref_197
                type: object
                properties: *ref_198
              examples:
                reversalPayment:
                  summary: Reversal Payment
                  description: Reversal Payment
                  value: &ref_886
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Large Pepperoni Pizza
                      amount: 4999
                      currency: USD
                    customer:
                      firstName: Sarah
                      lastName: Hopper
                      billingAddress:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: IT
                          postalCode: '60056'
                    card:
                      type: MasterCard
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      securityChecks:
                        cvvResult: M
                        avsResult: 'Y'
                    supportedOperations:
                      - capture
                      - fullyReverse
                      - partiallyReverse
                      - incrementAuthorization
                      - adjustTip
                      - setAsPending
                    transactionResult:
                      type: sale
                      status: reversal
                      approvalCode: OK2
                      authorizedAmount: 100
                      currency: USD
                      responseCode: A
                      responseMessage: OK2
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /payments/{paymentId}/refund:
    post:
      tags:
        - Payments
      summary: Refund payment
      operationId: refundPayment
      description: |
        Use this method to refund a payment that is in a closed batch.  

        To refund a payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/create) method.  

        **Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/list) method to search for the payment.  

        If your refund is successful, our gateway returns the payment amount to the cardholder's account.  

        **Things to consider**  

        - If the merchant refunds a payment that is in an open batch, our gateway reverses the payment.
        - Some merchants can run unreferenced refunds, which means that they don't need a paymentId to return an amount to a customer. For more information about how to run an unreferenced refund, go to [Create Refund](https://docs.payroc.com/api/schema/payments/refunds/create).
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          in: path
          required: true
          description: Unique identifier of the payment that the merchant wants to retrieve.
          schema: *ref_192
          examples: *ref_193
      requestBody:
        content:
          application/json:
            schema:
              description: Object that contains the details of the payment that the merchant wants to refund.
              required: &ref_684
                - amount
                - description
              type: object
              properties: &ref_685
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who refunded the payment.
                  example: Jane
                amount:
                  type: integer
                  format: int64
                  description: Amount of the payment that the merchant wants to refund. The value is in the currency’s lowest denomination, for example, cents.
                  example: 4999
                description:
                  maxLength: 100
                  minLength: 1
                  type: string
                  description: Reason for the refund.
                  example: Customer requested a refund due to a wrong order.
            examples:
              refundPaymentRequest:
                summary: Refund Payment
                description: Refund Payment
                value: &ref_887
                  amount: 4999
                  description: Refund for order OrderRef6543
        required: true
      responses:
        '200':
          description: Successful request. We refunded the payment.
          content:
            application/json:
              schema:
                required: *ref_197
                type: object
                properties: *ref_198
              examples:
                refundPayment:
                  summary: Refund Payment
                  description: Refund Payment
                  value: &ref_888
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    operator: Jane
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Large Pepperoni Pizza
                      amount: 4999
                      currency: USD
                    customer:
                      firstName: Sarah
                      lastName: Hopper
                      billingAddress:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      shippingAddress:
                        recipientName: Sarah Hopper
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                    card:
                      type: MasterCard
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      securityChecks:
                        cvvResult: M
                        avsResult: 'Y'
                    refunds:
                      - refundId: CD3HN88U9F
                        dateTime: '2024-07-02T15:30:00Z'
                        amount: -4999
                        currency: USD
                        status: ready
                        responseCode: A
                        responseMessage: Transaction refunded
                        link:
                          rel: self
                          method: GET
                          href: https://api.payroc.com/v1/refunds/BI77XQFQ05
                    supportedOperations:
                      - refund
                    transactionResult:
                      type: sale
                      status: complete
                      approvalCode: OK3
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                      responseMessage: OK13
                    customFields:
                      - name: yourCustomField
                        value: acb123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /devices/{serialNumber}/payment-instructions:
    post:
      tags:
        - Payment instructions
      summary: Submit payment instruction
      operationId: sendPaymentInstruction
      description: |
        Submit an instruction request to initiate a sale on a payment device.  

        In the response, our gateway returns information about the payment instruction and a paymentInstructionId, which you need for the following methods:
        - [Retrieve payment instruction](https://docs.payroc.com/api/schema/payroc-cloud/payment-instructions/retrieve) - View the details of the payment instruction.
        - [Cancel payment instruction](https://docs.payroc.com/api/schema/payroc-cloud/payment-instructions/delete) - Cancel the payment instruction.
      parameters:
        - name: serialNumber
          description: Serial number that identifies the merchant’s payment device.
          in: path
          required: true
          schema:
            maxLength: 64
            minLength: 1
            type: string
          examples:
            example:
              value: '1850010868'
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required: &ref_688
                - order
                - processingTerminalId
              type: object
              description: Object that contains the instructions for initiating a payment on a physical device.
              properties: &ref_689
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                  example: Jane
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                order:
                  required: &ref_686
                    - amount
                    - currency
                    - orderId
                  type: object
                  description: Object that contains information about the payment.
                  allOf: &ref_687
                    - required: *ref_201
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_202
                    - type: object
                      properties:
                        breakdown:
                          required: *ref_203
                          type: object
                          description: Object that contains information about the breakdown of the transaction.
                          properties: *ref_204
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                ipAddress:
                  required: *ref_166
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: *ref_167
                credentialOnFile:
                  type: object
                  description: Object that contains information about saving the customer’s payment details.
                  properties: *ref_205
                customizationOptions:
                  type: object
                  description: Object that contains available options to customize certain aspects of an instruction.
                  properties: &ref_231
                    ebtDetails:
                      type: object
                      required: *ref_206
                      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                      properties: *ref_207
                    entryMethod:
                      type: string
                      description: |
                        Indicates how you want the device to capture the card details.  
                        - `deviceRead` - The cardholder taps, swipes, or inserts their card.
                        - `manualEntry` - The merchant or cardholder manually enters the card details.
                      enum:
                        - deviceRead
                        - manualEntry
                      default: deviceRead
                      example: deviceRead
                autoCapture:
                  type: boolean
                  default: true
                  description: |
                    Indicates if we should automatically capture the payment amount.  

                    - `true` - Run a sale and automatically capture the transaction.
                    - `false`- Run a pre-authorization and capture the transaction later.  

                    **Note:** If you send `false` and the terminal doesn't support pre-authorization, we set the transaction's status to pending. The merchant must capture the transaction to take payment from the customer.
                  example: true
                processAsSale:
                  type: boolean
                  default: false
                  description: |
                    Indicates if we should immediately settle the sale transaction. The merchant cannot adjust the transaction if we immediately settle it.  
                    **Note:** If the value for **processAsSale** is `true`, the gateway ignores the value in **autoCapture**.
                  example: false
            examples:
              paymentInstructionRequest:
                summary: Payment Instruction
                description: Submit an instruction for initiating a payment on a physical device.
                value: &ref_889
                  operator: Jane
                  processingTerminalId: '1234001'
                  order:
                    orderId: OrderRef6543
                    currency: USD
                    amount: 4999
                  customizationOptions:
                    entryMethod: deviceRead
                  autoCapture: true
      responses:
        '202':
          description: Successful request. We accepted the payment instruction to process.
          content:
            application/json:
              schema:
                required: &ref_208
                  - paymentInstructionId
                  - status
                type: object
                allOf: &ref_209
                  - type: object
                    description: Object that contains information about the status of the instruction
                    properties: &ref_232
                      status:
                        type: string
                        description: |
                          Indicates the current status of the instruction.  
                          - `canceled` – The instruction was canceled before it was completed.
                          - `completed` – The instruction has completed. Use the link to check the resource.
                          - `failure` – The instruction failed. Check the error message for more information.
                          - `inProgress` – The instruction is currently in progress.
                        enum:
                          - canceled
                          - completed
                          - failure
                          - inProgress
                        example: completed
                      errorMessage:
                        type: string
                        description: Description of the error that caused the instruction to fail.
                      link:
                        type: object
                        readOnly: true
                        description: Object that contains HATEOAS links for the resource.
                        properties: *ref_4
                        required: *ref_5
                        example: *ref_6
                  - type: object
                    properties:
                      paymentInstructionId:
                        maxLength: 36
                        minLength: 1
                        type: string
                        description: Unique identifier that our gateway assigned to the instruction.
                        example: a37439165d134678a9100ebba3b29597
              examples:
                paymentInstruction:
                  summary: Payment instruction
                  description: Object that contains information about the progress of the payment instruction.
                  value: &ref_890
                    paymentInstructionId: a37439165d134678a9100ebba3b29597
                    status: inProgress
                    link:
                      rel: self
                      method: GET
                      href: https://api.payroc.com/v1/payment-instructions/a37439165d134678a9100ebba3b29597
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /payment-instructions/{paymentInstructionId}:
    get:
      tags:
        - Payment instructions
      summary: Retrieve payment instruction
      operationId: getPaymentInstruction
      description: Retrieve the current status of a specific payment instruction.
      parameters:
        - name: paymentInstructionId
          description: Unique identifier of the payment instruction.
          in: path
          required: true
          schema: &ref_210
            maxLength: 36
            minLength: 1
            type: string
          examples: &ref_211
            example:
              value: e743a9165d134678a9100ebba3b29597
      responses:
        '200':
          description: Successful request. Returns the current status of the requested payment instruction.
          content:
            application/json:
              schema:
                required: *ref_208
                type: object
                allOf: *ref_209
              examples:
                paymentInstruction:
                  summary: Payment instruction
                  description: Object that contains information about the progress of the payment instruction.
                  value: &ref_891
                    paymentInstructionId: a37439165d134678a9100ebba3b29597
                    status: completed
                    link:
                      rel: payment
                      method: GET
                      href: https://api.payroc.com/v1/payments/M2MJOG6O2Y
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Payment instructions
      summary: Cancel payment instruction
      operationId: deletePaymentInstruction
      description: |
        Use this method to cancel a payment instruction.  

        To cancel a payment instruction, you need its paymentInstructionId. Our gateway returned the paymentInstructionId in the response of the [Submit payment instruction](https://docs.payroc.com/api/schema/payroc-cloud/payment-instructions/submit) method.
      parameters:
        - name: paymentInstructionId
          description: Unique identifier of the payment instruction.
          in: path
          required: true
          schema: *ref_210
          examples: *ref_211
      responses:
        '204':
          description: Successful request. We canceled the payment instruction.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                paymentInstructionCompleted:
                  summary: Payment instruction already completed
                  description: Payment instruction already completed
                  value: &ref_892
                    type: https://docs.payroc.com/api/errors#cannot-be-deleted
                    title: Cannot be deleted
                    status: 409
                    detail: You cannot delete this resource in its current state
                    errors:
                      - parameter: paymentInstructionId
                        message: Completed instruction cannot be deleted
                    link:
                      rel: payment
                      method: GET
                      href: https://api.payroc.com/v1/payments/M2MJOG6O2Y
                paymentInstructionFailed:
                  summary: Payment instruction failed
                  description: Payment instruction failed
                  value: &ref_893
                    type: https://docs.payroc.com/api/errors#cannot-be-deleted
                    title: Cannot be deleted
                    status: 409
                    detail: You cannot delete this resource in its current state
                    errors:
                      - parameter: paymentInstructionId
                        message: Failed instruction cannot be deleted
        '500':
          description: An error has occured
          content: *ref_14
  /refunds:
    post:
      tags:
        - Refunds
      summary: Create refund
      operationId: unreferencedRefund
      description: |
        Use this method to create an unreferenced refund. An unreferenced refund is a refund that isn't linked to a payment.  

        **Note:** If you have the paymentId of the payment you want to refund, use our [Refund Payment](https://docs.payroc.com/api/schema/payments/refund) method. If you use our Refund Payment method, our gateway sends the refund amount to the customer's original payment method and links the refund to the payment.  

        In the request, you must provide the customer's payment details and the refund amount.  

        In the response, our gateway returns information about the refund and a refundId, which you need for the following methods:  

        - [Retrieve refund](https://docs.payroc.com/api/schema/payments/refunds/retrieve) - View the details of the refund.  
        - [Adjust refund](https://docs.payroc.com/api/schema/payments/refunds/adjust) - Update the details of the refund.  
        - [Reverse refund](https://docs.payroc.com/api/schema/payments/refunds/reverse) - Cancel the refund if it's in an open batch.  
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_692
                - channel
                - order
                - processingTerminalId
                - refundMethod
              type: object
              description: Refund a payment that is not linked to a previous transaction. Unreferenced refunds are available only on certain accounts.
              properties: &ref_693
                channel:
                  type: string
                  description: Channel that the merchant used to request the refund.
                  enum:
                    - pos
                    - moto
                  example: pos
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                  example: Jane
                order:
                  required: &ref_214
                    - amount
                    - currency
                    - description
                    - orderId
                  type: object
                  description: Object that contains information about the refund.
                  allOf: &ref_215
                    - required: *ref_201
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_202
                    - type: object
                      properties:
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: A unique identifier assigned by the merchant.
                          example: OrderRef6543
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: Date and time that our gateway processed the refund. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
                          example: '2024-07-02T15:30:00Z'
                        description:
                          maxLength: 256
                          minLength: 1
                          type: string
                          description: Description of the transaction.
                          example: Refund for order OrderRef6543
                        amount:
                          type: integer
                          format: int64
                          description: Amount of the refund. The value is in the currency's lowest denomination, for example, cents.
                          example: 4999
                        currency:
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                        dccOffer:
                          required: *ref_212
                          type: object
                          description: |
                            Object that contains information about the dynamic currency conversion (DCC) offer.  
                              
                            For more information about DCC, go to [Dynamic Currency Conversion](/knowledge/card-payments/dynamic-currency-conversion).
                          properties: *ref_213
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                ipAddress:
                  required: *ref_166
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: *ref_167
                refundMethod:
                  description: Object that contains information about how the merchant refunds the customer.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              refund:
                summary: Refund
                description: Refund
                value: &ref_895
                  processingTerminalId: '1234001'
                  order:
                    orderId: OrderRef6543
                    description: Refund for order OrderRef6543
                    amount: 4999
                    currency: USD
                  channel: pos
                  refundMethod:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      keyedData:
                        dataFormat: plainText
                        device:
                          model: paxA920
                          serialNumber: '1850010868'
                        expiryDate: '1225'
                        cardNumber: '4539858876047062'
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We processed the refund.
          content:
            application/json:
              schema:
                required: &ref_222
                  - card
                  - order
                  - processingTerminalId
                  - refundId
                  - transactionResult
                type: object
                description: Object that contains information about the refund.
                properties: &ref_223
                  refundId:
                    maxLength: 10
                    minLength: 10
                    type: string
                    description: Unique identifier that our gateway assigned to the refund.
                    example: CD3HN88U9F
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    description: Operator who requested the refund.
                    example: Jane
                  order:
                    required: *ref_214
                    type: object
                    description: Object that contains information about the refund.
                    allOf: *ref_215
                  customer:
                    type: object
                    description: Object that contains the customer's contact details and address information.
                    properties: *ref_144
                  card:
                    required: *ref_216
                    type: object
                    description: Object that contains the details of the payment card.
                    properties: *ref_217
                  payment:
                    required: *ref_218
                    type: object
                    description: Object that contains information about a payment.
                    properties: *ref_219
                  supportedOperations:
                    type: array
                    items: *ref_185
                    description: |
                      Array of operations that you can perform on the transaction.
                      - `capture`                - Capture the payment.
                      - `refund`                 - Refund the payment.
                      - `fullyReverse`           - Fully reverse the transaction.
                      - `partiallyReverse`       - Partially reverse the payment.
                      - `incrementAuthorization` - Increase the amount of the authorization.
                      - `adjustTip`              - Adjust the tip post-payment.
                      - `addSignature`           - Add a signature to the payment.
                      - `setAsReady`             - Set the transaction’s status to `ready`.
                      - `setAsPending`           - Set the transaction’s status to `pending`.
                    example: *ref_186
                  transactionResult:
                    required: *ref_187
                    type: object
                    properties: *ref_188
                    description: Object that contains information about the transaction response details.
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                refund:
                  summary: Refund
                  description: Refund
                  value: &ref_224
                    refundId: CD3HN88U9F
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                    card:
                      type: Visa Credit
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                    transactionResult:
                      type: refund
                      status: ready
                      approvalCode: '000000'
                      authorizedAmount: -4999
                      currency: USD
                      responseCode: A
                      responseMessage: OK5
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Refunds
      summary: List refunds
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of refunds.  

        **Note:** If you want to view a specific refund and you have its refundId, use our [Retrieve Refund](https://docs.payroc.com/api/schema/payments/refunds/retrieve) method.  

        Use query parameters to filter the list of results that we return, for example, to search for refunds for a customer, a tender type, or a date range.
        Our gateway returns the following information about each refund in the list:  
        - Order details, including the refund amount and when we processed the refund.
        - Payment card details, including the masked card number, expiry date, and payment method.
        - Cardholder details, including their contact information and shipping address.  

        For referenced refunds, our gateway also returns details about the payment that the refund is linked to.
      operationId: listRefunds
      parameters:
        - name: processingTerminalId
          in: query
          description: Filter by terminal ID.
          schema: *ref_220
          examples: *ref_221
        - name: orderId
          in: query
          description: Filter refunds by the unique identifier that the merchant assigned to the order.
          schema: &ref_419
            maxLength: 24
            minLength: 1
            type: string
          examples: &ref_420
            example:
              value: OrderRef6543
        - name: operator
          in: query
          description: Filter refunds by the operator who initiated the request.
          schema: &ref_421
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_422
            example:
              value: Jane
        - name: cardholderName
          in: query
          description: Filter refunds by cardholder name.
          schema: &ref_423
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_424
            example:
              value: Sarah%20Hazel%20Hopper
        - name: first6
          in: query
          description: Filter refunds by the first six digits of the card number.
          schema: &ref_425
            pattern: '[0-9]{6}'
            type: string
          examples: &ref_426
            example:
              value: '453985'
        - name: last4
          in: query
          description: Filter refunds by the last four digits of the card number.
          schema: &ref_427
            pattern: '[0-9]{4}'
            type: string
          examples: &ref_428
            example:
              value: '7062'
        - name: tender
          in: query
          description: Filter by tender type.
          schema: &ref_399
            type: string
            enum:
              - ebt
              - creditDebit
          examples: &ref_400
            example:
              value: ebt
        - name: status
          in: query
          description: Filter refunds by the current status of the refund.
          schema: &ref_429
            type: array
            items:
              type: string
              enum:
                - ready
                - pending
                - declined
                - complete
                - referral
                - pickup
                - reversal
                - admin
                - expired
                - accepted
          examples: &ref_430
            example:
              value:
                - accepted
                - ready
                - complete
        - name: dateFrom
          in: query
          description: Filter by refunds processed after a specific date. The date format follows the ISO 8601 standard.
          schema: &ref_431
            type: string
            format: date-time
          examples: &ref_432
            example:
              value: '2024-07-01T15:30:00Z'
        - name: dateTo
          in: query
          description: Filter by refunds processed before a specific date. The date format follows the ISO 8601 standard.
          schema: &ref_433
            type: string
            format: date-time
          examples: &ref_434
            example:
              value: '2024-07-03T15:30:00Z'
        - name: settlementState
          in: query
          description: Status of the settlement.
          schema: &ref_435
            type: string
            enum:
              - settled
              - unsettled
          examples: &ref_436
            example:
              value: settled
        - name: settlementDate
          in: query
          description: Date the transaction was settled.
          schema: &ref_437
            type: string
            format: date
          examples: &ref_438
            example:
              value: '2024-07-02'
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a paginated list of refunds.
          content:
            application/json:
              schema:
                required: &ref_690
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                description: Object that contains information about refund objects.
                allOf: &ref_691
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of refund objects.
                        items:
                          required: *ref_222
                          type: object
                          description: Object that contains information about the refund.
                          properties: *ref_223
              examples:
                paginatedResults:
                  summary: Paginated Refund
                  description: Paginated Refund
                  value: &ref_894
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - refundId: CD3HN88U9F
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef6543
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Refund for order OrderRef6543
                          amount: 4999
                          currency: USD
                        card:
                          type: Visa Credit
                          entryMethod: keyed
                          cardNumber: 453985******7062
                          expiryDate: '1225'
                        transactionResult:
                          type: refund
                          status: ready
                          approvalCode: '000000'
                          authorizedAmount: -4999
                          currency: USD
                          responseCode: A
                          responseMessage: APPROVAL
                      - refundId: B6ZOFZNVOP
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef7654
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Refund for order OrderRef7654
                          amount: 3999
                          currency: USD
                        card:
                          type: MasterCard
                          entryMethod: keyed
                          cardNumber: 500165******0000
                          expiryDate: '0328'
                        transactionResult:
                          type: refund
                          status: reversal
                          approvalCode: '000000'
                          authorizedAmount: -3999
                          currency: USD
                          responseCode: A
                          responseMessage: APPROVAL
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/refunds?processingTerminalId=1234001&limit=2&after=B6ZOFZNVOP
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/refunds?processingTerminalId=1234001&limit=2&before=CD3HN88U9F
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /refunds/{refundId}:
    get:
      tags:
        - Refunds
      summary: Retrieve refund
      operationId: getRefund
      description: |
        Use this method to retrieve information about a refund.  

        To retrieve a refund, you need its refundId. Our gateway returned the refundId in the response of the [Refund Payment](https://docs.payroc.com/api/schema/payments/refund) method or the [Create Refund](https://docs.payroc.com/api/schema/payments/refunds/create) method.  

        **Note:** If you don't have the refundId, use our [List Refunds](https://docs.payroc.com/api/schema/payments/refunds/list) method to search for the refund.  

        Our gateway returns the following information about the refund:  
        - Order details, including the refund amount and when we processed the refund.
        - Payment card details, including the masked card number, expiry date, and payment method.
        - Cardholder details, including their contact information and shipping address.  

        If the refund is a referenced refund, our gateway also returns details about the payment that the refund is linked to.
      parameters:
        - name: refundId
          description: Unique identifier that our gateway assigned to the refund.
          in: path
          required: true
          schema: &ref_225
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_226
            example:
              value: CD3HN88U9F
      responses:
        '200':
          description: Successful request. Returns the specific refund.
          content:
            application/json:
              schema:
                required: *ref_222
                type: object
                description: Object that contains information about the refund.
                properties: *ref_223
              examples:
                refundResponse:
                  summary: Refund
                  description: Refund
                  value: *ref_224
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /refunds/{refundId}/adjust:
    post:
      tags:
        - Refunds
      summary: Adjust refund
      operationId: adjustRefund
      description: |
        Use this method to adjust a refund in an open batch.  

        To adjust a refund, you need its refundId. Our gateway returned the refundId in the response of the [Refund Payment](https://docs.payroc.com/api/schema/payments/refund) method or the [Create Refund](https://docs.payroc.com/api/schema/payments/refunds/create) method.  

        **Note:** If you don’t have the refundId, use our [List Refunds](https://docs.payroc.com/api/schema/payments/refunds/list) method to search for the refund.  

        You can adjust the following details of the refund:
        - Customer details, including shipping address and contact information.
        - Status of the refund.  

        Our gateway returns information about the adjusted refund, including:
        - Order details, including the refund amount and when we processed the refund.
        - Payment card details, including the masked card number, expiry date, and payment method.
        - Cardholder details, including their contact information and shipping address.  

        If the refund is a referenced refund, our gateway also returns details about the payment that the refund is linked to.
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: refundId
          description: Unique identifier that our gateway assigned to the refund.
          in: path
          required: true
          schema: *ref_225
          examples: *ref_226
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_694
                - adjustments
              type: object
              description: Object that contains information about the adjustment to the refund.
              properties: &ref_695
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who requested the adjustment to the refund.
                  example: Jane
                adjustments:
                  type: array
                  description: Array of objects that contain information about the adjustments to the refund.
                  uniqueItems: true
                  items:
                    discriminator:
                      propertyName: type
                      mapping:
                        status: '#/components/schemas/statusAdjustment'
                        customer: '#/components/schemas/customerAdjustment'
                    oneOf:
                      - required: *ref_227
                        type: object
                        title: Status
                        description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the status of the transaction.
                        properties: *ref_228
                      - required: *ref_229
                        type: object
                        title: Customer
                        description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the customer’s contact details.
                        properties: *ref_230
            examples:
              refundRequest:
                summary: Adjust Refund
                description: Adjust Refund
                value: &ref_896
                  operator: Jane
                  adjustments:
                    - type: customer
                      contactMethods:
                        - type: mobile
                          value: '8445558735'
        required: true
      responses:
        '200':
          description: Successful request. We updated the refund.
          content:
            application/json:
              schema:
                required: *ref_222
                type: object
                description: Object that contains information about the refund.
                properties: *ref_223
              examples:
                refundResponse:
                  summary: Adjust Refund
                  description: Adjust Refund
                  value: &ref_897
                    refundId: CD3HN88U9F
                    processingTerminalId: '1234001'
                    operator: Jane
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                    customer:
                      contactMethods:
                        - type: mobile
                          value: '8445558735'
                    card:
                      type: Visa Credit
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                    transactionResult:
                      type: refund
                      status: ready
                      approvalCode: '000000'
                      authorizedAmount: -4999
                      currency: USD
                      responseCode: A
                      responseMessage: OK13
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /refunds/{refundId}/reverse:
    post:
      tags:
        - Refunds
      summary: Reverse refund
      operationId: reverseRefund
      description: |
        Use this method to cancel a refund in an open batch.  

        To cancel a refund, you need its refundId. Our gateway returned the refundId in the response of the [Refund Payment](https://docs.payroc.com/api/schema/payments/refund) or [Create Refund](https://docs.payroc.com/api/schema/payments/refunds/create) method.  

        **Note:** If you don’t have the refundId, use our [List Refunds](https://docs.payroc.com/api/schema/payments/refunds/list) method to search for the refund.  

        If your request is successful, the gateway removes the refund from the merchant’s open batch and no funds are returned to the cardholder’s account.
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: refundId
          description: Unique identifier that our gateway assigned to the refund.
          in: path
          required: true
          schema: *ref_225
          examples: *ref_226
      responses:
        '200':
          description: Successful request. We voided the refund.
          content:
            application/json:
              schema:
                required: *ref_222
                type: object
                description: Object that contains information about the refund.
                properties: *ref_223
              examples:
                refund:
                  summary: Reverse Refund
                  description: Reverse Refund
                  value: &ref_898
                    refundId: CD3HN88U9F
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                    card:
                      type: Visa Credit
                      entryMethod: keyed
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                    transactionResult:
                      type: refund
                      status: reversal
                      approvalCode: '000000'
                      authorizedAmount: -4999
                      currency: USD
                      responseCode: A
                      responseMessage: APPROVAL
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /devices/{serialNumber}/refund-instructions:
    post:
      tags:
        - Refund instructions
      summary: Submit refund instruction
      operationId: sendRefundInstruction
      description: |
        Submit an instruction request to initiate a refund on a payment device.  

        In the response, our gateway returns information about the refund instruction and a refundInstructionId, which you need for the following methods:
        - [Retrieve refund instruction](https://docs.payroc.com/api/schema/payroc-cloud/refund-instructions/retrieve) - View the details of the refund instruction.
        - [Cancel refund instruction](https://docs.payroc.com/api/schema/payroc-cloud/refund-instructions/delete) - Cancel the refund instruction.
      parameters:
        - name: serialNumber
          description: Serial number that identifies the merchant’s payment device.
          in: path
          required: true
          schema: &ref_417
            maxLength: 64
            minLength: 1
            type: string
          examples: &ref_418
            example:
              value: '1850010868'
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_698
                - order
                - processingTerminalId
              type: object
              description: Object that contains information about the instruction request to initiate a refund on a payment device.
              properties: &ref_699
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                  example: Jane
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                order:
                  required: &ref_696
                    - amount
                    - currency
                    - description
                    - orderId
                  type: object
                  description: Object that contains information about the refund.
                  allOf: &ref_697
                    - required: *ref_201
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_202
                    - type: object
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                ipAddress:
                  required: *ref_166
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: *ref_167
                customizationOptions:
                  type: object
                  description: Object that contains available options to customize certain aspects of an instruction.
                  properties: *ref_231
            examples:
              refundInstructionRequest:
                summary: Refund instruction
                description: Submit an instruction for initiating a refund on a physical device.
                value: &ref_899
                  operator: Jane
                  processingTerminalId: '1234001'
                  order:
                    orderId: OrderRef6543
                    currency: USD
                    amount: 4999
                    description: Refund for order OrderRef6543
                  customizationOptions:
                    entryMethod: manualEntry
        required: true
      responses:
        '202':
          description: Successful request. We accepted the refund instruction to process.
          content:
            application/json:
              schema:
                required: &ref_233
                  - refundInstructionId
                  - status
                type: object
                allOf: &ref_234
                  - type: object
                    description: Object that contains information about the status of the instruction
                    properties: *ref_232
                  - type: object
                    properties:
                      refundInstructionId:
                        maxLength: 36
                        minLength: 1
                        type: string
                        description: Unique identifier that our gateway assigned to the instruction.
                        example: a37439165d134678a9100ebba3b29597
              examples:
                refundInstruction:
                  summary: Refund instruction
                  description: Object that contains information about the progress of the refund instruction.
                  value: &ref_900
                    refundInstructionId: a37439165d134678a9100ebba3b29597
                    status: inProgress
                    link:
                      rel: self
                      method: GET
                      href: https://api.payroc.com/v1/refund-instructions/a37439165d134678a9100ebba3b29597
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /refund-instructions/{refundInstructionId}:
    get:
      tags:
        - Refund instructions
      summary: Retrieve refund instruction
      operationId: getRefundInstruction
      description: Retrieve the current status of a specific refund instruction.
      parameters:
        - name: refundInstructionId
          description: Unique identifier of the refund instruction.
          in: path
          required: true
          schema: &ref_235
            maxLength: 36
            minLength: 1
            type: string
          examples: &ref_236
            example:
              value: a37439165d134678a9100ebba3b29597
      responses:
        '200':
          description: Successful request. Returns the current status of the requested refund instruction.
          content:
            application/json:
              schema:
                required: *ref_233
                type: object
                allOf: *ref_234
              examples:
                refundInstruction:
                  summary: Refund instruction
                  description: Object that contains information about the progress of the refund instruction.
                  value: &ref_901
                    refundInstructionId: a37439165d134678a9100ebba3b29597
                    status: completed
                    link:
                      rel: refund
                      method: GET
                      href: https://api.payroc.com/v1/refunds/CD3HN88U9F
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Refund instructions
      summary: Cancel refund instruction
      operationId: deleteRefundInstruction
      description: |
        Use this method to cancel a refund instruction.  

        To cancel a refund instruction, you need its refundInstructionId. Our gateway returned the refundInstructionId in the response of the [Submit Refund Instruction](https://docs.payroc.com/api/schema/payroc-cloud/refund-instructions/submit) method.   
      parameters:
        - name: refundInstructionId
          description: Unique identifier of the refund instruction.
          in: path
          required: true
          schema: *ref_235
          examples: *ref_236
      responses:
        '204':
          description: Successful request. We canceled the refund instruction.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                refundInstructionCompleted:
                  summary: Refund instruction already completed
                  description: Refund instruction already completed
                  value: &ref_902
                    type: https://docs.payroc.com/api/errors#cannot-be-deleted
                    title: Cannot be deleted
                    status: 409
                    detail: You cannot delete this resource in its current state
                    errors:
                      - parameter: refundInstructionId
                        message: Completed instruction cannot be deleted
                    link:
                      rel: refund
                      method: GET
                      href: https://api.payroc.com/v1/refunds/M2MJOG6O2Y
                refundInstructionFailed:
                  summary: Refund instruction failed
                  description: Refund instruction failed
                  value: &ref_903
                    type: https://docs.payroc.com/api/errors#cannot-be-deleted
                    title: Cannot be deleted
                    status: 409
                    detail: You cannot delete this resource in its current state
                    errors:
                      - parameter: refundInstructionId
                        message: Failed instruction cannot be deleted
        '500':
          description: An error has occured
          content: *ref_14
  /cards/verify:
    post:
      tags:
        - Cards
      summary: Verify card
      operationId: verifyCard
      description: |
        Use this method to verify a customer’s card details.  

        In the request, send the customer’s card details.  

        In the response, our gateway indicates if the card details are valid and if you should use them in follow-on actions.  
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_700
                - card
                - processingTerminalId
              type: object
              properties: &ref_701
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who requested to verify the card.
                  example: Jane
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                card:
                  type: object
                  description: Object that contains information about the card.
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
            examples:
              cardVerificationRequest:
                summary: Card Verification
                description: Card Verification
                value: &ref_904
                  operator: Jane
                  processingTerminalId: '1234001'
                  card:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      cardholderSignature: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
        required: true
      responses:
        '200':
          description: Successful request. Returns the verification status of the card details.
          content:
            application/json:
              schema:
                required: &ref_702
                  - processingTerminalId
                  - verified
                type: object
                properties: &ref_703
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    description: Operator who requested to verify the card.
                    example: Jane
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  card:
                    required: *ref_216
                    type: object
                    description: Object that contains the details of the payment card.
                    properties: *ref_217
                  verified:
                    type: boolean
                    description: |
                      Indicates if the card details are valid:  

                      - `true` - Card details are valid.
                      - `false` - Card details are not valid.
                    example: true
                  transactionResult:
                    required: *ref_187
                    type: object
                    properties: *ref_188
                    description: Object that contains information about the transaction response details.
              examples:
                cardVerificationResponse:
                  summary: Card Verification
                  description: Card Verification
                  value: &ref_905
                    operator: Jane
                    processingTerminalId: '1234001'
                    card:
                      type: Visa Credit
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      cardholderSignature: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                    verified: true
                    transactionResult:
                      status: ready
                      responseCode: A
                      responseMessage: APPROVAL
                      processorResponseCode: '00'
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /cards/balance:
    post:
      tags:
        - Cards
      summary: View EBT balance
      operationId: balanceCard
      description: |
        Use this method to view the balance of an Electronic Benefit Transfer (EBT) card.  

        If the request is successful, our gateway returns the current balance of an EBT card. 
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_704
                - card
                - currency
                - processingTerminalId
              type: object
              properties: &ref_705
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who requested the balance inquiry.
                  example: Jane
                currency:
                  type: string
                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                  enum: *ref_82
                customer:
                  type: object
                  description: Object that contains the customer's contact details and address information.
                  properties: *ref_144
                card:
                  type: object
                  description: Object that contains information about the card.
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                      singleUseToken: '#/components/schemas/singleUseTokenPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
                    - required: *ref_170
                      type: object
                      writeOnly: true
                      title: Single-use token
                      description: Object that contains information about the single-use token, which represents the customer’s payment details.
                      properties: *ref_171
            examples:
              cardBalanceRequest:
                summary: Card Balance
                description: Card Balance
                value: &ref_906
                  operator: Jane
                  processingTerminalId: '1234001'
                  currency: USD
                  card:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      cardholderSignature: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
                        device:
                          model: paxA920
                          dataKsn: FFFF5B09910001000061
                          firmwareVersion: PayDroid_8.1.0_Sagittarius_V11.1.11_20200904 V1.04.02_20210617
                          category: attended
                          serialNumber: '1850010868'
                      pinDetails:
                        dataFormat: dukpt
                        pin: 0123456789abcdef
                        pinKsn: 0002152304aad1234561
                      ebtDetails:
                        benefitCategory: cash
        required: true
      responses:
        '200':
          description: Successful request. Returns the current balance of the EBT card.
          content:
            application/json:
              schema:
                required: &ref_706
                  - card
                  - processingTerminalId
                type: object
                properties: &ref_707
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    description: Operator who requested the balance inquiry.
                    example: Jane
                  card:
                    required: *ref_216
                    type: object
                    description: Object that contains the details of the payment card.
                    properties: *ref_217
                  responseCode:
                    type: string
                    description: |
                      Response from the processor.  
                      - `A` - The processor approved the transaction.  
                      - `D` - The processor declined the transaction.  
                      - `E` - The processor received the transaction but will process the transaction later.  
                      - `P` - The processor authorized a portion of the original amount of the transaction.  
                      - `R` - The issuer declined the transaction and indicated that the customer should contact their bank.  
                      - `C` - The issuer declined the transaction and indicated that the merchant should keep the card as it was reported lost or stolen.
                    enum:
                      - A
                      - D
                      - E
                      - P
                      - R
                      - C
                  responseMessage:
                    maxLength: 48
                    minLength: 1
                    type: string
                    description: Response description from the payment processor, for example, Refer to Card Issuer.
                    example: Refer to Card Issuer
              examples:
                cardBalanceResponse:
                  summary: Card Balance
                  description: Card Balance
                  value: &ref_907
                    operator: Jane
                    processingTerminalId: '1234001'
                    card:
                      type: Common Benefit Identification Card
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      cardholderSignature: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      cardNumber: 453985******7062
                      expiryDate: '1225'
                      balances:
                        - benefitCategory: cash
                          amount: 10000
                          currency: USD
                    responseCode: A
                    responseMessage: Approved
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /cards/bin-lookup:
    post:
      tags:
        - Cards
      summary: Look up BIN information
      description: |
        Use this method to retrieve information about a debit card, a credit card, or an EBT card. If you apply surcharges to transactions, you can also check if the card supports surcharging.  

        In the response, our gateway returns the following information about the card:  

        - **Card details** - Information about the card, for example, the issuing bank and the masked card number.  

        - **Surcharging information** - If you apply a surcharge to transactions, our gateway checks that the card supports surcharging and returns information about the surcharge. For more information about surcharging, go to [Credit card surcharging](/knowledge/card-payments/credit-card-surcharging). 
      operationId: binLookup
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_710
                - card
              type: object
              properties: &ref_711
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                amount:
                  exclusiveMinimum: 0
                  type: integer
                  format: int64
                  description: Transaction amount that you send to check the surcharge amount. The value is in the currency's lowest denomination, for example, cents.
                currency:
                  type: string
                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                  enum: *ref_82
                card:
                  type: object
                  description: Object that contains information about the card.
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                      cardBin: '#/components/schemas/cardBinPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                      digitalWallet: '#/components/schemas/digitalWalletPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
                    - required: &ref_708
                        - type
                        - bin
                      type: object
                      writeOnly: true
                      title: Card BIN
                      description: Object that contains information about the card's bank identification number (BIN).
                      properties: &ref_709
                        type:
                          type: string
                          description: Method that the terminal used to take the payment.
                          enum:
                            - cardBin
                          example: cardBin
                        bin:
                          maxLength: 12
                          minLength: 6
                          type: string
                          example: '123456789012'
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                    - required: *ref_237
                      type: object
                      writeOnly: true
                      title: Digital wallet
                      description: Object that contains information about the payment details in the customer’s digital wallet.
                      properties: *ref_238
            examples:
              binLookupRequest:
                summary: BIN lookup
                description: BIN lookup
                value: &ref_908
                  operator: Jane
                  processingTerminalId: '1234001'
                  card:
                    type: card
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      cardholderSignature: a1b1c012345678a000b000c0012345d0e0f010g10061a031i001j071k0a1b0c1d0e1234567890120f1g0h1i0j1k0a1b0123451c012d0e1f0g1h0i1j123k1a1b1c1d1e1f1g123h1i1j1k1a1b1c1d1e1f1g123h123i1j123k12340a120a12345b012c0123012d0d1e0f1g0h1i123j123k10000
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
        required: true
      responses:
        '200':
          description: Successful request. Returns the BIN information.
          content:
            application/json:
              schema:
                required: &ref_241
                  - type
                  - cardNumber
                type: object
                readOnly: true
                properties: &ref_242
                  type:
                    type: string
                    description: Card brand of the card, for example, Visa.
                  cardNumber:
                    maxLength: 19
                    minLength: 12
                    type: string
                    description: Masked card number. Our gateway shows only the first six digits and the last four digits of the card number, for example, 548010******5929.
                  country:
                    type: string
                    format: iso-3166-1
                    description: Country of the issuing bank. The value for the country follows the [ISO-3166-1](https://www.iso.org/iso-3166-country-codes.html) standard.
                  currency:
                    type: string
                    description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                    enum: *ref_82
                  debit:
                    type: boolean
                    description: Indicates if the card is a debit card.
                  surcharging:
                    required: *ref_239
                    type: object
                    description: Object that contains surcharge information. Our gateway returns this object only if the merchant adds a surcharge to transactions.
                    properties: *ref_240
                description: Object that contains information about the card.
              examples:
                binLookupResponse:
                  summary: BIN lookup
                  description: BIN lookup
                  value: &ref_909
                    type: MASTERCARD
                    cardNumber: 453985******7062
                    country: US
                    currency: USD
                    debit: false
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /fx-rates:
    post:
      tags:
        - Currency conversion
      summary: Verify DCC eligibility
      description: |
        > **Important:** There are restrictions on which merchants can use this method. For more information, go to [Dynamic Currency Conversion](https://docs.payroc.com/knowledge/card-payments/dynamic-currency-conversion).  

        Use this method to check if a card is eligible for Dynamic Currency Conversion (DCC) and to retrieve the conversion rate for a transaction amount. DCC provides a customer with the option to use their card's currency instead of the merchant's currency, for example, in Ireland, an American customer can pay in US dollars instead of Euros.  

        The request includes the following:  

        - **Payment method** - Card information, a secure token, or digital wallet.  
        - **Transaction information** - Amount and currency of the transaction in the merchant's currency.  

        If the card is eligible for DCC, our gateway returns the transaction amount in the card's currency and a dccOffer object that contains information about the conversion rate. The dccOffer object contains the following fields that you need when you [run a sale](https://docs.payroc.com/api/schema/payments/create) or [unreferenced refund](https://docs.payroc.com/api/schema/payments/refunds/create) with DCC:  
        - fxAmount  
        - fxCurrency  
        - fxRate  
        - markup  
        - accepted  
        - offerReference  
      operationId: getFxRates
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_712
                - baseAmount
                - baseCurrency
                - channel
                - paymentMethod
                - processingTerminalId
              type: object
              properties: &ref_713
                channel:
                  description: Channel that the merchant used to receive payment details for the transaction.
                  type: string
                  enum:
                    - pos
                    - web
                    - moto
                  example: pos
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                operator:
                  maxLength: 50
                  minLength: 1
                  type: string
                  description: Operator who ran the transaction.
                  example: Jane
                baseAmount:
                  exclusiveMinimum: 0
                  type: integer
                  format: int64
                  description: Total amount of the transaction in the merchant’s currency. The value is in the currency’s lowest denomination, for example, cents.
                baseCurrency:
                  type: string
                  description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                  enum: *ref_82
                paymentMethod:
                  type: object
                  description: Object that contains information about the customer's payment details.
                  discriminator:
                    propertyName: type
                    mapping:
                      card: '#/components/schemas/cardPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                      digitalWallet: '#/components/schemas/digitalWalletPayload'
                  oneOf:
                    - required: *ref_161
                      type: object
                      writeOnly: true
                      title: Card
                      description: Object that contains information about the customer’s payment card.
                      properties: *ref_162
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                    - required: *ref_237
                      type: object
                      writeOnly: true
                      title: Digital wallet
                      description: Object that contains information about the payment details in the customer’s digital wallet.
                      properties: *ref_238
            examples:
              fxRateRequest:
                summary: Fx-Rate
                description: Fx-Rate
                value: &ref_910
                  channel: web
                  operator: Jane
                  processingTerminalId: '1234001'
                  baseAmount: 10000
                  baseCurrency: USD
                  paymentMethod:
                    type: card
                    accountType: checking
                    cardDetails:
                      entryMethod: keyed
                      cardholderName: Sarah Hazel Hopper
                      keyedData:
                        dataFormat: plainText
                        cardNumber: '4539858876047062'
                        expiryDate: '1225'
        required: true
      responses:
        '200':
          description: Successful request. Returns the currency conversion rate for the transaction.
          content:
            application/json:
              schema:
                required: &ref_716
                  - baseAmount
                  - baseCurrency
                  - cardInfo
                  - inquiryResult
                  - processingTerminalId
                type: object
                description: Foreign exchange rate for the transaction.
                properties: &ref_717
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  operator:
                    maxLength: 50
                    minLength: 0
                    type: string
                    description: Operator who ran the transaction.
                    example: Jane
                  baseAmount:
                    exclusiveMinimum: 0
                    type: integer
                    format: int64
                    description: Total amount of the transaction in the local currency. The value is in the currency’s lowest denomination, for example, cents.
                  baseCurrency:
                    type: string
                    description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                    enum: *ref_82
                  inquiryResult:
                    required: &ref_714
                      - dccOffered
                    type: object
                    description: Object that indicates if the customer's card is eligible for Dynamic Currency Conversion (DCC).
                    properties: &ref_715
                      dccOffered:
                        type: boolean
                        default: false
                        description: Indicates if the card is eligible for Dynamic Currency Conversion (DCC).
                        example: false
                      causeOfRejection:
                        type: string
                        description: Explains why the DCC service did not offer a currency conversion rate to the customer.
                        example: Service unavailable
                  dccOffer:
                    required: *ref_212
                    type: object
                    description: |
                      Object that contains information about the dynamic currency conversion (DCC) offer.  
                        
                      For more information about DCC, go to [Dynamic Currency Conversion](/knowledge/card-payments/dynamic-currency-conversion).
                    properties: *ref_213
                  cardInfo:
                    required: *ref_241
                    type: object
                    readOnly: true
                    properties: *ref_242
                    description: Object that contains information about the card.
              examples:
                fxRateResponse:
                  summary: Fx-Rate
                  description: Fx-Rate
                  value: &ref_911
                    processingTerminalId: '1234001'
                    operator: Jane
                    baseAmount: 10000
                    baseCurrency: EUR
                    inquiryResult:
                      dccOffered: true
                    dccOffer:
                      accepted: true
                      reference: 3396977e-40b9-4b26-8a3f-c25bc1280ee2
                      fxAmount: 16125
                      fxCurrency: JPY
                      fxCurrencyCode: '392'
                      fxCurrencyExponent: 0
                      fxRate: 161.2542
                      markup: 3
                      provider: FEXCO
                      source: REUTERS WHOLESALE INTERBANK
                    cardInfo:
                      type: MASTERCARD
                      cardNumber: 453985******7062
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-payments:
    post:
      tags:
        - Bank transfer payments
      summary: Create payment
      operationId: bankTransferPayment
      description: "Use this method to run a sale with a customer's bank account details.  \n\nIn the response, our gateway returns information about the bank transfer payment and a paymentId, which you need for the following methods:  \n-\t[Retrieve payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/retrieve) - View the details of the bank transfer payment.\n-\t[Reverse payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/reverse) - Cancel the bank transfer payment if it's an open batch.\n-\t[Refund payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/refund) - Run a referenced refund to return funds to the customer's bank account.\n\n**Payment methods**  \n\nOur gateway accepts the following payment methods:  \n-\tAutomated clearing house (ACH) details\n-\tPre-authorized debit (PAD) details  \n\nYou can also use [secure tokens](https://docs.payroc.com/api/schema/payments/secure-tokens/overview) and [single-use tokens](https://docs.payroc.com/api/schema/payments/single-use-tokens/create) that you created from ACH details or PAD details. \n"
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_724
                - order
                - paymentMethod
                - processingTerminalId
              type: object
              description: Object that contains information about the sale and the customer's bank details.
              properties: &ref_725
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: ready
                order:
                  required: &ref_243
                    - amount
                    - currency
                    - orderId
                  type: object
                  allOf: &ref_244
                    - required: *ref_201
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_202
                    - type: object
                      properties:
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: A unique identifier assigned by the merchant.
                          example: OrderRef6543
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: The processing date and time of the transaction represented as per [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
                          example: '2024-07-02T15:30:00Z'
                        description:
                          maxLength: 256
                          minLength: 1
                          type: string
                          description: A brief description of the transaction.
                          example: 'Pizza Doe #1234 - Dinner'
                        amount:
                          type: integer
                          format: int64
                          description: The total amount in the currency's lowest denomination. For example, cents.
                          example: 4999
                        currency:
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                        breakdown:
                          required: &ref_718
                            - subtotal
                          type: object
                          description: Object that contains information about the transaction.
                          properties: &ref_719
                            subtotal:
                              type: integer
                              format: int64
                              description: Total amount of the transaction before tax and tip. The value is in the currency's lowest denomination, for example, cents.
                              example: 4500
                            tip:
                              description: Object that contains tip information for the transaction.
                              required: *ref_194
                              type: object
                              properties: *ref_195
                            taxes:
                              type: array
                              description: Array of tax objects.
                              items:
                                required: *ref_118
                                type: object
                                properties: *ref_119
                  description: Object that contains information about the transaction.
                customer:
                  type: object
                  description: Object that contains information about the customer.
                  properties: &ref_245
                    notificationLanguage:
                      maxLength: 2
                      minLength: 2
                      type: string
                      format: iso-639-1
                      description: Customer's preferred notification language. This code follows the [ISO 639-1](https://www.iso.org/iso-639-language-code) standard.
                      enum:
                        - en
                        - fr
                      example: en
                    contactMethods:
                      uniqueItems: true
                      description: Customer's contact information.
                      type: array
                      items:
                        discriminator: *ref_2
                        oneOf: *ref_3
                credentialOnFile:
                  type: object
                  description: Object that contains information about saving the customer’s payment details.
                  properties: *ref_205
                paymentMethod:
                  type: object
                  description: Object that contains information about the customer's payment details.
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      pad: '#/components/schemas/padPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                      singleUseToken: '#/components/schemas/singleUseTokenPayload'
                  oneOf:
                    - required: *ref_157
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: *ref_158
                    - required: *ref_159
                      type: object
                      writeOnly: true
                      title: PAD
                      description: Object that contains information about the payment details for the customer’s preauthorized electronic debit (PAD) transactions.
                      properties: *ref_160
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                    - required: *ref_170
                      type: object
                      writeOnly: true
                      title: Single-use token
                      description: Object that contains information about the single-use token, which represents the customer’s payment details.
                      properties: *ref_171
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              createdBankTransferPaymentStoreToken:
                summary: Store Token Bank Transfer Payment
                description: Bank Transfer Payment with ACH payload and token storage
                value: &ref_913
                  processingTerminalId: '1234001'
                  order:
                    orderId: OrderRef6543
                    description: Large Pepperoni Pizza
                    amount: 4999
                    currency: USD
                    breakdown:
                      subtotal: 4347
                      tip:
                        type: percentage
                        percentage: 10
                      taxes:
                        - name: Sales Tax
                          rate: 5
                  customer:
                    notificationLanguage: en
                    contactMethods:
                      - type: email
                        value: joe@blogssoftware.com
                  credentialOnFile:
                    tokenize: true
                  paymentMethod:
                    type: ach
                    accountType: checking
                    nameOnAccount: Sarah Hazel Hopper
                    accountNumber: '321831591'
                    routingNumber: '063100277'
                    secCode: web
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We processed the sale.
          content:
            application/json:
              schema:
                required: &ref_246
                  - bankAccount
                  - order
                  - paymentId
                  - processingTerminalId
                  - transactionResult
                type: object
                description: Object that contains information about the sale and the customer's bank details.
                properties: &ref_247
                  paymentId:
                    maxLength: 10
                    minLength: 10
                    type: string
                    description: Unique identifier that we assigned to the payment.
                    example: M2MJOG6O2Y
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  order:
                    required: *ref_243
                    type: object
                    allOf: *ref_244
                    description: Object that contains information about the transaction.
                  customer:
                    type: object
                    description: Object that contains information about the customer.
                    properties: *ref_245
                  bankAccount:
                    description: Object that contains information about the bank account.
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        ach: '#/components/schemas/achBankAccount'
                        pad: '#/components/schemas/padBankAccount'
                    oneOf:
                      - required: &ref_253
                          - accountNumber
                          - nameOnAccount
                          - routingNumber
                          - type
                        type: object
                        title: ACH account
                        description: Object that contains the customer's account details.
                        properties: &ref_254
                          type:
                            type: string
                            enum:
                              - ach
                            example: ach
                          secCode:
                            type: string
                            description: |
                              Indicates the type of authorization for the transaction.  

                              **Note:** The field is mandatory for ACH secure token.  

                              - `web` – Online transaction.  
                              - `tel` – Telephone transaction.  
                              - `ccd` – Corporate credit card or debit card transaction.  
                              - `ppd` – Pre-arranged transaction.
                            enum:
                              - web
                              - tel
                              - ccd
                              - ppd
                            example: web
                          nameOnAccount:
                            maxLength: 50
                            minLength: 1
                            type: string
                            description: Customer's name.
                            example: Sarah Hazel Hopper
                          accountNumber:
                            maxLength: 17
                            minLength: 4
                            type: string
                            description: Customer's bank account number. We mask all digits except the last four digits.
                            example: '123456789'
                          routingNumber:
                            maxLength: 9
                            minLength: 9
                            type: string
                            description: |
                              Routing number of the customer’s account.

                              **Note:** In responses, our gateway shows only the last four digits of the account's routing number, for example, *****4162. 
                            example: '123456789'
                          secureToken:
                            required: *ref_132
                            type: object
                            description: Object that contains information about the secure token.
                            properties: *ref_133
                      - required: &ref_255
                          - accountNumber
                          - institutionNumber
                          - nameOnAccount
                          - transitNumber
                          - type
                        type: object
                        title: PAD account
                        description: Object that contains the customer's account details.
                        properties: &ref_256
                          type:
                            type: string
                            enum:
                              - pad
                            example: pad
                          nameOnAccount:
                            maxLength: 29
                            minLength: 1
                            type: string
                            description: Customer's name.
                            example: Sarah Hazel Hopper
                          accountNumber:
                            maxLength: 12
                            minLength: 7
                            type: string
                            description: Customer's bank account number. We mask all digits except the last four digits.
                            example: '1234567890'
                          transitNumber:
                            maxLength: 5
                            minLength: 5
                            type: string
                            description: Five-digit code that represents the customer's banking branch.
                            example: '76543'
                          institutionNumber:
                            maxLength: 3
                            minLength: 3
                            type: string
                            description: Three-digit code that represents the customer's bank.
                            example: '543'
                          secureToken:
                            required: *ref_132
                            type: object
                            description: Object that contains information about the secure token.
                            properties: *ref_133
                  refunds:
                    type: array
                    uniqueItems: true
                    description: List of refunds issued against the payment.
                    items:
                      required: *ref_183
                      type: object
                      description: Object that contains information about a refund.
                      properties: *ref_184
                  returns:
                    type: array
                    uniqueItems: true
                    description: List of returns issued against the payment.
                    items:
                      required: &ref_720
                        - date
                        - paymentId
                        - represented
                        - returnCode
                        - returnReason
                      type: object
                      description: Object that contains information about a return.
                      properties: &ref_721
                        paymentId:
                          maxLength: 10
                          minLength: 10
                          type: string
                          description: Unique identifier that our gateway assigned to the payment.
                          example: M2MJOG6O2Y
                        date:
                          type: string
                          format: date
                          description: The date that the check was returned.
                          example: '2024-07-02'
                        returnCode:
                          type: string
                          description: The NACHA return code.
                          example: R11
                        returnReason:
                          type: string
                          description: The reason why the check was returned.
                          example: Customer advises not authorized
                        represented:
                          type: boolean
                          description: Indicates whether the return has been re-presented.
                          example: false
                        link:
                          type: object
                          readOnly: true
                          description: Object that contains HATEOAS links for the resource.
                          properties: *ref_4
                          required: *ref_5
                          example: *ref_6
                  representment:
                    description: List of re-presented payments linked to the return.
                    required: *ref_218
                    type: object
                    properties: *ref_219
                  transactionResult:
                    type: object
                    description: Object that contains information about the transaction.
                    required: &ref_257
                      - responseMessage
                      - status
                      - type
                    readOnly: true
                    properties: &ref_258
                      type:
                        type: string
                        description: Type of transaction.
                        enum:
                          - payment
                          - refund
                          - unreferencedRefund
                          - accountVerification
                        example: payment
                      status:
                        type: string
                        description: Status of the transaction.
                        enum:
                          - ready
                          - pending
                          - declined
                          - complete
                          - admin
                          - reversal
                          - returned
                        example: complete
                      authorizedAmount:
                        type: number
                        description: |
                          Amount of the transaction.  
                          **Note:** The amount is negative for a refund.
                        example: 2899
                      currency:
                        type: string
                        description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                        enum: *ref_82
                      responseCode:
                        type: string
                        description: |
                          Response from the processor.  
                          - `A` - The processor approved the transaction.  
                          - `D` - The processor declined the transaction.  
                        example: A
                      responseMessage:
                        maxLength: 48
                        minLength: 1
                        type: string
                        description: Description of the response from the processor.
                        example: Payment Approved
                      processorResponseCode:
                        type: string
                        description: Original response code that the processor sent.
                        example: A
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                createdBankTransferPaymentStoreToken:
                  summary: Store Token Bank Transfer Payment
                  description: Bank Transfer Payment with ACH payload and token storage
                  value: &ref_248
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Large Pepperoni Pizza
                      amount: 4999
                      currency: USD
                      breakdown:
                        subtotal: 4347
                        tip:
                          type: percentage
                          amount: 435
                          percentage: 10
                        taxes:
                          - name: Sales Tax
                            rate: 5
                            amount: 217
                    customer:
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    bankAccount:
                      type: ach
                      secCode: web
                      accountType: checking
                      nameOnAccount: Sarah Hazel Hopper
                      accountNumber: '****3159'
                      routingNumber: '063100277'
                      secureToken:
                        secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                        customerName: Sarah Hazel Hopper
                        token: '296753123456'
                        status: notValidated
                        link:
                          rel: self
                          method: GET
                          href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    transactionResult:
                      type: payment
                      status: ready
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                      responseMessage: NoError
                      processorResponseCode: '0'
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Bank transfer payments
      summary: List payments
      description: |
        Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of payments.  

        **Note:** If you want to view a specific payment and you have its paymentId, use our [Retrieve Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/retrieve) method.  

        Use query parameters to filter the list of results that we return, for example, to search for payments for a customer, a date range, or a settlement state.  

        Our gateway returns the following information about each payment in the list:  

        - Order details, including the transaction amount and when it was processed.  
        - Bank account details, including the customer’s name and account number.  
        - Customer's details, including the customer’s phone number.  
        - Transaction details, including any refunds or re-presentments.  

        For each transaction, we also return the paymentId and an optional secureTokenId, which you can use to perform follow-on actions.  
      operationId: listBankTransferPayments
      parameters:
        - name: processingTerminalId
          in: query
          required: true
          description: Filter results by the unique identifier that we assigned to the terminal.
          schema: &ref_439
            maxLength: 50
            minLength: 4
            type: string
          examples: &ref_440
            example:
              value: '1234001'
        - name: orderId
          in: query
          description: Filter results by the order ID of the payment.
          schema: &ref_441
            maxLength: 24
            minLength: 1
            type: string
          examples: &ref_442
            example:
              value: OrderRef6543
        - name: nameOnAccount
          in: query
          description: Filter results by the account holder's name.
          schema: &ref_443
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_444
            example:
              value: Sarah%20Hazel%20Hopper
        - name: last4
          in: query
          description: Filter results by the last four digits of the account number.
          schema: &ref_445
            pattern: '[0-9]{4}'
            type: string
          examples: &ref_446
            example:
              value: '7890'
        - name: type
          in: query
          description: Filter results by transaction type.
          schema: &ref_447
            type: array
            items:
              type: string
              enum:
                - payment
                - accountVerification
          examples: &ref_448
            example:
              value:
                - payment
        - name: status
          in: query
          description: Filter results by the status of the payment.
          schema: &ref_449
            type: array
            items:
              type: string
              enum:
                - ready
                - pending
                - declined
                - complete
                - admin
                - reversal
                - returned
          examples: &ref_450
            example:
              value:
                - ready
        - name: dateFrom
          in: query
          description: Filter results by payments that the merchant ran after a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
          schema: &ref_451
            type: string
            format: date-time
          examples: &ref_452
            example:
              value: '2024-07-01T00:00:00Z'
        - name: dateTo
          in: query
          description: Filter results by payments that the merchant ran before a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
          schema: &ref_453
            type: string
            format: date-time
          examples: &ref_454
            example:
              value: '2024-07-31T23:59:59Z'
        - name: settlementState
          in: query
          description: Filter results by the settlement status.
          schema: &ref_455
            type: string
            enum:
              - settled
              - unsettled
          examples: &ref_456
            example:
              value: settled
        - name: settlementDate
          in: query
          description: Filter results by the settlement date. Send a value in **YYYY-MM-DD** format.
          schema: &ref_457
            type: string
            format: date
          examples: &ref_458
            example:
              value: '2024-07-15'
        - name: paymentLinkId
          in: query
          description: Filter results by the paymentLinkId.
          schema: &ref_459
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_460
            example:
              value: JZURRJBUPS
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of payments.
          content:
            application/json:
              schema:
                required: &ref_722
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_723
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of payments.
                        items:
                          required: *ref_246
                          type: object
                          description: Object that contains information about the sale and the customer's bank details.
                          properties: *ref_247
              examples:
                paginatedResults:
                  summary: Bank Transfer Payment
                  description: Bank Transfer Payment
                  value: &ref_912
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - paymentId: M2MJOG6O2Y
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef6543
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Large Pepperoni Pizza
                          amount: 4999
                          currency: USD
                          breakdown:
                            subtotal: 4347
                            tip:
                              type: percentage
                              amount: 435
                              percentage: 10
                            taxes:
                              - name: Sales Tax
                                rate: 5
                                amount: 217
                        customer:
                          contactMethods:
                            - type: email
                              value: sarah.hopper@example.com
                          notificationLanguage: en
                        bankAccount:
                          type: pad
                          nameOnAccount: Sarah Hazel Hopper
                          accountNumber: '*******3159'
                          transitNumber: '76543'
                          institutionNumber: '543'
                        transactionResult:
                          type: payment
                          status: ready
                          authorizedAmount: 4999
                          currency: USD
                          responseCode: A
                      - paymentId: E29U8OU8Q4
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef7654
                          dateTime: '2024-07-02T15:30:00Z'
                          description: test
                          amount: 3999
                          currency: USD
                          breakdown:
                            subtotal: 3477
                            tip:
                              type: percentage
                              amount: 348
                              percentage: 10
                            taxes:
                              - name: Sales Tax
                                rate: 5
                                amount: 174
                        customer:
                          contactMethods:
                            - type: email
                              value: sarah.hopper@example.com
                          notificationLanguage: en
                        bankAccount:
                          type: pad
                          nameOnAccount: Sarah Hazel Hopper
                          accountNumber: '*******7890'
                          transitNumber: '76543'
                          institutionNumber: '543'
                        transactionResult:
                          type: payment
                          status: ready
                          authorizedAmount: 3999
                          currency: USD
                          responseCode: A
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/bank-transfer-payments?limit=2&processingTerminalId=1234001&after=E29U8OU8Q4
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1//bank-transfer-payments?limit=2&processingTerminalId=1234001&before=M2MJOG6O2Y
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-payments/{paymentId}:
    get:
      tags:
        - Bank transfer payments
      summary: Retrieve payment
      description: "Use this method to retrieve information about a bank transfer payment.  \n\nTo retrieve a payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/create) method.  \n\nNote: If you don’t have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/list) method to search for the payment.  \n\nOur gateway returns the following information about the payment:  \n\n-\tOrder details, including the transaction amount and when it was processed.  \n-\tBank account details, including the customer’s name and account number.  \n-\tCustomer’s details, including the customer’s phone number.  \n-\tTransaction details, including any refunds or re-presentments.  \n\nIf the merchant saved the customer’s bank account details, our gateway returns a secureTokenID, which you can use to perform follow-on actions.\n"
      operationId: getBankTransferPayment
      parameters:
        - name: paymentId
          description: Unique identifier that our gateway assigned to the payment.
          in: path
          required: true
          schema: &ref_249
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_250
            example:
              value: M2MJOG6O2Y
      responses:
        '200':
          description: Successful request. Returns the specific payment.
          content:
            application/json:
              schema:
                required: *ref_246
                type: object
                description: Object that contains information about the sale and the customer's bank details.
                properties: *ref_247
              examples:
                bankTransferPayment:
                  summary: Store Token Bank Transfer Payment
                  description: Bank Transfer Payment with ACH payload and token storage
                  value: *ref_248
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-payments/{paymentId}/reverse:
    post:
      tags:
        - Bank transfer payments
      summary: Reverse payment
      description: |
        Use this method to cancel a bank transfer payment in an open batch. This is also known as voiding a payment.  

        To cancel a bank transfer payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/create) method.  

        **Note:** If you don't have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/list) method to search for the bank transfer payment.  

        If your request is successful, our gateway removes the bank transfer payment from the merchant’s open batch and no funds are taken from the customer's bank account.  
      operationId: reverseBankTransferPayment
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          description: Unique identifier that our gateway assigned to the payment.
          in: path
          required: true
          schema: *ref_249
          examples: *ref_250
      responses:
        '200':
          description: Successful request. We voided the payment.
          content:
            application/json:
              schema:
                required: *ref_246
                type: object
                description: Object that contains information about the sale and the customer's bank details.
                properties: *ref_247
              examples:
                reverseBankTransferPayment:
                  summary: Reverse Bank Transfer Payment
                  description: Reverse Bank Transfer Payment
                  value: &ref_914
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Large Pepperoni Pizza
                      amount: 4999
                      currency: USD
                      breakdown:
                        subtotal: 4347
                        tip:
                          type: percentage
                          percentage: 10
                        taxes:
                          - name: VAT
                            rate: 5
                            amount: 217
                    customer:
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    bankAccount:
                      type: pad
                      nameOnAccount: Sarah Hazel Hopper
                      accountNumber: '*******7890'
                      transitNumber: '76543'
                      institutionNumber: '543'
                    transactionResult:
                      type: payment
                      status: reversal
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-payments/{paymentId}/refund:
    post:
      tags:
        - Bank transfer payments
      summary: Refund payment
      description: |
        Use this method to refund a bank transfer payment that is in a closed batch.  

        To refund a bank transfer payment, you need its paymentId. Our gateway returned the paymentId in the response of the [Create Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/create) method.  

        **Note:** If you don’t have the paymentId, use our [List Payments](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/list) method to search for the bank transfer payment.  

        If your refund is successful, our gateway returns the payment amount to the customer's account.  

        **Things to consider**  
        - If the merchant refunds a bank transfer payment that is in an open batch, our gateway reverses the bank transfer payment.  
        - Some merchants can run unreferenced refunds, which means that they don’t need a paymentId to return an amount to a customer. For more information about how to run an unreferenced refund, go to [Create Refund](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/create).  
      operationId: refundBankTransferPayment
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          description: Unique identifier that our gateway assigned to the payment.
          in: path
          required: true
          schema: *ref_249
          examples: *ref_250
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_726
                - amount
                - description
              type: object
              description: Object that contains information about the payment that you want to refund.
              properties: &ref_727
                amount:
                  type: integer
                  format: int64
                  description: Total amount of the refund. The value is in the currency's lowest denomination, for example, cents.
                  example: 4999
                description:
                  maxLength: 100
                  minLength: 1
                  type: string
                  description: Description of the refund.
                  example: Refund for order OrderRef6543
            examples:
              refundBankTransferPayment:
                summary: Refund Bank Transfer Payment
                description: Refund Bank Transfer Payment
                value: &ref_915
                  amount: 4999
                  description: amount to refund
        required: true
      responses:
        '200':
          description: Successful request. We refunded the payment.
          content:
            application/json:
              schema:
                required: *ref_246
                type: object
                description: Object that contains information about the sale and the customer's bank details.
                properties: *ref_247
              examples:
                bankTransferPayment:
                  summary: Reverse Bank Transfer Payment
                  description: Reverse Bank Transfer Payment
                  value: &ref_916
                    paymentId: M2MJOG6O2Y
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                      breakdown:
                        subtotal: 4347
                        tip:
                          type: percentage
                          amount: 435
                          percentage: 10
                        taxes:
                          - name: Sales Tax
                            rate: 5
                            amount: 217
                    customer:
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    bankAccount:
                      type: pad
                      nameOnAccount: Sarah Hazel Hopper
                      accountNumber: '****7890'
                      transitNumber: '76543'
                      institutionNumber: '543'
                      secureToken:
                        secureTokenId: MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                        customerName: Sarah Hopper
                        token: '296753123456'
                        status: notValidated
                        link:
                          rel: self
                          method: GET
                          href: https://api.payroc.com/v1/processing-terminals/1234001/secure-tokens/MREF_abc1de23-f4a5-6789-bcd0-12e345678901fa
                    transactionResult:
                      type: payment
                      status: reversal
                      authorizedAmount: 4999
                      currency: USD
                      responseCode: A
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-payments/{paymentId}/represent:
    post:
      tags:
        - Bank transfer payments
      summary: Re-present payment
      description: "Use this method to re-present an ACH payment.  \n\nTo re-present a payment, you need the paymentId of the return. To get the paymentId of the return, complete the following steps:  \n\n1.\tUse our [Retrieve Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/retrieve) method  to view the details of the original payment.  \n2.\tFrom the [returns object](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/retrieve#response.body.returns) in the response, get the paymentId of the return.  \n\nOur gateway uses the bank account details from the original payment. If you want to update the customer's bank account details, send the new bank account details in the request.  \n\nIf your request is successful, our gateway re-presents the payment.\n"
      operationId: representBankTransferPayment
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: paymentId
          description: Unique identifier that our gateway assigned to the payment.
          in: path
          required: true
          schema: *ref_249
          examples: *ref_250
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Object that contains the paymentMethod object.
              properties: &ref_728
                paymentMethod:
                  type: object
                  description: Object that contains information about the customer's payment details.
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                  oneOf:
                    - required: *ref_157
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: *ref_158
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
            examples:
              representBankTransferPayment:
                summary: Representment Bank Transfer Payment
                description: Representment Bank Transfer Payment
                value: &ref_917
                  paymentMethod:
                    type: ach
                    accountType: checking
                    nameOnAccount: Sarah Hopper
                    accountNumber: '321831591'
                    routingNumber: '063100277'
                    secCode: tel
      responses:
        '200':
          description: Successful request. We processed the payment.
          content:
            application/json:
              schema:
                required: *ref_246
                type: object
                description: Object that contains information about the sale and the customer's bank details.
                properties: *ref_247
              examples:
                bankTransferPayment:
                  summary: Store Token Bank Transfer Payment
                  description: Bank Transfer Payment with ACH payload and token storage
                  value: *ref_248
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-refunds:
    post:
      tags:
        - Bank transfer refunds
      summary: Create refund
      operationId: bankTransferUnreferencedRefund
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      description: "Use this method to create an unreferenced refund. An unreferenced refund is a refund that isn’t linked to a bank transfer payment.  \n\n**Note:** If you have the paymentId of the payment you want to refund, use our [Refund Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/refund) method. If you use our Refund Payment method, our gateway sends the refund amount to the customer’s original payment method and links the refund to the payment.  \n\nIn the request, you must provide the customer’s payment method and information about the order including the refund amount.  \n\nIn the response, our gateway returns information about the refund and a refundId, which you need for the following methods:  \n\n-\t[Retrieve refund](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/retrieve) – View the details of the refund.  \n-\t[Reverse refund](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/reverse) – Cancel the refund if it’s in an open batch.  \n"
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_731
                - order
                - processingTerminalId
                - refundMethod
              type: object
              properties: &ref_732
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: 52d9b7f7-3b39-4cd6-9acb-1050f8593ec6
                order:
                  description: Object that contains information about the order.
                  required: &ref_251
                    - amount
                    - currency
                    - description
                    - orderId
                  type: object
                  allOf: &ref_252
                    - required: *ref_201
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_202
                    - type: object
                      description: Object that contains information about the transaction.
                      properties:
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: Unique identifier that the merchant assigned to the transaction.
                          example: OrderRef6543
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: Date and time that we processed the transaction. We return this value in the ISO 8601 format.
                          example: '2024-07-02T15:30:00Z'
                        description:
                          maxLength: 256
                          minLength: 0
                          type: string
                          description: Description of the refund.
                          example: 'Pizza Doe #1234 - Dinner'
                        amount:
                          type: integer
                          format: int64
                          description: Total amount of the transaction. The value is in the currency's lowest denomination, for example, cents.
                          example: 2899
                        currency:
                          example: USD
                          type: string
                          description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
                          enum: *ref_82
                customer:
                  type: object
                  description: Object that contains information about the customer.
                  properties: *ref_245
                refundMethod:
                  description: Object that contains information about how the merchant refunds the customer.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      secureToken: '#/components/schemas/secureTokenPayload'
                  oneOf:
                    - required: *ref_157
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: *ref_158
                    - required: *ref_168
                      type: object
                      writeOnly: true
                      title: Secure token
                      description: Object that contains information about the secure token that represents the customer’s payment details.
                      properties: *ref_169
                customFields:
                  type: array
                  description: |
                    Array of customField objects.
                  items:
                    required: *ref_124
                    type: object
                    properties: *ref_125
            examples:
              bankTransferUnreferencedRefundRequest:
                summary: Bank Transfer Unreferenced Refund
                description: Bank Transfer Unreferenced Refund
                value: &ref_919
                  processingTerminalId: '1234001'
                  order:
                    orderId: OrderRef6543
                    description: Refund for order OrderRef6543
                    amount: 4999
                    currency: USD
                  customer:
                    notificationLanguage: en
                    contactMethods:
                      - type: email
                        value: sarah.hopper@example.com
                  refundMethod:
                    type: ach
                    secCode: web
                    accountType: checking
                    nameOnAccount: Sarah Hazel Hopper
                    accountNumber: '1234567890'
                    routingNumber: '123456789'
                  customFields:
                    - name: yourCustomField
                      value: abc123
        required: true
      responses:
        '201':
          description: Successful request. We sent the refund to the customer's bank account.
          content:
            application/json:
              schema:
                required: &ref_259
                  - bankAccount
                  - order
                  - processingTerminalId
                  - refundId
                  - transactionResult
                type: object
                properties: &ref_260
                  refundId:
                    maxLength: 10
                    minLength: 10
                    type: string
                    description: Unique identifier that our gateway assigned to the refund.
                    example: CD3HN88U9F
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  order:
                    description: Object that contains information about the order.
                    required: *ref_251
                    type: object
                    allOf: *ref_252
                  customer:
                    type: object
                    description: Object that contains information about the customer.
                    properties: *ref_245
                  bankAccount:
                    description: Object that contains information about the bank account.
                    type: object
                    discriminator:
                      propertyName: type
                      mapping:
                        ach: '#/components/schemas/achBankAccount'
                        pad: '#/components/schemas/padBankAccount'
                    oneOf:
                      - required: *ref_253
                        type: object
                        title: ACH account
                        description: Object that contains the customer's account details.
                        properties: *ref_254
                      - required: *ref_255
                        type: object
                        title: PAD account
                        description: Object that contains the customer's account details.
                        properties: *ref_256
                  payment:
                    required: *ref_218
                    type: object
                    description: Object that contains information about a payment.
                    properties: *ref_219
                  transactionResult:
                    type: object
                    description: Object that contains information about the transaction.
                    required: *ref_257
                    readOnly: true
                    properties: *ref_258
                  customFields:
                    type: array
                    description: |
                      Array of customField objects.
                    items:
                      required: *ref_124
                      type: object
                      properties: *ref_125
              examples:
                bankTransferUnreferencedRefundResponse:
                  summary: Bank Transfer Unreferenced Refund
                  description: Bank Transfer Unreferenced Refund
                  value: &ref_261
                    refundId: CD3HN88U9F
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                    customer:
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    bankAccount:
                      type: ach
                      secCode: web
                      accountType: checking
                      nameOnAccount: Sarah Hazel Hopper
                      accountNumber: '****7890'
                      routingNumber: '*****6789'
                    transactionResult:
                      type: unreferencedRefund
                      status: ready
                      authorizedAmount: -4999
                      currency: USD
                      responseCode: A
                      responseMessage: NoError
                      processorResponseCode: '0'
                    customFields:
                      - name: yourCustomField
                        value: abc123
          headers:
            location:
              description: URI reference to created resource.
              schema: *ref_24
              examples: *ref_25
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Bank transfer refunds
      summary: List refunds
      description: "Use this method to return a [paginated](https://docs.payroc.com/api/pagination) list of bank transfer refunds.  \n\n**Note:** If you want to view a specific refund and you have its refundId, use our Retrieve Refund method.  \n\nUse query parameters to filter the list of results that we return, for example, to search for refunds for a customer, an orderId, or a date range.  \n\nOur gateway returns the following information about each refund in the list:  \n\n-\tOrder details, including the refund amount and when it was processed.  \n-\tBank account details, including the customer’s name and account number.  \n\nFor referenced refunds, our gateway also returns details about the payment that the refund is linked to.\n"
      operationId: listBankTransferRefunds
      parameters:
        - name: processingTerminalId
          in: query
          required: true
          description: Filter results by the unique identifier that we assigned to the terminal.
          schema: &ref_461
            maxLength: 50
            minLength: 4
            type: string
          examples: &ref_462
            example:
              value: '1234001'
        - name: orderId
          in: query
          description: Filter results by the order ID of the refund.
          schema: &ref_463
            maxLength: 24
            minLength: 1
            type: string
          examples: &ref_464
            example:
              value: OrderRef6543
        - name: nameOnAccount
          in: query
          description: Filter results by the accountholder's name.
          schema: &ref_465
            maxLength: 50
            minLength: 1
            type: string
          examples: &ref_466
            example:
              value: Sarah%20Hazel%20Hopper
        - name: last4
          in: query
          description: Filter results by the last four digits of the account number.
          schema: &ref_467
            pattern: '[0-9]{4}'
            type: string
          examples: &ref_468
            example:
              value: '7062'
        - name: type
          description: Filter results by transaction type.
          in: query
          schema: &ref_469
            type: array
            items:
              type: string
              enum:
                - refund
                - unreferencedRefund
          examples: &ref_470
            example:
              value:
                - refund
        - name: status
          in: query
          description: Filter results by the status of the refund.
          schema: &ref_471
            type: array
            items:
              type: string
              enum:
                - ready
                - pending
                - declined
                - complete
                - admin
                - reversal
                - returned
          examples: &ref_472
            example:
              value:
                - ready
        - name: dateFrom
          in: query
          description: Filter results by refunds that the merchant ran after a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
          schema: &ref_473
            type: string
            format: date-time
          examples: &ref_474
            example:
              value: '2024-07-01T00:00:00Z'
        - name: dateTo
          in: query
          description: Filter results by refunds that the merchant ran before a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
          schema: &ref_475
            type: string
            format: date-time
          examples: &ref_476
            example:
              value: '2024-07-31T23:59:59Z'
        - name: settlementState
          in: query
          description: Filter results by the settlement status.
          schema: &ref_477
            type: string
            enum:
              - settled
              - unsettled
          examples: &ref_478
            example:
              value: settled
        - name: settlementDate
          in: query
          description: Filter results by the settlement date. Send a value in **YYYY-MM-DD** format.
          schema: &ref_479
            type: string
            format: date
          examples: &ref_480
            example:
              value: '2024-07-15'
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of refund transactions.
          content:
            application/json:
              schema:
                required: &ref_729
                  - count
                  - data
                  - hasMore
                  - limit
                type: object
                allOf: &ref_730
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of refund transactions.
                        items:
                          required: *ref_259
                          type: object
                          properties: *ref_260
              examples:
                paginatedResults:
                  summary: Paginated Bank Transfer Unreferenced Refund
                  description: Paginated Bank Transfer Unreferenced Refund
                  value: &ref_918
                    limit: 2
                    count: 2
                    hasMore: true
                    data:
                      - refundId: CD3HN88U9F
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef6543
                          dateTime: '2024-07-02T15:30:00Z'
                          description: refund example
                          amount: 4999
                          currency: USD
                        customer:
                          contactMethods:
                            - type: email
                              value: sarah.hopper@example.com
                          notificationLanguage: en
                        bankAccount:
                          type: ach
                          secCode: web
                          accountType: checking
                          nameOnAccount: Sarah Hazel Hopper
                          accountNumber: '****3159'
                          routingNumber: '*****0277'
                        transactionResult:
                          type: unreferencedRefund
                          status: ready
                          authorizedAmount: -4999
                          currency: USD
                          responseCode: A
                          responseMessage: NoError
                          processorResponseCode: '0'
                      - refundId: B6ZOFZNVOP
                        processingTerminalId: '1234001'
                        order:
                          orderId: OrderRef7654
                          dateTime: '2024-07-02T15:30:00Z'
                          description: Refund for order OrderRef7654
                          amount: 3999
                          currency: USD
                        customer:
                          contactMethods:
                            - type: email
                              value: sarah.hopper@example.com
                          notificationLanguage: en
                        bankAccount:
                          type: ach
                          secCode: web
                          accountType: checking
                          nameOnAccount: Sarah Hazel Hopper
                          accountNumber: '****3159'
                          routingNumber: '*****0277'
                        transactionResult:
                          type: unreferencedRefund
                          status: ready
                          authorizedAmount: -3999
                          currency: USD
                          responseCode: A
                          responseMessage: NoError
                          processorResponseCode: '0'
                        customFields:
                          - name: yourCustomField
                            value: abc123
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/bank-transfer-refunds?limit=2&processingTerminalId=1234001&after=B6ZOFZNVOP
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/bank-transfer-refunds?processingTerminalId=1234001&limit=2&before=CD3HN88U9F
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-refunds/{refundId}:
    get:
      tags:
        - Bank transfer refunds
      summary: Retrieve refund
      operationId: getBankTransferRefund
      description: |
        Use this method to retrieve information about a refund.  

        To retrieve a refund, you need its refundId. Our gateway returned the refundId in the response of the [Refund Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/refund) method or the [Create Refund](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/create) method.  

        **Note:** If you don’t have the refundId, use our [List Refunds](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/list) method to search for the refund.  

        Our gateway returns the following information about the refund:  

        - Order details, including the refund amount and when it was processed.  
        - Bank account details, including the customer’s name and account number.  

        If the refund is a referenced refund, our gateway also returns details about the payment that the refund is linked to.
      parameters:
        - name: refundId
          description: Unique identifier that our gateway assigned to the refund.
          in: path
          required: true
          schema: &ref_262
            maxLength: 10
            minLength: 10
            type: string
          examples: &ref_263
            example:
              value: CD3HN88U9F
      responses:
        '200':
          description: Successful request. Returns the specific refund.
          content:
            application/json:
              schema:
                required: *ref_259
                type: object
                properties: *ref_260
              examples:
                bankTransferUnreferencedRefund:
                  summary: Bank Transfer Unreferenced Refund
                  description: Bank Transfer Unreferenced Refund
                  value: *ref_261
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /bank-transfer-refunds/{refundId}/reverse:
    post:
      tags:
        - Bank transfer refunds
      summary: Reverse refund
      operationId: reverseBankTransferRefund
      description: |
        Use this method to cancel a bank transfer refund in an open batch.  

        To cancel a refund, you need its refundId. Our gateway returned the refundId in the response of the [Refund Payment](https://docs.payroc.com/api/schema/payments/bank-transfer-payments/refund) or [Create Refund](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/create) method.  

        **Note:** If you don’t have the refundId, use our [List Refunds](https://docs.payroc.com/api/schema/payments/bank-transfer-refunds/list) method to search for the refund.  

        If your request is successful, the gateway removes the refund from the merchant’s open batch, and no funds are returned to the cardholder’s account.  
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: refundId
          description: Unique identifier that our gateway assigned to the refund.
          in: path
          required: true
          schema: *ref_262
          examples: *ref_263
      responses:
        '200':
          description: Successful request. We reversed the refund transaction.
          content:
            application/json:
              schema:
                required: *ref_259
                type: object
                properties: *ref_260
              examples:
                bankTransferUnreferencedRefund:
                  summary: Bank Transfer Unreferenced Refund
                  description: Bank Transfer Unreferenced Refund
                  value: &ref_920
                    refundId: CD3HN88U9F
                    processingTerminalId: '1234001'
                    order:
                      orderId: OrderRef6543
                      dateTime: '2024-07-02T15:30:00Z'
                      description: Refund for order OrderRef6543
                      amount: 4999
                      currency: USD
                    customer:
                      contactMethods:
                        - type: email
                          value: sarah.hopper@example.com
                      notificationLanguage: en
                    bankAccount:
                      type: ach
                      secCode: web
                      accountType: checking
                      nameOnAccount: Sarah Hazel Hopper
                      accountNumber: '****3159'
                      routingNumber: '*****0277'
                    transactionResult:
                      type: unreferencedRefund
                      status: reversal
                      authorizedAmount: -4999
                      currency: USD
                      responseCode: A
                      responseMessage: NoError
                      processorResponseCode: '0'
                    customFields:
                      - name: yourCustomField
                        value: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /bank-accounts/verify:
    post:
      tags:
        - Bank accounts
      summary: Verify bank account
      operationId: verifyBankAccount
      description: |
        Use this method to verify a customer's bank account details.  

        In the request, send the customer's bank account details. Our gateway can verify the following types of bank details:  
        - Automated Clearing House (ACH) details  
        - Pre-Authorized Debit (PAD) details  

        In the response, our gateway indicates if the account details are valid and if you should use them in follow-on actions.  
          
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_733
                - processingTerminalId
                - bankAccount
              type: object
              properties: &ref_734
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that we assigned to the terminal.
                  example: '1234001'
                bankAccount:
                  description: Object that contains information about the bank account.
                  type: object
                  discriminator:
                    propertyName: type
                    mapping:
                      ach: '#/components/schemas/achPayload'
                      pad: '#/components/schemas/padPayload'
                  oneOf:
                    - required: *ref_157
                      type: object
                      writeOnly: true
                      title: ACH
                      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
                      properties: *ref_158
                    - required: *ref_159
                      type: object
                      writeOnly: true
                      title: PAD
                      description: Object that contains information about the payment details for the customer’s preauthorized electronic debit (PAD) transactions.
                      properties: *ref_160
            examples:
              bankAccountVerificationRequestPad:
                summary: PAD Bank Account Verification Request
                description: Bank Account Verification Request for PAD
                value: &ref_921
                  processingTerminalId: '1234001'
                  bankAccount:
                    type: pad
                    accountType: checking
                    nameOnAccount: Sarah Hazel Hopper
                    accountNumber: '1234567890'
                    routingNumber: '123456789'
                    transitNumber: '76543'
                    institutionNumber: '543'
              bankAccountVerificationRequestAch:
                summary: ACH Bank Account Verification Request
                description: Bank Account Verification Request for ACH
                value: &ref_922
                  processingTerminalId: '1234001'
                  bankAccount:
                    type: ach
                    accountType: checking
                    nameOnAccount: Sarah Hazel Hopper
                    accountNumber: '321831591'
                    routingNumber: '063100277'
                    secCode: web
        required: true
      responses:
        '200':
          description: Successful request. Returns the verification status of the customer's bank account details.
          content:
            application/json:
              schema:
                required: &ref_735
                  - processingTerminalId
                  - verified
                type: object
                properties: &ref_736
                  processingTerminalId:
                    maxLength: 50
                    minLength: 4
                    type: string
                    description: Unique identifier that we assigned to the terminal.
                    example: '1234001'
                  verified:
                    type: boolean
                    description: |
                      Indicates if the customer's bank account details are valid.  
                      - `true` - Account details are valid.  
                      - `false` - Account details are not valid.
                    example: true
              examples:
                bankAccountVerificationResponse:
                  summary: Bank Account Verification Response
                  description: Bank Account Verification Response
                  value: &ref_923
                    processingTerminalId: '1234001'
                    verified: true
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content: *ref_103
        '415':
          description: Unsupported media type
          content: *ref_104
        '500':
          description: An error has occured
          content: *ref_14
  /merchant-platforms:
    summary: Provide capabilities to manage a merchant platform.
    post:
      tags:
        - Merchant platforms
      summary: Create merchant platform
      description: |
        Use this method to board a merchant with Payroc.  

        **Note**: This method is part of our Boarding solution. To help you understand how this method works with other Boarding methods, go to [Board a Merchant](https://docs.payroc.com/guides/integrate/boarding).  

        In the request, include the following information:  
        - Legal information, including its legal name and address.  
        - Contact information, including the email address for the business.  
        - Processing account information, including the pricing model, owners, and contacts for the processing account.  

        When you send a successful request, we review the merchant's information. After we complete our review and approve the merchant, we assign:  
        - **merchantPlatformId** - Unique identifier for the merchant platform.  
        - **processingAccountId** - Unique identifier for each processing account linked to the merchant platform.  

        You need to keep these to perform follow-on actions, for example, you need the processingAccountId to [order terminals](https://docs.payroc.com/api/schema/boarding/processing-accounts/create-terminal-order) for the processing account.
      operationId: createMerchant
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: create merchant platform
              required: &ref_752
                - business
                - processingAccounts
              properties: &ref_753
                business:
                  type: object
                  description: Object that contains information about the business.
                  title: business
                  required: &ref_268
                    - name
                    - taxId
                    - contactMethods
                    - addresses
                    - organizationType
                  properties: &ref_269
                    name:
                      type: string
                      description: Legal name of the business.
                      maxLength: 100
                      example: Pizza Doe
                    taxId:
                      type: string
                      description: Tax ID of the business.
                      maxLength: 20
                      example: 12-3456789
                    organizationType:
                      type: string
                      description: Type of organization.
                      enum:
                        - privateCorporation
                        - publicCorporation
                        - nonProfit
                        - privateLlc
                        - publicLlc
                        - privatePartnership
                        - publicPartnership
                        - soleProprietor
                      example: privateCorporation
                    countryOfOperation:
                      type: string
                      description: Two-digit code for the country that the business operates in. The format follows the [ISO-3166](https://www.iso.org/iso-3166-country-codes.html) standard.
                      enum:
                        - US
                      example: US
                    addresses:
                      type: array
                      minItems: 1
                      uniqueItems: true
                      description: Object that contains the addresses for the business.
                      items:
                        oneOf:
                          - title: Legal address
                            required: &ref_739
                              - type
                              - city
                              - country
                              - address1
                              - postalCode
                              - state
                            allOf: &ref_740
                              - type: object
                                description: Type of address.
                                required: &ref_737
                                  - type
                                properties: &ref_738
                                  type:
                                    type: string
                                    description: Type of address.
                                    enum:
                                      - legalAddress
                                    default: legalAddress
                              - required: *ref_0
                                type: object
                                title: address
                                description: Object that contains information about the address.
                                properties: *ref_1
                    contactMethods:
                      type: array
                      minItems: 1
                      uniqueItems: true
                      description: Array of contactMethod objects. One contact method must be an email address.
                      items:
                        discriminator: *ref_2
                        oneOf: *ref_3
                processingAccounts:
                  description: Array of processingAccounts objects.
                  type: array
                  minItems: 1
                  items:
                    required: &ref_280
                      - doingBusinessAs
                      - owners
                      - businessType
                      - merchandiseOrServiceSold
                      - businessStartDate
                      - timezone
                      - address
                      - contactMethods
                      - processing
                      - funding
                      - pricing
                      - signature
                      - categoryCode
                    type: object
                    properties: &ref_281
                      processingAccountId:
                        type: string
                        description: Unique identifier of the processing account.
                        readOnly: true
                        example: '38765'
                      doingBusinessAs:
                        type: string
                        description: Trading name of the business.
                        maxLength: 100
                        example: Pizza Doe
                      owners:
                        description: |
                          Collection of individuals that are responsible for a processing account. When you create a processing account, you must indicate at least one owner as either of the following:  

                          - **Control prong** - An individual who has a significant equity stake in the business and can make decisions for the processing account. You can add only one control prong to a processing account.  
                          - **Authorized signatory** - An individual who doesn't have an equity stake in the business but can make decisions for the processing account.
                        minItems: 1
                        type: array
                        items:
                          type: object
                          title: owner
                          required: *ref_30
                          properties: *ref_31
                      website:
                        type: string
                        description: Website address of the business.
                        maxLength: 128
                        example: www.example.com
                      businessType:
                        type: string
                        description: Type of business.
                        enum:
                          - retail
                          - restaurant
                          - internet
                          - moto
                          - lodging
                          - notForProfit
                        example: restaurant
                      categoryCode:
                        type: integer
                        format: int32
                        description: Merchant Category Code (MCC) for the type of business.
                        maxLength: 4
                        example: 5999
                      merchandiseOrServiceSold:
                        type: string
                        description: Description of the services or merchandise sold by the business.
                        maxLength: 125
                        example: Pizza
                      businessStartDate:
                        type: string
                        format: date
                        description: Date that the business was established. The format of the value is **YYYY-MM-DD**.
                        example: '2020-01-01'
                      timezone:
                        description: Time zone for the processing account.
                        enum: &ref_276
                          - Pacific/Midway
                          - Pacific/Honolulu
                          - America/Anchorage
                          - America/Los_Angeles
                          - America/Denver
                          - America/Phoenix
                          - America/Chicago
                          - America/Indiana/Indianapolis
                          - America/New_York
                        example: America/Chicago
                        maxLength: 28
                      address:
                        type: object
                        oneOf:
                          - required: *ref_0
                            type: object
                            title: address
                            description: Object that contains information about the address.
                            properties: *ref_1
                      contactMethods:
                        type: array
                        minItems: 1
                        description: Array of contactMethod objects. One contact method must be an email address.
                        items:
                          discriminator: *ref_2
                          oneOf: *ref_3
                      processing:
                        description: Object that contains information about how we process transactions for the account.
                        type: object
                        title: processing
                        required: &ref_277
                          - transactionAmounts
                          - monthlyAmounts
                          - volumeBreakdown
                        properties: &ref_278
                          merchantId:
                            type: string
                            description: Unique identifier that the acquiring platform assigns to the merchant.
                            maxLength: 15
                            example: '4525644354'
                            readOnly: true
                          transactionAmounts:
                            description: Object that contains information about transaction amounts for the processing account.
                            type: object
                            required:
                              - average
                              - highest
                            properties:
                              average:
                                type: integer
                                format: int32
                                description: Estimated average transaction amount. The value is in the currency's lowest denomination, for example, cents. You must provide an amount that is greater than zero.
                                example: 5000
                              highest:
                                type: integer
                                format: int32
                                description: Estimated maximum transaction amount. The value is in the currency's lowest denomination, for example, cents. You must provide an amount that is greater than zero.
                                example: 10000
                          monthlyAmounts:
                            description: Object that contains information about the monthly processing amounts for the processing account.
                            type: object
                            required:
                              - average
                              - highest
                            properties:
                              average:
                                type: integer
                                format: int32
                                description: Estimated average transaction amount each month. The value is in the currency's lowest denomination, for example, cents. You must provide an amount that is greater than zero.
                                example: 50000
                              highest:
                                type: integer
                                format: int32
                                description: Estimated maximum transaction amount each month. The value is in the currency's lowest denomination, for example, cents. You must provide an amount that is greater than zero.
                                example: 100000
                          volumeBreakdown:
                            type: object
                            description: Object that contains information about the types of transactions ran by the processing account. The percentages for transaction types must total 100%.
                            required:
                              - cardPresentKeyed
                              - cardPresentSwiped
                              - mailOrTelephone
                              - ecommerce
                            properties:
                              cardPresentKeyed:
                                description: Estimated percentage of keyed card-present transactions.
                                type: integer
                                format: int32
                                example: 47
                              cardPresentSwiped:
                                description: Estimated percentage of swiped card-present transactions.
                                type: integer
                                format: int32
                                example: 30
                              mailOrTelephone:
                                description: Estimated percentage of mail order or telephone transactions.
                                type: integer
                                format: int32
                                example: 3
                              ecommerce:
                                description: Esimated percentage of e-Commerce transactions.
                                type: integer
                                format: int32
                                example: 20
                          isSeasonal:
                            type: boolean
                            description: Indicates if the processing account runs transactions on a seasonal basis. For example, if the processing account runs transactions during only the winter months, send a value of `true`.
                            example: false
                          monthsOfOperation:
                            type: array
                            description: Months of the year that the processing account runs transactions.
                            maxItems: 12
                            items:
                              type: string
                              enum:
                                - jan
                                - feb
                                - mar
                                - apr
                                - may
                                - jun
                                - jul
                                - aug
                                - sep
                                - oct
                                - nov
                                - dec
                            example:
                              - jan
                              - feb
                          ach:
                            description: Object that contains information about Automated Clearing House (ACH) transactions.
                            type: object
                            required:
                              - refunds
                              - estimatedMonthlyTransactions
                              - limits
                            properties:
                              naics:
                                type: string
                                description: North American Industry Classification System (NAICS) code.
                                maxLength: 6
                                example: '5812'
                              previouslyTerminatedForAch:
                                type: boolean
                                default: false
                                description: Indicates if the business or its principals were previously turned down for ACH processing.
                                example: false
                              refunds:
                                description: Object that contains information about the ACH refund policy for the processing account.
                                type: object
                                required:
                                  - writtenRefundPolicy
                                properties:
                                  writtenRefundPolicy:
                                    type: boolean
                                    description: Indicates if the business has a written refund policy.
                                    default: false
                                    example: true
                                  refundPolicyUrl:
                                    type: string
                                    description: URL of the written refund policy.
                                    maxLength: 2000
                                    example: www.example.com/refund-poilcy-url
                              estimatedMonthlyTransactions:
                                type: integer
                                description: Estimated maximum number of transactions that the merchant will process in a month.
                                example: 3000
                              limits:
                                description: Object that contains information about transaction limits for the processing account.
                                type: object
                                required:
                                  - singleTransaction
                                  - dailyDeposit
                                  - monthlyDeposit
                                properties:
                                  singleTransaction:
                                    type: integer
                                    description: Maximum amount allowed for a single debit or credit transaction. The value is in the currency's lowest denomination, for example, cents.
                                    example: 10000
                                  dailyDeposit:
                                    type: integer
                                    description: Maximum amount of total transactions allowed per day. The value is in the currency's lowest denomination, for example, cents.
                                    example: 200000
                                  monthlyDeposit:
                                    type: integer
                                    description: Maximum amount of total transactions allowed per month. The value is in the currency's lowest denomination, for example, cents.
                                    example: 6000000
                              transactionTypes:
                                type: array
                                description: List of transaction types that the processing account supports.
                                uniqueItems: true
                                items:
                                  type: string
                                  enum:
                                    - prearrangedPayment
                                    - corpCashDisbursement
                                    - telephoneInitiatedPayment
                                    - webInitiatedPayment
                                    - other
                                example:
                                  - prearrangedPayment
                                  - other
                              transactionTypesOther:
                                type: string
                                description: If you send a value of `other` for transactionTypes, provide a list of the supported transaction types.
                                maxLength: 100
                                example: anotherTransactionType
                          cardAcceptance:
                            type: object
                            description: Object that contains information about the types of cards that the processing account accepts.
                            properties:
                              debitOnly:
                                type: boolean
                                default: false
                                description: Indicates if the merchant accepts only debit cards.
                                example: false
                              hsaFsa:
                                type: boolean
                                default: false
                                description: Indicates if the merchant accepts health savings account (HSA) and flexible spending account (FSA) cards.
                                example: false
                              cardsAccepted:
                                type: array
                                description: List of card types the merchant accepts.
                                uniqueItems: true
                                default:
                                  - visa
                                  - mastercard
                                  - discover
                                  - amexOptBlue
                                items:
                                  type: string
                                  enum:
                                    - visa
                                    - mastercard
                                    - discover
                                    - amexOptBlue
                                example:
                                  - visa
                                  - mastercard
                              specialityCards:
                                type: object
                                description: Information about the speciality cards that the merchant accepts.
                                properties:
                                  americanExpressDirect:
                                    description: Object that indicates if the merchant accepts American Express Direct cards and contains the merchant’s American Express merchant number.
                                    type: object
                                    properties:
                                      enabled:
                                        type: boolean
                                        default: false
                                        description: Indicates if the merchant accepts American Express Direct.
                                        example: true
                                      merchantNumber:
                                        type: string
                                        description: If the merchant accepts American Express Direct, provide their American Express merchant number.
                                        maxLength: 100
                                        example: abc1234567
                                  electronicBenefitsTransfer:
                                    description: Object that indicates if the merchant accepts Electronic Benefits Transfer (EBT) cards and contains the merchant’s Food and Nutrition Services (FNS) number.
                                    type: object
                                    properties:
                                      enabled:
                                        type: boolean
                                        default: false
                                        description: Indicates if the merchant accepts EBT.
                                        example: true
                                      fnsNumber:
                                        type: string
                                        description: If the merchant accepts EBT, provide their FNS number.
                                        maxLength: 7
                                        example: abc1234
                                  other:
                                    description: Object that contains information about other speciality cards that the merchant accepts.
                                    type: object
                                    properties:
                                      wexMerchantNumber:
                                        type: string
                                        description: If the merchant accepts WEX, provide their WEX merchant number.
                                        maxLength: 50
                                        example: abc1234567
                                      voyagerMerchantId:
                                        type: string
                                        description: If the merchant accepts Voyager, provide their Voyager merchant ID.
                                        maxLength: 50
                                        example: abc1234567
                                      fleetMerchantId:
                                        type: string
                                        description: If the merchant accepts Fleet, provide their Fleet merchant ID.
                                        maxLength: 50
                                        example: abc1234567
                      funding:
                        type: object
                        allOf: &ref_746
                          - type: object
                            description: Object that contains information about the funding schedule of the processing account.
                            properties: &ref_279
                              status:
                                type: string
                                readOnly: true
                                description: Indicates if the processing account can receive funds.
                                enum:
                                  - enabled
                                  - disabled
                                example: enabled
                              fundingSchedule:
                                type: string
                                description: |
                                  Indicates when funds are sent to the funding account.  

                                  If you send a value of `sameDay` or `nextDay`, provide a value for acceleratedFundingFee.  

                                  **Note:** If you send a value of `sameday`, funding includes all transactions the merchant ran before the ACH cut-off time. 
                                enum:
                                  - standard
                                  - nextday
                                  - sameday
                                example: nextday
                                default: standard
                              acceleratedFundingFee:
                                type: integer
                                description: |
                                  Monthly fee in cents for accelerated funding. The value is in the currency's lowest denomination, for example, cents.  
                                              
                                  We apply this fee if the value for fundingSchedule is `sameday` or `nextday`.  
                                example: 1999
                                default: 0
                              dailyDiscount:
                                type: boolean
                                description: Indicates if we collect fees from the merchant's account each day.
                                example: false
                          - type: object
                            properties:
                              fundingAccounts:
                                description: Array of fundingAccounts objects.
                                minItems: 1
                                maxItems: 2
                                writeOnly: true
                                type: array
                                items:
                                  required: *ref_20
                                  type: object
                                  title: funding account
                                  properties: *ref_21
                      pricing:
                        type: object
                        description: Object that contains HATEOAS links to the pricing information that we apply to the processing account.
                        discriminator: &ref_750
                          propertyName: type
                          mapping:
                            intent: '#/components/schemas/pricingTemplate'
                            agreement: '#/components/schemas/pricingAgreement'
                        oneOf: &ref_751
                          - type: object
                            title: Pricing intent
                            required: &ref_747
                              - type
                              - pricingIntentId
                            properties: &ref_748
                              type:
                                type: string
                                description: |
                                  Type of pricing for the processing account.  
                                  **Note**: To create a pricing intent, go to [Create Pricing Intent](https://docs.payroc.com/api/schema/boarding/pricing-intents/create).  
                                enum:
                                  - intent
                                example: intent
                              pricingIntentId:
                                type: string
                                description: Unique identifier of the pricing intent.
                                example: '6123'
                          - type: object
                            title: Pricing agreement
                            allOf: &ref_749
                              - type: object
                                description: Type of pricing for the processing account.
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - agreement
                                    example: agreement
                                required:
                                  - type
                              - oneOf:
                                  - type: object
                                    title: US pricing agreement version 5.0
                                    description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 5.0.
                                    required: *ref_264
                                    properties: *ref_265
                      signature:
                        type: object
                        description: Object that includes information about how we captured the owner's signature.
                        discriminator: &ref_270
                          propertyName: type
                          mapping:
                            requestedViaDirectLink: '#/components/schemas/signatureByDirectLink'
                            requestedViaEmail: '#/components/schemas/signatureByEmail'
                        oneOf: &ref_271
                          - description: Object that contains signature information if we captured the merchant’s signature by direct link.
                            title: Signature by direct link
                            type: object
                            required: &ref_741
                              - type
                            properties: &ref_742
                              type:
                                type: string
                                description: Method used to capture the owner's signature.
                                enum:
                                  - requestedViaDirectLink
                                example: requestedViaDirectLink
                              link:
                                description: Object that contains links to the signed contract.
                                allOf:
                                  - type: object
                                    readOnly: true
                                    description: Object that contains HATEOAS links for the resource.
                                    properties: *ref_4
                                    required: *ref_5
                                    example: *ref_6
                                example:
                                  rel: agreement
                                  href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                                  method: get
                          - description: Object that contains signature information if we captured the merchant’s signature by email.
                            title: Signature by email
                            type: object
                            required: &ref_743
                              - type
                            properties: &ref_744
                              type:
                                type: string
                                description: Method used to capture the owner's signature.
                                enum:
                                  - requestedViaEmail
                                example: requestedViaEmail
                      contacts:
                        type: array
                        description: Array of contact objects.
                        items:
                          type: object
                          title: contact
                          required: &ref_290
                            - type
                            - firstName
                            - lastName
                            - identifiers
                            - contactMethods
                          properties: &ref_291
                            contactId:
                              type: integer
                              description: Unique identifier of the contact.
                              readOnly: true
                              example: 1543
                            type:
                              type: string
                              description: Type of contact.
                              enum:
                                - manager
                                - representative
                                - others
                              example: manager
                            firstName:
                              type: string
                              description: Contact's first name.
                              example: Jane
                              maxLength: 50
                            middleName:
                              type: string
                              description: Contact's middle name.
                              example: Helen
                              maxLength: 50
                            lastName:
                              type: string
                              description: Contact's last name.
                              example: Doe
                              maxLength: 50
                            identifiers:
                              minItems: 1
                              type: array
                              description: Array of identifier objects.
                              example:
                                - type: nationalId
                                  value: 000-00-4320
                              items:
                                required: *ref_266
                                type: object
                                title: identifier
                                properties: *ref_267
                            contactMethods:
                              type: array
                              minItems: 1
                              maxItems: 4
                              uniqueItems: true
                              description: |
                                Array of contactMethod objects.  
                                **Note:** If you are adding information about an owner, you must provide at least an email address. If you are adding information about a contact, you must provide at least a contact number.   
                              items:
                                discriminator: *ref_2
                                oneOf: *ref_3
                      metadata:
                        type: object
                        additionalProperties:
                          type: string
                        description: Object that you can send to include custom data in the request. For more information about how to use metadata, go to [Metadata](https://docs.payroc.com/api/metadata).
                        example:
                          customerId: '2345'
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: Object that you can send to include custom data in the request.
                  example:
                    customerId: '2345'
            examples:
              createMerchantPlatform:
                summary: Create merchant platform
                description: Create a merchant platform.
                value: &ref_925
                  business:
                    name: Example Corp
                    taxId: 12-3456789
                    organizationType: privateCorporation
                    countryOfOperation: US
                    addresses:
                      - type: legalAddress
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                    contactMethods:
                      - type: email
                        value: jane.doe@example.com
                  processingAccounts:
                    - doingBusinessAs: Pizza Doe
                      owners:
                        - firstName: Jane
                          middleName: Helen
                          lastName: Doe
                          dateOfBirth: '1964-03-22'
                          address:
                            address1: 1 Example Ave.
                            address2: Example Address Line 2
                            address3: Example Address Line 3
                            city: Chicago
                            state: Illinois
                            country: US
                            postalCode: '60056'
                          identifiers:
                            - type: nationalId
                              value: 000-00-4320
                          contactMethods:
                            - type: email
                              value: jane.doe@example.com
                          relationship:
                            equityPercentage: 48.5
                            title: CFO
                            isControlProng: true
                            isAuthorizedSignatory: false
                      website: www.example.com
                      businessType: restaurant
                      categoryCode: 5999
                      merchandiseOrServiceSold: Pizza
                      businessStartDate: '2020-01-01'
                      timezone: America/Chicago
                      address:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                      processing:
                        transactionAmounts:
                          average: 5000
                          highest: 10000
                        monthlyAmounts:
                          average: 50000
                          highest: 100000
                        volumeBreakdown:
                          cardPresentKeyed: 47
                          cardPresentSwiped: 30
                          mailOrTelephone: 3
                          ecommerce: 20
                        isSeasonal: true
                        monthsOfOperation:
                          - jan
                          - feb
                        ach:
                          naics: '5812'
                          previouslyTerminatedForAch: false
                          refunds:
                            writtenRefundPolicy: true
                            refundPolicyUrl: www.example.com/refund-poilcy-url
                          estimatedMonthlyTransactions: 3000
                          limits:
                            singleTransaction: 10000
                            dailyDeposit: 200000
                            monthlyDeposit: 6000000
                          transactionTypes:
                            - prearrangedPayment
                            - other
                          transactionTypesOther: anotherTransactionType
                        cardAcceptance:
                          debitOnly: false
                          hsaFsa: false
                          cardsAccepted:
                            - visa
                            - mastercard
                          specialityCards:
                            americanExpressDirect:
                              enabled: true
                              merchantNumber: abc1234567
                            electronicBenefitsTransfer:
                              enabled: true
                              fnsNumber: '6789012'
                            other:
                              wexMerchantNumber: abc1234567
                              voyagerMerchantId: abc1234567
                              fleetMerchantId: abc1234567
                      funding:
                        fundingSchedule: nextday
                        acceleratedFundingFee: 1999
                        dailyDiscount: false
                        fundingAccounts:
                          - type: checking
                            use: creditAndDebit
                            nameOnAccount: Jane Doe
                            paymentMethods:
                              - type: ach
                                value:
                                  routingNumber: '123456789'
                                  accountNumber: '1234567890'
                            metadata:
                              yourCustomField: abc123
                      pricing:
                        type: intent
                        pricingIntentId: '6123'
                      signature:
                        type: requestedViaDirectLink
                      contacts:
                        - type: manager
                          firstName: Jane
                          middleName: Helen
                          lastName: Doe
                          identifiers:
                            - type: nationalId
                              value: 000-00-4320
                          contactMethods:
                            - type: email
                              value: jane.doe@example.com
                      metadata:
                        customerId: '2345'
                  metadata:
                    customerId: '2345'
      responses:
        '201':
          description: Successful request. We created the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: merchant
                required: &ref_272
                  - business
                  - processingAccounts
                properties: &ref_273
                  merchantPlatformId:
                    type: string
                    readOnly: true
                    description: Unique identifier that we assigned to the merchant platform.
                    example: '12345'
                  createdDate:
                    type: string
                    format: date-time
                    example: '2024-07-02T12:00:00.000Z'
                    readOnly: true
                    description: Date that the merchant platform was created. We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                  lastModifiedDate:
                    type: string
                    format: date-time
                    example: '2024-07-02T12:00:00.000Z'
                    readOnly: true
                    description: Date that the merchant platform was last modified. We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                  business:
                    type: object
                    description: Object that contains information about the business.
                    title: business
                    required: *ref_268
                    properties: *ref_269
                  processingAccounts:
                    readOnly: true
                    description: Array of processingAccount objects.
                    type: array
                    items:
                      type: object
                      required:
                        - doingBusinessAs
                        - status
                      title: processingAccount
                      properties:
                        processingAccountId:
                          type: string
                          description: Unique identifier that we assigned to the processing account.
                          example: '38765'
                        doingBusinessAs:
                          type: string
                          description: Trading name of the business.
                          example: Pizza Doe
                        status:
                          type: string
                          description: |
                            Status of the processing account.
                            - `entered` - We have received information about the account, but we have not yet reviewed it.  
                            - `pending` - We have reviewed the information about the account, but we have not yet approved it.  
                            - `approved` - We have approved the account for processing transactions and funding.  
                            - `subjectTo` - We have approved the account, but we are waiting on further information.  
                            - `dormant` - Account is closed for a period.  
                            - `nonProcessing` - We have approved the account, but the merchant has not yet run a transaction.  
                            - `rejected` - We rejected the application for the processing account.  
                            - `terminated` - Processing account is closed.  
                            - `cancelled` - Merchant withdrew the application for the processing account.
                            - `failed` - An error occurred while we were setting up the processing account.  

                            **Note**: You can subscribe to our processingAccount.status.changed event to get notifications when we update the status of a processing account. For more information about how to subscribe to events, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).
                          readOnly: true
                          enum:
                            - entered
                            - pending
                            - approved
                            - subjectTo
                            - dormant
                            - nonProcessing
                            - rejected
                            - terminated
                            - cancelled
                            - failed
                          example: entered
                        link:
                          type: object
                          description: Object that contains HATEOAS links for the processing account.
                          properties:
                            rel:
                              type: string
                              description: Relationship to the parent resource.
                              example: processingAccount
                            href:
                              type: string
                              description: Link to the resource.
                              example: https://api.payroc.com/v1/processing-accounts/38765
                            method:
                              type: string
                              description: HTTP method you can use to retrieve the resource.
                              example: get
                        signature:
                          type: object
                          description: Object that includes information about how we captured the owner's signature.
                          discriminator: *ref_270
                          oneOf: *ref_271
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: Object that you can send to include custom metadata in the request.
                    example:
                      customerId: '2345'
                  links:
                    readOnly: true
                    type: array
                    description: Array of useful links related to your request.
                    items:
                      type: object
                      readOnly: true
                      description: Object that contains HATEOAS links for the resource.
                      properties: *ref_4
                      required: *ref_5
                      example: *ref_6
              examples:
                created:
                  summary: Created merchant platform
                  description: New merchant platform created
                  value: &ref_926
                    merchantPlatformId: '12345'
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
                    business:
                      name: Example Corp
                      taxId: xxxxx6789
                      organizationType: privateCorporation
                      countryOfOperation: US
                      addresses:
                        - type: legalAddress
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                    processingAccounts:
                      - processingAccountId: '38765'
                        doingBusinessAs: Pizza Doe
                        status: pending
                        link:
                          rel: processingAccount
                          href: https://api.payroc.com/v1/processing-accounts/38765
                          method: get
                        signature:
                          type: requestedViaDirectLink
                          link:
                            rel: agreement
                            href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                            method: get
                partialSuccess:
                  summary: Failed processing account
                  description: We successfully created the merchant platform, but failed to add one or more processing accounts.
                  value: &ref_927
                    merchantPlatformId: '12346'
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
                    business:
                      name: Example Corp
                      taxId: xxxxx6789
                      organizationType: privateCorporation
                      countryOfOperation: US
                      addresses:
                        - type: legalAddress
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                        - type: phone
                          value: 555 555 3456
                    processingAccounts:
                      - doingBusinessAs: Pizza Doe
                        status: failed
          headers:
            location:
              description: URI reference to the resource.
              schema:
                type: string
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                fundingAccountsLimitReached:
                  summary: Funding accounts limit reached
                  description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
                  value: &ref_284
                    type: https://docs.payroc.com/api/errors#funding-accounts-limit-reached
                    title: Funding accounts limit reached
                    status: 400
                    detail: You can not have any more than two funding accounts attached to this entity
                tooManyControlProngs:
                  summary: Too many control prongs
                  description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
                  value: &ref_285
                    type: https://docs.payroc.com/api/errors#too-many-control-prongs
                    title: Too many control prongs
                    status: 400
                    detail: You can set only one owner as the control prong
                noControlProng:
                  summary: No control prong or authorized signatory
                  description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
                  value: &ref_286
                    type: https://docs.payroc.com/api/errors#no-control-prong-or-authorized-signatory
                    title: No control prong or authorized signatory
                    status: 400
                    detail: Set one owner as the control prong or the authorized signatory
                dailyDiscountAndRewardPayConflict:
                  summary: Cannot select Daily Discount and RewardPayChoice at the same time.
                  description: You can't select Daily Discount with a RewardPayChoice pricing plan. To select Daily Discount, choose a different pricing plan.
                  value: &ref_287
                    type: https://docs.payroc.com/api/errors#daily-discount-and-reward-pay-conflict
                    title: Cannot select Daily Discount and RewardPayChoice at the same time.
                    status: 400
                    detail: Choose a different pricing plan or don't select Daily Discount.
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
                taxIdInUse:
                  summary: Tax ID in use
                  description: The tax ID supplied is already in use.
                  value: &ref_928
                    type: https://docs.payroc.com/api/errors#tax-id-in-use
                    title: Tax ID already in use
                    status: 409
                    detail: The tax ID that you supplied is already in use. Supply a unique tax ID
                nationalIdInUse:
                  summary: National ID in use
                  description: One or more supplied national IDs are not unique. All national IDs must be unique.
                  value: &ref_929
                    type: https://docs.payroc.com/api/errors#national-id-in-use
                    title: National ID in use
                    status: 409
                    detail: One or more supplied national IDs are not unique. All national IDs must be unique
        '500':
          description: An error has occured
          content: *ref_14
    get:
      tags:
        - Merchant platforms
      summary: List merchant platforms
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of merchant platforms that are linked to your ISV account.  

        **Note**: If you want to view the details of a specific merchant platform and you have its merchantPlatformId, use our [Retrieve Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/retrieve) method.  

        Our gateway returns the following information about each merchant platform in the list:  
        - Legal information, including its legal name and address.  
        - Contact information, including the email address for the business.  
        - Processing  account information, including the processingAccountId and status of each processing account that's linked to the merchant platform.  

        For each merchant platform, we also return its merchantPlatformId and its linked processingAccountIds, which you can use to perform follow-on actions.  
      operationId: listMerchantPlatforms
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of merchant platforms associated with the ISV's account.
          content:
            application/json:
              schema:
                type: object
                title: paginated merchant platforms
                allOf: &ref_745
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of merchantPlatform objects.
                        items:
                          type: object
                          title: merchant
                          required: *ref_272
                          properties: *ref_273
              examples:
                listMerchantPlatforms:
                  summary: Paginated list of merchant platforms
                  description: Retrieve a list of merchant platforms associated with your account.
                  value: &ref_924
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms?before=12345&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms?after=12346&limit=2
                    data:
                      - merchantPlatformId: '12345'
                        createdDate: '2024-07-02T12:00:00.000Z'
                        lastModifiedDate: '2024-07-02T12:00:00.000Z'
                        business:
                          name: Example Corp
                          taxId: xxxxx6789
                          organizationType: privateCorporation
                          countryOfOperation: US
                          addresses:
                            - type: legalAddress
                              address1: 1 Example Ave.
                              address2: Example Address Line 2
                              address3: Example Address Line 3
                              city: Chicago
                              state: Illinois
                              country: US
                              postalCode: '60056'
                          contactMethods:
                            - type: email
                              value: example-corp@example.com
                            - type: phone
                              value: 123 456 7890
                        processingAccounts:
                          - processingAccountId: '38765'
                            doingBusinessAs: Pizza Doe
                            status: pending
                            link:
                              rel: processingAccount
                              href: https://api.payroc.com/v1/processing-accounts/38765
                              method: get
                            signature:
                              type: requestedViaDirectLink
                              link:
                                rel: agreement
                                href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                                method: get
                      - merchantPlatformId: '12346'
                        createdDate: '2024-07-02T12:00:00.000Z'
                        lastModifiedDate: '2024-07-02T12:00:00.000Z'
                        business:
                          name: Example Corp
                          taxId: xxxxx6789
                          organizationType: privateCorporation
                          countryOfOperation: US
                          addresses:
                            - type: legalAddress
                              address1: 1 Example Ave.
                              address2: Example Address Line 2
                              address3: Example Address Line 3
                              city: Chicago
                              state: Illinois
                              country: US
                              postalCode: '60056'
                          contactMethods:
                            - type: email
                              value: example-corp@example.com
                            - type: phone
                              value: 123 456 7890
                        processingAccounts:
                          - processingAccountId: '38766'
                            doingBusinessAs: Doe Hot Dogs
                            status: pending
                            link:
                              rel: processingAccount
                              href: https://api.payroc.com/v1/processing-accounts/38766
                              method: get
                            signature:
                              type: requestedViaDirectLink
                              link:
                                rel: agreement
                                href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000001
                                method: get
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /merchant-platforms/{merchantPlatformId}:
    get:
      tags:
        - Merchant platforms
      summary: Retrieve merchant platform
      description: "Use this method to retrieve information about a merchant platform.  \n\nTo retrieve a merchant platform, you need its merchantPlatformId. Our gateway returned the merchantPlatformId in the response of the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method.  \n\n**Note:** If you don't have the merchantPlatformId, use our [List Merchant Platforms](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list) method to search for the merchant platform.\n\nOur gateway returns the following information about the merchant platform:\n-\tLegal information, including its legal name and address.\n-\tContact information, including the email address for the business. \n-\tProcessing account information, including the processingAccountId and status of each processing account that's linked to the merchant platform.  \n"
      operationId: getMerchantAccounts
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform that we sent to you when you created the merchant platform.
          required: true
          schema: &ref_274
            type: string
          examples: &ref_275
            example:
              value: '12345'
      responses:
        '200':
          description: Successful request. Returns the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: merchant
                required: *ref_272
                properties: *ref_273
              examples:
                retrievedMerchantPlatforms:
                  summary: Retrieve merchant platform
                  description: Retrieve a merchant platform.
                  value: &ref_930
                    merchantPlatformId: '12345'
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
                    business:
                      name: Example Corp
                      taxId: xxxxx6789
                      organizationType: privateCorporation
                      countryOfOperation: US
                      addresses:
                        - type: legalAddress
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                    processingAccounts:
                      - processingAccountId: '38765'
                        doingBusinessAs: Pizza Doe
                        status: approved
                        link:
                          rel: processingAccount
                          href: https://api.payroc.com/v1/processing-accounts/38765
                          method: get
                        signature:
                          type: requestedViaDirectLink
                          link:
                            rel: agreement
                            href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                            method: get
                    metadata:
                      customerId: '2345'
                    links: []
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /merchant-platforms/{merchantPlatformId}/processing-accounts:
    get:
      tags:
        - Merchant platforms
      summary: List merchant platform's processing accounts
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of processing accounts linked to a merchant platform.  

        **Note**: If you want to view the details of a specific processing account and you have its processingAccountId, use our [Retrieve Processing Account](https://docs.payroc.com/api/schema/boarding/processing-accounts/retrieve) method.  

        Use the query parameters to filter the list of results that we return, for example, to search for only closed processing accounts.  

        To list the processing accounts for a merchant platform, you need its merchantPlatformId. If you don't have the merchantPlatformId, use our [List Merchant Platforms](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list) method to search for the merchant platform.

        Our gateway returns the following information about eahc processing account in the list:  
        - Business details, including its status, time zone, and address.  
        - Owners' details, including their contact details.  
        - Funding, pricing, and processing information, including its pricing model and funding accounts.  

        For each processing account, we also return its processingAccountId, which you can use to perform follow-on actions.  
      operationId: listMerchantLocations
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform that we sent to you when you created the merchant platform.
          required: true
          schema: *ref_274
          examples: *ref_275
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: includeClosed
          in: query
          description: |
            Indicates if you want to return closed processing accounts. This includes processing accounts that have a status of `terminated`, `cancelled`, or `rejected`.  
            **Note**: By default, we return only open processing accounts.  
          schema: &ref_481
            type: boolean
            default: false
          examples: &ref_482
            example:
              value: false
      responses:
        '200':
          description: Successful request. Returns a list of processing accounts associated with the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: paginated processing accounts
                allOf: &ref_756
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of processingAccount objects.
                        items:
                          required: &ref_282
                            - doingBusinessAs
                            - owners
                            - businessType
                            - merchandiseOrServiceSold
                            - timezone
                            - address
                            - contactMethods
                            - processing
                            - funding
                            - pricing
                            - signature
                            - categoryCode
                          type: object
                          properties: &ref_283
                            processingAccountId:
                              type: string
                              readOnly: true
                              description: Unique identifier of the processing account.
                              example: '38765'
                            createdDate:
                              type: string
                              format: date-time
                              readOnly: true
                              description: Date and time that we received your request to create the processing account in our system.
                              example: '2024-07-02T12:00:00.000Z'
                            lastModifiedDate:
                              type: string
                              format: date-time
                              readOnly: true
                              description: Date and time that the processing account was last modified.
                              example: '2024-07-02T12:00:00.000Z'
                            status:
                              type: string
                              description: |
                                Status of the processing account.  
                                - `entered` - We have received information about the account, but we have not yet reviewed it.  
                                - `pending` - We have reviewed the information about the account, but we have not yet approved it.  
                                - `approved` - We have approved the account for processing transactions and funding.  
                                - `subjectTo` - We have approved the account, but we are waiting on further information.  
                                - `dormant` - Account is closed for a period.  
                                - `nonProcessing` - We have approved the account, but the merchant has not yet run a transaction.  
                                - `rejected` - We rejected the application for the processing account.  
                                - `terminated` - Processing account is closed.  
                                - `cancelled` - Merchant withdrew the application for the processing account.  
                              readOnly: true
                              enum:
                                - entered
                                - pending
                                - approved
                                - subjectTo
                                - dormant
                                - nonProcessing
                                - rejected
                                - terminated
                                - cancelled
                              example: entered
                            doingBusinessAs:
                              type: string
                              description: Trading name of the business.
                              maxLength: 100
                              example: Pizza Doe
                            owners:
                              readOnly: true
                              description: Object that contains information about the owners of the business.
                              type: array
                              items:
                                type: object
                                title: owner
                                properties:
                                  ownerId:
                                    description: Unique identifier of the owner.
                                    type: integer
                                    example: 4564
                                  firstName:
                                    description: Owner's first name.
                                    type: string
                                    example: Jane
                                  lastName:
                                    description: Owner's last name.
                                    type: string
                                    example: Doe
                                  link:
                                    description: HATEOAS links to the owners of the processing account.
                                    type: object
                                    properties:
                                      rel:
                                        type: string
                                        description: Indicates the relationship between the current resource and the target resource.
                                        example: owner
                                      href:
                                        type: string
                                        description: URL of the target resource.
                                        example: https://api.payroc.com/v1/owners/1543
                                      method:
                                        type: string
                                        description: HTTP method that you need to use with the target resource.
                                        example: get
                            website:
                              type: string
                              description: Website address of the business.
                              maxLength: 128
                              example: www.example.com
                            businessType:
                              type: string
                              description: Type of business.
                              enum:
                                - retail
                                - restaurant
                                - internet
                                - moto
                                - lodging
                                - notForProfit
                              example: restaurant
                            categoryCode:
                              type: integer
                              format: int32
                              example: 5999
                              description: Merchant Category Code (MCC) for the type of business.
                              maxLength: 4
                            merchandiseOrServiceSold:
                              type: string
                              description: Description of the services or merchandise sold by the business.
                              maxLength: 125
                              example: Pizza
                            businessStartDate:
                              type: string
                              format: date
                              description: Date that the business was established. The format of the value is **YYYY-MM-DD**.
                              example: '2020-01-01'
                            timezone:
                              description: Time zone for the processing account.
                              enum: *ref_276
                              example: America/Chicago
                              maxLength: 28
                            address:
                              type: object
                              oneOf:
                                - required: *ref_0
                                  type: object
                                  title: address
                                  description: Object that contains information about the address.
                                  properties: *ref_1
                            contactMethods:
                              type: array
                              minItems: 1
                              description: Array of contactMethods objects for the processing account. At least one contactMethod must be an email address.
                              items:
                                discriminator: *ref_2
                                oneOf: *ref_3
                            processing:
                              description: Object that contains information about how we process transactions for the account.
                              type: object
                              title: processing
                              required: *ref_277
                              properties: *ref_278
                            funding:
                              type: object
                              description: Object that contains funding information for the processing account, including funding schedules, funding fees, and details of funding accounts.
                              allOf: &ref_755
                                - type: object
                                  description: Object that contains information about the funding schedule of the processing account.
                                  properties: *ref_279
                                - type: object
                                  properties:
                                    fundingAccounts:
                                      description: Object that contains funding accounts associated with the processing account.
                                      minItems: 1
                                      maxItems: 2
                                      readOnly: true
                                      type: array
                                      items:
                                        type: object
                                        title: funding account summary
                                        properties: &ref_754
                                          fundingAccountId:
                                            description: Unique identifier that we assigned to the funding account.
                                            type: integer
                                            readOnly: true
                                            example: 123
                                          status:
                                            description: Status of the funding account.
                                            type: string
                                            readOnly: true
                                            example: pending
                                            enum:
                                              - approved
                                              - rejected
                                              - pending
                                          link:
                                            description: Object that contains HATEOAS links for the funding accounts that are linked to the processing account.
                                            readOnly: true
                                            type: object
                                            properties: *ref_4
                                            required: *ref_5
                                            example: *ref_6
                            pricing:
                              type: object
                              description: Object that HATEOAS links to the pricing information that we apply to the processing account.
                              properties:
                                link:
                                  type: object
                                  description: Object that contains HATEOAS links to the pricing information for the processing account.
                                  properties:
                                    rel:
                                      type: string
                                      example: pricing
                                      description: Indicates the relationship between the current resource and the target resource.
                                    href:
                                      type: string
                                      example: https://api.payroc.com/v1/processing-accounts/38765/pricing
                                      description: URL of the target resource.
                                    method:
                                      type: string
                                      example: get
                                      description: HTTP method that you need to use with the target resource.
                            contacts:
                              readOnly: true
                              description: Array of contact objects.
                              type: array
                              items:
                                type: object
                                title: contact
                                properties:
                                  contactId:
                                    type: integer
                                    description: Unique identifier of the contact.
                                    example: 1543
                                  firstName:
                                    type: string
                                    description: Contact's first name.
                                    example: Jane
                                  lastName:
                                    type: string
                                    description: Contact's last name.
                                    example: Doe
                                  link:
                                    type: object
                                    description: Object that contains HATEOAS links for the contact.
                                    properties:
                                      rel:
                                        type: string
                                        example: contact
                                        description: Relationship to the parent resource.
                                      href:
                                        type: string
                                        example: https://api.payroc.com/v1/contacts/1543
                                        description: Link to the resource.
                                      method:
                                        type: string
                                        example: get
                                        description: HTTP method you can use to retrieve the resource.
                            signature:
                              type: object
                              description: Object that includes information about how we captured the owner's signature.
                              discriminator: *ref_270
                              oneOf: *ref_271
                            metadata:
                              type: object
                              additionalProperties:
                                type: string
                              description: Object that you can send to include custom data in the request. For more information about how to use metadata, go to [Metadata](https://docs.payroc.com/api/metadata).
                              example:
                                customerId: '2345'
                            links:
                              type: array
                              description: Array of useful links related to your request.
                              items:
                                type: object
                                readOnly: true
                                description: Object that contains HATEOAS links for the resource.
                                properties: *ref_4
                                required: *ref_5
                                example: *ref_6
                              example: []
              examples:
                listProcessingAccounts:
                  summary: Paginated list of processing account
                  description: Retrieve processing accounts associated with a merchant platform.
                  value: &ref_931
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms/12345/processing-accounts?before=38765&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms/12345/processing-accounts?after=38766&limit=2
                    data:
                      - processingAccountId: '38765'
                        createdDate: '2024-07-02T12:00:00.000Z'
                        lastModifiedDate: '2024-07-02T12:00:00.000Z'
                        status: approved
                        doingBusinessAs: Pizza Doe
                        owners:
                          - ownerId: 4564
                            firstName: Jane
                            lastName: Doe
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/owners/4564
                              method: get
                        website: www.example.com
                        businessType: restaurant
                        categoryCode: 5999
                        merchandiseOrServiceSold: Food
                        businessStartDate: '2020-01-01'
                        timezone: America/Chicago
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: email
                            value: example-corp@example.com
                          - type: phone
                            value: 123 456 7890
                        processing:
                          merchantId: '444412365478965'
                          transactionAmounts:
                            average: 1000
                            highest: 200000
                          monthlyAmounts:
                            average: 1000000
                            highest: 200000000
                          volumeBreakdown:
                            cardPresentKeyed: 47
                            cardPresentSwiped: 30
                            mailOrTelephone: 3
                            ecommerce: 20
                          isSeasonal: true
                          monthsOfOperation:
                            - jan
                            - feb
                            - mar
                            - nov
                            - dec
                          ach:
                            naics: '5812'
                            previouslyTerminatedForAch: false
                            refunds:
                              writtenRefundPolicy: true
                              refundPolicyUrl: http://www.example.com/refunds
                            estimatedMonthlyTransactions: 1000
                            limits:
                              singleTransaction: 10000000
                              dailyDeposit: 1000
                              monthlyDeposit: 2000
                            transactionTypes:
                              - telephoneInitiatedPayment
                              - webInitiatedPayment
                          cardAcceptance:
                            debitOnly: false
                            hsaFsa: false
                            cardsAccepted:
                              - visa
                              - mastercard
                            specialityCards:
                              americanExpressDirect:
                                enabled: true
                                merchantNumber: '1234567890'
                              electronicBenefitsTransfer:
                                enabled: true
                                fnsNumber: '1234567'
                              other:
                                wexMerchantNumber: '1234567890'
                                voyagerMerchantId: '1234567890'
                                fleetMerchantId: '1234567890'
                        funding:
                          status: enabled
                          fundingSchedule: nextday
                          acceleratedFundingFee: 1999
                          fundingAccounts:
                            - fundingAccountId: 123
                              status: pending
                              link:
                                rel: fundingAccount
                                method: get
                                href: https://api.payroc.com/v1/funding-accounts/123
                        pricing:
                          link:
                            rel: pricing
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/12345/pricing
                        signature:
                          type: requestedViaEmail
                        contacts:
                          - contactId: 1543
                            firstName: Jane
                            lastName: Doe
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/contacts/1543
                              method: get
                      - processingAccountId: '38766'
                        createdDate: '2024-07-02T12:00:00.000Z'
                        lastModifiedDate: '2024-07-02T12:00:00.000Z'
                        status: approved
                        doingBusinessAs: Doe Hot Dogs
                        owners:
                          - ownerId: 4564
                            firstName: Jane
                            lastName: Doe
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/owners/4564
                              method: get
                        website: www.example.com
                        businessType: internet
                        categoryCode: 5999
                        merchandiseOrServiceSold: Food
                        businessStartDate: '2020-01-01'
                        timezone: America/Chicago
                        address:
                          address1: 3 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: email
                            value: jane.doe@example.com
                          - type: phone
                            value: 555 555 3456
                        processing:
                          merchantId: '444412365478966'
                          transactionAmounts:
                            average: 2000
                            highest: 300000
                          monthlyAmounts:
                            average: 2000000
                            highest: 300000000
                          volumeBreakdown:
                            cardPresentKeyed: 0
                            cardPresentSwiped: 0
                            mailOrTelephone: 0
                            ecommerce: 100
                          isSeasonal: true
                        funding:
                          status: enabled
                          fundingSchedule: nextday
                          acceleratedFundingFee: 1999
                          fundingAccounts:
                            - fundingAccountId: 124
                              status: pending
                              link:
                                rel: fundingAccount
                                method: get
                                href: https://api.payroc.com/v1/funding-accounts/124
                        pricing:
                          link:
                            rel: pricing
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/12346/pricing
                        signature:
                          type: requestedViaEmail
                        contacts:
                          - contactId: 1543
                            firstName: Jane
                            lastName: Doe
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/contacts/1543
                              method: get
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    post:
      tags:
        - Merchant platforms
      summary: Create processing account
      description: |
        Use this method to add an additional processing account to a merchant platform.  

        To add a processing account to a merchant platform, you need the merchantPlatformId. Our gateway returned the merchantPlatformId in the response of the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method.  

        **Note**: If you don't have the merchantPlatformId, use our [List Merchant Platforms](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list) method to search for the merchant platform.  

        In the request, include the following information:  
        - Business details, including its business type, time zone, and address.  
        - Owners' details, including their contact details.  
        - Funding, pricing, and processing information, including its pricing model and funding accounts.  

        When you send a successful request, we review the information about the processing account. After we complete our review and approve the processing account, we assign a processingAccountId, which you need to perform follow-on actions.  

        **Note**: You can subscribe to our processingAccount.status.changed event to get notifications when we update the status of a processing account. For more information about how to subscribe to events, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).
      operationId: createProcessingAccount
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform that we sent to you when you created the merchant platform.
          required: true
          schema: *ref_274
          examples: *ref_275
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_280
              type: object
              properties: *ref_281
            examples:
              retrievedMerchantPlatforms:
                summary: Create merchant platform
                description: Create a merchant platform.
                value: &ref_932
                  doingBusinessAs: Pizza Doe
                  owners:
                    - firstName: Jane
                      middleName: Helen
                      lastName: Doe
                      dateOfBirth: '1964-03-22'
                      address:
                        address1: 1 Example Ave.
                        address2: Example Address Line 2
                        address3: Example Address Line 3
                        city: Chicago
                        state: Illinois
                        country: US
                        postalCode: '60056'
                      identifiers:
                        - type: nationalId
                          value: 000-00-4320
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                      relationship:
                        equityPercentage: 51.5
                        title: CFO
                        isControlProng: true
                        isAuthorizedSignatory: false
                  website: www.example.com
                  businessType: restaurant
                  categoryCode: 5999
                  merchandiseOrServiceSold: Pizza
                  businessStartDate: '2020-01-01'
                  timezone: America/Chicago
                  address:
                    address1: 1 Example Ave.
                    address2: Example Address Line 2
                    address3: Example Address Line 3
                    city: Chicago
                    state: Illinois
                    country: US
                    postalCode: '60056'
                  contactMethods:
                    - type: email
                      value: jane.doe@example.com
                  processing:
                    transactionAmounts:
                      average: 5000
                      highest: 10000
                    monthlyAmounts:
                      average: 50000
                      highest: 100000
                    volumeBreakdown:
                      cardPresentKeyed: 47
                      cardPresentSwiped: 30
                      mailOrTelephone: 3
                      ecommerce: 20
                    isSeasonal: true
                    monthsOfOperation:
                      - jan
                      - feb
                    ach:
                      naics: '5812'
                      previouslyTerminatedForAch: false
                      refunds:
                        writtenRefundPolicy: true
                        refundPolicyUrl: www.example.com/refund-poilcy-url
                      estimatedMonthlyTransactions: 3000
                      limits:
                        singleTransaction: 10000
                        dailyDeposit: 200000
                        monthlyDeposit: 6000000
                      transactionTypes:
                        - prearrangedPayment
                        - other
                      transactionTypesOther: anotherTransactionType
                    cardAcceptance:
                      debitOnly: false
                      hsaFsa: false
                      cardsAccepted:
                        - visa
                        - mastercard
                      specialityCards:
                        americanExpressDirect:
                          enabled: true
                          merchantNumber: abc1234567
                        electronicBenefitsTransfer:
                          enabled: true
                          fnsNumber: '6789012'
                        other:
                          wexMerchantNumber: abc1234567
                          voyagerMerchantId: abc1234567
                          fleetMerchantId: abc1234567
                  funding:
                    fundingSchedule: nextday
                    acceleratedFundingFee: 1999
                    dailyDiscount: false
                    fundingAccounts:
                      - type: checking
                        use: creditAndDebit
                        nameOnAccount: Jane Doe
                        paymentMethods:
                          - type: ach
                            value:
                              routingNumber: '123456789'
                              accountNumber: '1234567890'
                        metadata:
                          yourCustomField: abc123
                  pricing:
                    type: intent
                    pricingIntentId: '6123'
                  signature:
                    type: requestedViaDirectLink
                  contacts:
                    - type: manager
                      firstName: Jane
                      middleName: Helen
                      lastName: Doe
                      identifiers:
                        - type: nationalId
                          value: 000-00-4320
                      contactMethods:
                        - type: email
                          value: jane.doe@example.com
                  metadata:
                    customerId: '2345'
      responses:
        '201':
          description: Successful request. We created the processing account.
          content:
            application/json:
              schema:
                required: *ref_282
                type: object
                properties: *ref_283
              examples:
                retrievedMerchantPlatforms:
                  summary: Retrieve merchant platform
                  description: Retrieve a merchant platform.
                  value: &ref_933
                    processingAccountId: '38765'
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
                    status: entered
                    doingBusinessAs: Pizza Doe
                    owners:
                      - ownerId: 4564
                        firstName: Jane
                        lastName: Doe
                        link:
                          rel: owner
                          href: https://api.payroc.com/v1/owners/4564
                          method: get
                    website: www.example.com
                    businessType: restaurant
                    categoryCode: 5999
                    merchandiseOrServiceSold: Pizza
                    businessStartDate: '2020-01-01'
                    timezone: America/Chicago
                    address:
                      address1: 1 Example Ave.
                      address2: Example Address Line 2
                      address3: Example Address Line 3
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    contactMethods:
                      - type: email
                        value: jane.doe@example.com
                    processing:
                      transactionAmounts:
                        average: 5000
                        highest: 10000
                      monthlyAmounts:
                        average: 50000
                        highest: 100000
                      volumeBreakdown:
                        cardPresentKeyed: 47
                        cardPresentSwiped: 30
                        mailOrTelephone: 3
                        ecommerce: 20
                      isSeasonal: true
                      monthsOfOperation:
                        - jan
                        - feb
                      ach:
                        naics: '5812'
                        previouslyTerminatedForAch: false
                        refunds:
                          writtenRefundPolicy: true
                          refundPolicyUrl: www.example.com/refund-poilcy-url
                        estimatedMonthlyTransactions: 3000
                        limits:
                          singleTransaction: 10000
                          dailyDeposit: 200000
                          monthlyDeposit: 6000000
                        transactionTypes:
                          - prearrangedPayment
                          - other
                        transactionTypesOther: anotherTransactionType
                      cardAcceptance:
                        debitOnly: false
                        hsaFsa: false
                        cardsAccepted:
                          - visa
                          - mastercard
                        specialityCards:
                          americanExpressDirect:
                            enabled: true
                            merchantNumber: abc1234567
                          electronicBenefitsTransfer:
                            enabled: true
                            fnsNumber: '6789012'
                          other:
                            wexMerchantNumber: abc1234567
                            voyagerMerchantId: abc1234567
                            fleetMerchantId: abc1234567
                    funding:
                      status: enabled
                      fundingSchedule: nextday
                      acceleratedFundingFee: 1999
                      dailyDiscount: false
                      fundingAccounts:
                        - fundingAccountId: 123
                          status: pending
                          link:
                            rel: fundingAccount
                            method: get
                            href: https://api.payroc.com/v1/funding-accounts/123
                    pricing:
                      link:
                        rel: pricing
                        href: https://api.payroc.com/v1/processing-accounts/12345/pricing
                        method: get
                    contacts:
                      - contactId: 1543
                        firstName: Jane
                        lastName: Doe
                        link:
                          rel: contact
                          href: https://api.payroc.com/v1/contacts/1543
                          method: get
                    signature:
                      type: requestedViaDirectLink
                      link:
                        rel: agreement
                        href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                        method: get
                    metadata:
                      customerId: '2345'
          headers:
            location:
              description: URI reference to the resource.
              schema:
                type: string
        '400':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
                fundingAccountsLimitReached:
                  summary: Funding accounts limit reached
                  description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
                  value: *ref_284
                tooManyControlProngs:
                  summary: Too many control prongs
                  description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
                  value: *ref_285
                noControlProng:
                  summary: No control prong or authorized signatory
                  description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
                  value: *ref_286
                dailyDiscountAndRewardPayConflict:
                  summary: Cannot select Daily Discount and RewardPayChoice at the same time.
                  description: You can't select Daily Discount with a RewardPayChoice pricing plan. To select Daily Discount, choose a different pricing plan.
                  value: *ref_287
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}:
    get:
      tags:
        - Processing accounts
      summary: Retrieve processing account
      description: "Use this method to retrieve information about a specific processing account.  \n\nTo retrieve a processing account, you need its processingAccountId. Our gateway returned the processingAccountId in the response of the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method or the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  \n\n**Note:** If you don't have the processingAccountId, use our [List Merchant Platform's Processing Accounts](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list-processing-accounts) method to search for the processing account.  \n\nOur gateway returns the following information about the processing account:  \n\n-\tBusiness information, including the Merchant Category Code (MCC), status of the processing account, and address of the business.  \n-\tProcessing information, including the merchant’s refund policies and card types that the merchant accepts.  \n-\tFunding information, including funding schedules, funding fees, and details for the merchant’s funding accounts.  \n-\tPricing information, including [HATEOAS](https://docs.payroc.com/knowledge/basic-concepts/hypermedia-as-the-engine-of-application-state-hateoas) links to retrieve the pricing program for the processing account.  \n"
      operationId: getProcessingAccounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: &ref_288
            type: string
          examples: &ref_289
            example:
              value: '38765'
      responses:
        '200':
          description: Successful request. Returns the processing account.
          content:
            application/json:
              schema:
                required: *ref_282
                type: object
                properties: *ref_283
              examples:
                processingAccount:
                  summary: Retrieve processing account
                  description: Retrieve a specific processing account.
                  value: &ref_934
                    processingAccountId: '38765'
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
                    status: approved
                    doingBusinessAs: Pizza Doe
                    owners:
                      - ownerId: 4564
                        firstName: Jane
                        lastName: Doe
                        link:
                          rel: owner
                          href: https://api.payroc.com/v1/owners/1543
                          method: get
                    website: www.example.com
                    businessType: restaurant
                    categoryCode: 5999
                    merchandiseOrServiceSold: Pizza
                    businessStartDate: '2020-01-01'
                    timezone: America/Chicago
                    address:
                      address1: 1 Example Ave.
                      address2: Example Address Line 2
                      address3: Example Address Line 3
                      city: Chicago
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    contactMethods:
                      - type: email
                        value: jane.doe@example.com
                    processing:
                      merchantId: '444412365478965'
                      transactionAmounts:
                        average: 5000
                        highest: 10000
                      monthlyAmounts:
                        average: 50000
                        highest: 100000
                      volumeBreakdown:
                        cardPresentKeyed: 47
                        cardPresentSwiped: 30
                        mailOrTelephone: 3
                        ecommerce: 20
                      isSeasonal: true
                      monthsOfOperation:
                        - jan
                        - feb
                      ach:
                        naics: '5812'
                        previouslyTerminatedForAch: false
                        refunds:
                          writtenRefundPolicy: true
                          refundPolicyUrl: www.example.com/refund-poilcy-url
                        estimatedMonthlyTransactions: 3000
                        limits:
                          singleTransaction: 10000
                          dailyDeposit: 200000
                          monthlyDeposit: 6000000
                        transactionTypes:
                          - prearrangedPayment
                          - other
                        transactionTypesOther: anotherTransactionType
                      cardAcceptance:
                        debitOnly: false
                        hsaFsa: false
                        cardsAccepted:
                          - visa
                          - mastercard
                        specialityCards:
                          americanExpressDirect:
                            enabled: true
                            merchantNumber: abc1234567
                          electronicBenefitsTransfer:
                            enabled: true
                            fnsNumber: '6789012'
                          other:
                            wexMerchantNumber: abc1234567
                            voyagerMerchantId: abc1234567
                            fleetMerchantId: abc1234567
                    funding:
                      status: enabled
                      fundingSchedule: nextday
                      acceleratedFundingFee: 1999
                      dailyDiscount: false
                      fundingAccounts:
                        - fundingAccountId: 123
                          status: pending
                          link:
                            rel: fundingAccount
                            method: get
                            href: https://api.payroc.com/v1/funding-accounts/123
                    pricing:
                      link:
                        rel: pricing
                        href: https://api.payroc.com/v1/processing-accounts/38765/pricing
                        method: get
                    contacts:
                      - contactId: 1543
                        firstName: Jane
                        lastName: Doe
                        link:
                          rel: contact
                          href: https://api.payroc.com/v1/contacts/1543
                          method: get
                    signature:
                      type: requestedViaDirectLink
                      link:
                        rel: agreement
                        href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                        method: get
                    metadata:
                      customerId: '2345'
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/funding-accounts:
    get:
      tags:
        - Processing accounts
      summary: List processing account's funding accounts
      description: Retrieve a list of funding accounts associated with a processing account.
      operationId: listProcessingAccountsFundingAccounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
      responses:
        '200':
          description: Successful request. Returns a list of funding accounts associated with the processing account.
          content:
            application/json:
              schema:
                type: array
                description: |
                  Array of funding account objects for the processing account. Each processing account must have:  

                  - One funding account that accepts both credits to the account and debits from the account.  

                  OR  

                  - Two funding accounts - one for credits to the account, and another account for debits from the account.  
                items:
                  required: *ref_20
                  type: object
                  title: funding account
                  properties: *ref_21
              examples:
                fundingAccounts:
                  summary: List of funding accounts
                  description: List of funding accounts associated with a processing account.
                  value: &ref_935
                    - fundingAccountId: 123
                      createdDate: '2024-07-02T12:00:00.000Z'
                      lastModifiedDate: '2024-07-02T12:00:00.000Z'
                      status: approved
                      type: checking
                      use: creditAndDebit
                      nameOnAccount: Jane Doe
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****6789'
                            accountNumber: '******7890'
                      metadata:
                        yourCustomField: abc123
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/processing-accounts/38765
                          method: get
                    - fundingAccountId: 124
                      createdDate: '2024-07-02T12:00:00.000Z'
                      lastModifiedDate: '2024-07-02T12:00:00.000Z'
                      status: pending
                      type: checking
                      use: creditAndDebit
                      nameOnAccount: Jane Doe
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****8725'
                            accountNumber: '******3491'
                      metadata:
                        yourCustomField: abc123
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/processing-accounts/38765
                          method: get
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/contacts:
    get:
      tags:
        - Processing accounts
      summary: List contacts
      description: |
        Use this method to retrieve a list of contacts for a processing account.    

        **Note:** If you want to view a specific contact and you have their contactId, go to our [Retrieve Contact](https://docs.payroc.com/api/schema/boarding/contacts/retrieve) method.  

        To retrieve a list of contacts for a processing account, you need the processingAccountId. Our gateway returned the processingAccountId in the response of the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method or the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  

        Our gateway returns the following information about each contact:  

        - Name and contact method, including their phone number or mobile number.  
        - Role within the business, for example, if they are a manager.  

        For each contact, we also return a contactId, which you can use to perform follow-on actions.  
      operationId: listProcessingAccountContacts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of contacts associated with the processing account.
          content:
            application/json:
              schema:
                type: object
                title: paginated Contacts
                allOf: &ref_757
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of contact objects.
                        items:
                          type: object
                          title: contact
                          required: *ref_290
                          properties: *ref_291
              examples:
                paginatedContacts:
                  summary: Paginated list of processing account contacts
                  description: List of contacts associated with a processing account.
                  value: &ref_936
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/contacts?before=1543&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/contacts?after=87926&limit=2
                    data:
                      - contactId: 1543
                        type: manager
                        firstName: Jane
                        middleName: Helen
                        lastName: Doe
                        identifiers:
                          - type: nationalId
                            value: xxxxx4320
                        contactMethods:
                          - type: phone
                            value: '2025550164'
                          - type: mobile
                            value: '8445557624'
                          - type: email
                            value: jane.doe@example.com
                      - contactId: 87926
                        type: representative
                        firstName: Fred
                        middleName: Jim
                        lastName: Nerk
                        identifiers:
                          - type: nationalId
                            value: xxxxx9876
                        contactMethods:
                          - type: phone
                            value: '2025550110'
                          - type: mobile
                            value: '85655587451'
                          - type: email
                            value: fred.nerk@example.com
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Identity could not be verified
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/pricing:
    get:
      summary: Get processing account pricing agreement
      description: |
        Use this method to retrieve the pricing agreement that we apply to a processing account.  

        To retrieve the pricing agreement of a processing account, you need the processingAccountId. Our gateway returned the processingAccountId in the response to the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method and [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  

        **Note:** If you don't have the processingAccountId, use our [List Merchant Platform’s Processing Accounts](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list-processing-accounts) method to search for the processing account.  

        Our gateway returns the following information about the pricing agreement that we apply to the processing account:  

        - Base fees, including the annual fee and the fees for each chargeback and retrieval.  
        - Processor fees, including the fees that we apply for processing card and ACH payments.  
        - Gateway fees, including the setup fee and the fees for each transaction.  
        - Service fees, including the fee that we apply if the merchant has signed up to a Hardware Advantage Plan.  
      operationId: retrieveProcessingAccountPricing
      tags:
        - Processing accounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
      responses:
        '200':
          description: Successful request. Returns the pricing agreement for the processing account.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: US pricing agreement version 4.0
                    description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
                    required: &ref_768
                      - country
                      - version
                      - base
                    properties: &ref_769
                      country:
                        type: string
                        description: Two-digit code for the country that the pricing intent applies to. The format follows the [ISO-3166-1](https://www.iso.org/iso-3166-country-codes.html) standard.
                        enum:
                          - US
                      version:
                        type: string
                        description: Version of the MPA.
                        enum:
                          - '4.0'
                      base:
                        type: object
                        title: US base fees
                        description: Object that contains information about U.S. base fees.
                        properties: *ref_292
                        required: *ref_293
                      processor:
                        type: object
                        title: US processor fees
                        description: Object that contains information about U.S. processor fees.
                        properties:
                          card:
                            type: object
                            description: Object that contains the fees for card transactions.
                            discriminator:
                              propertyName: planType
                              mapping:
                                interchangePlus: '#/components/schemas/interchangePlus'
                                interchangePlusTiered3: '#/components/schemas/interchangePlusTiered3'
                                tiered3: '#/components/schemas/tiered3'
                                tiered4: '#/components/schemas/tiered4'
                                tiered6: '#/components/schemas/tiered6'
                                flatRate: '#/components/schemas/flatRate'
                                consumerChoice: '#/components/schemas/consumerChoice'
                                rewardPay: '#/components/schemas/rewardPay'
                                rewardPayChoice: '#/components/schemas/rewardPayChoice'
                            oneOf:
                              - type: object
                                title: Interchange Plus Plan
                                description: Object that contains information about Interchange Plus.
                                properties: *ref_294
                                required: *ref_295
                              - type: object
                                title: Interchange Plus with three tiers
                                description: Object that contains information about Interchange Plus with three tiers.
                                properties: &ref_762
                                  planType:
                                    type: string
                                    description: Type of processing plan.
                                    enum:
                                      - interchangePlusTiered3
                                  fees:
                                    type: object
                                    description: Object that contains information about the fees.
                                    properties:
                                      mastercardVisaDiscover:
                                        description: Object that contains the fees for Mastercard, Visa, and Discover transactions.
                                        type: object
                                        required: *ref_52
                                        properties: *ref_53
                                      amex:
                                        description: Object that contains the fees for American Express transactions.
                                        discriminator:
                                          propertyName: type
                                          mapping:
                                            optBlue: '#/components/schemas/interchangePlusTiered3AmexOptBlue'
                                            direct: '#/components/schemas/interchangePlusTiered3AmexDirect'
                                        oneOf:
                                          - type: object
                                            title: American Express OptBlue
                                            required: &ref_758
                                              - type
                                              - qualifiedRate
                                              - midQualRate
                                              - nonQualRate
                                            properties: &ref_759
                                              type:
                                                type: string
                                                description: Type of American Express program.
                                                enum:
                                                  - optBlue
                                              qualifiedRate:
                                                description: Object that contains the fees for a qualified transaction.
                                                type: object
                                                title: Processor Fee
                                                properties: *ref_43
                                              midQualRate:
                                                description: Object that contains the fees for a mid-qualified transaction.
                                                type: object
                                                title: Processor Fee
                                                properties: *ref_43
                                              nonQualRate:
                                                description: Object that contains the fees for a non-qualified transaction.
                                                type: object
                                                title: Processor Fee
                                                properties: *ref_43
                                          - type: object
                                            title: American Express Direct
                                            required: &ref_760
                                              - type
                                              - transaction
                                            properties: &ref_761
                                              type:
                                                type: string
                                                description: Type of American Express program.
                                                enum:
                                                  - direct
                                              transaction:
                                                description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                allOf:
                                                  - type: integer
                                                    minimum: 0
                                      pinDebit:
                                        type: object
                                        description: Object that contains the fees for PIN-debit transactions.
                                        required: *ref_44
                                        properties: *ref_45
                                      electronicBenefitsTransfer:
                                        type: object
                                        description: Object that contains the fees for EBT transactions.
                                        required: *ref_46
                                        properties: *ref_47
                                      enhancedInterchange:
                                        type: object
                                        description: Object that contains the fees for enhanced interchange services.
                                        required: *ref_48
                                        properties: *ref_49
                                      specialityCards:
                                        type: object
                                        description: Object that contains the fees for speciality cards.
                                        required: *ref_50
                                        properties: *ref_51
                                    required:
                                      - mastercardVisaDiscover
                                required: &ref_763
                                  - planType
                                  - fees
                              - type: object
                                title: Tiered pricing with three tiers
                                description: Object that contains information about tiered pricing with three tiers.
                                properties: *ref_296
                                required: *ref_297
                              - type: object
                                title: Tiered pricing with four tiers
                                description: Object that contains information about tiered pricing with four tiers.
                                properties: *ref_298
                                required: *ref_299
                              - type: object
                                title: Tiered pricing with six tiers
                                description: Object that contains information about tiered pricing with six tiers.
                                properties: *ref_300
                                required: *ref_301
                              - type: object
                                title: Flat Rate Plan
                                description: Object that contains information about Flat Rate.
                                properties: *ref_302
                                required: *ref_303
                              - type: object
                                title: Consumer Choice Plan
                                description: Object that contains information about ConsumerChoice.
                                properties: *ref_304
                                required: *ref_305
                              - type: object
                                title: RewardPay Plan
                                description: Object that contains information about RewardPay.
                                properties: &ref_764
                                  planType:
                                    description: Type of processing plan.
                                    type: string
                                    enum:
                                      - rewardPay
                                  fees:
                                    type: object
                                    description: Object that contains information about the fees.
                                    properties:
                                      monthlySubscription:
                                        description: Fee for the monthly subscription for the processing plan. The value is in the currency's lowest denomination, for example, cents.
                                        allOf:
                                          - type: integer
                                            minimum: 0
                                      cardChargePercentage:
                                        description: Percentage of the total transaction amount that the processor charges the cardholder.
                                        type: number
                                        readOnly: true
                                        default: 3
                                        allOf:
                                          - description: Percentage value up to 2 decimal places.
                                            title: percentage
                                            type: number
                                            format: double
                                            minimum: 0
                                            maximum: 100
                                            example: 1.25
                                      merchantChargePercentage:
                                        description: Percentage of the total transaction amount that the processor charges the merchant.
                                        type: number
                                        readOnly: true
                                        default: 0.9
                                        allOf:
                                          - description: Percentage value up to 2 decimal places.
                                            title: percentage
                                            type: number
                                            format: double
                                            minimum: 0
                                            maximum: 100
                                            example: 1.25
                                      transaction:
                                        description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                        type: integer
                                        readOnly: true
                                        default: 15
                                      tips:
                                        description: Indicates how the merchant manages tips.
                                        type: string
                                        enum:
                                          - noTips
                                          - prompt
                                          - tipAdjust
                                      specialityCards:
                                        type: object
                                        description: Object that contains the fees for speciality cards.
                                        required: *ref_50
                                        properties: *ref_51
                                    required:
                                      - monthlySubscription
                                      - tips
                                required: &ref_765
                                  - planType
                                  - fees
                              - type: object
                                title: RewardPayChoice Plan
                                description: Object that contains information about RewardPayChoice.
                                properties: *ref_306
                                required: *ref_307
                          ach:
                            type: object
                            description: Object that contains the fees for ACH transactions.
                            properties: *ref_308
                      gateway:
                        type: object
                        description: Object that contains information about the gateway fees.
                        title: gateway fees
                        properties: &ref_766
                          fees:
                            type: object
                            description: Object that contains information about the gateway fees.
                            properties:
                              monthly:
                                description: Monthly fee for the gateway. The value is in the currency's lowest denomination, for example, cents.
                                allOf:
                                  - type: integer
                                    minimum: 0
                              setup:
                                description: Fee for setting up your account with the gateway. The value is in the currency's lowest denomination, for example, cents.
                                allOf:
                                  - type: integer
                                    minimum: 0
                              perTransaction:
                                description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                allOf:
                                  - type: integer
                                    minimum: 0
                              perDeviceMonthly:
                                description: Monthly fee for each device. The value is in the currency's lowest denomination, for example, cents.
                                allOf:
                                  - type: integer
                                    minimum: 0
                              additionalServiceMonthly:
                                description: Monthly fee for additional service. The value is in the currency's lowest denomination, for example, cents.
                                allOf:
                                  - type: integer
                                    minimum: 0
                            required:
                              - monthly
                              - setup
                              - perTransaction
                              - perDeviceMonthly
                              - additionalServiceMonthly
                        required: &ref_767
                          - fees
                  - type: object
                    title: US pricing agreement version 5.0
                    description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 5.0.
                    required: *ref_264
                    properties: *ref_265
              examples:
                paginatedContacts:
                  summary: Get processing account pricing agreement
                  description: Retrieve a pricing agreement for a processing account.
                  value: &ref_937
                    country: US
                    version: '5.0'
                    base:
                      addressVerification: 5
                      annualFee:
                        billInMonth: december
                        amount: 9900
                      regulatoryAssistanceProgram: 15
                      pciNonCompliance: 4995
                      merchantAdvantage: 10
                      platinumSecurity:
                        billingFrequency: monthly
                        amount: 1295
                      maintenance: 500
                      minimum: 100
                      voiceAuthorization: 95
                      chargeback: 2500
                      retrieval: 1500
                      batch: 5
                      earlyTermination: 57500
                    processor:
                      card:
                        planType: interchangePlus
                        fees:
                          mastercardVisaDiscover:
                            volume: 1.25
                            transaction: 0
                          amex:
                            type: optBlue
                            volume: 1.25
                            transaction: 0
                          pinDebit:
                            additionalDiscount: 1.25
                            transaction: 0
                            monthlyAccess: 0
                          electronicBenefitsTransfer:
                            transaction: 0
                          enhancedInterchange:
                            enrollment: 0
                            creditToMerchant: 1.25
                          specialityCards:
                            transaction: 0
                      ach:
                        fees:
                          transaction: 50
                          batch: 1000
                          returns: 400
                          unauthorizedReturn: 1999
                          statement: 800
                          monthlyMinimum: 20000
                          accountVerification: 100
                          discountRateUnder10000: 1.25
                          discountRateAbove10000: 1.25
                    gateway:
                      fees:
                        monthly: 0
                        setup: 0
                        perTransaction: 0
                        perDeviceMonthly: 0
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/owners:
    get:
      tags:
        - Processing accounts
      summary: List owners
      description: |
        Use this method to return a list of owners of a processing account.  

        **Note:** If you want to retrieve the details of a specific owner and you have the ownerId, go to our [Retrieve Owner](https://docs.payroc.com/api/schema/boarding/owners/retrieve) method.  

        To list the owners of a processing account, you need its processingAccountId. If you don't have the processingAccountId, use our [List Merchant Platform's Processing Accounts](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list-processing-accounts) method to search for the processing account.  

        Our gateway returns the following information about each owner in the list: 

        - Name, date of birth, and address.  
        - Contact details, including their email address.  
        - Relationship to the business, including whether they are a control prong or authorized signatory, and their equity stake in the business.  
      operationId: listMerchantOwners
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of owners associated with the processing account.
          content:
            application/json:
              schema:
                type: object
                title: paginated Owners
                allOf: &ref_770
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of owner objects.
                        items:
                          type: object
                          title: owner
                          required: *ref_30
                          properties: *ref_31
              examples:
                listProcessingAccountOwners:
                  summary: Paginated list of processing account owners
                  description: Retrieve owners associated with a processing account.
                  value: &ref_938
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/owners?before=4564&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/owners?after=12346&limit=2
                    data:
                      - ownerId: 4564
                        firstName: Jane
                        middleName: Helen
                        lastName: Doe
                        dateOfBirth: '1964-03-22'
                        address:
                          address1: 1 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        identifiers:
                          - type: nationalId
                            value: xxxxx4320
                        contactMethods:
                          - type: email
                            value: jane.doe@example.com
                          - type: phone
                            value: '2025550164'
                        relationship:
                          equityPercentage: 48.5
                          title: CFO
                          isControlProng: true
                          isAuthorizedSignatory: false
                      - ownerId: 12346
                        firstName: Fred
                        middleName: Jim
                        lastName: Nerk
                        dateOfBirth: '1980-01-19'
                        address:
                          address1: 2 Example Ave.
                          address2: Example Address Line 2
                          address3: Example Address Line 3
                          city: Chicago
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        identifiers:
                          - type: nationalId
                            value: xxxxx9876
                        contactMethods:
                          - type: email
                            value: fred.nerk@example.com
                        relationship:
                          equityPercentage: 51.5
                          title: CEO
                          isControlProng: false
                          isAuthorizedSignatory: true
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/reminders:
    post:
      tags:
        - Processing accounts
      summary: Create reminder for processing account
      description: |
        Use this method to prompt a merchant to sign their pricing agreement.  

        You can create a reminder only if you requested the merchant’s signature by email when you created the processing account for the merchant.  

        To create a reminder, you need the processingAccountId. Our gateway returned the processingAccountId in the response of the [Create Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create) method or [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method. 

        **Note:** If you don’t know the processingAccountId, use our [List Merchant Platform’s Processing Accounts](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list-processing-accounts) method to search for the processing account.  

        When you send a successful request, we send an email to the merchant that prompts them to sign their pricing agreement.  
      operationId: createReminder
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
      requestBody:
        content:
          application/json:
            schema:
              discriminator:
                propertyName: type
                mapping:
                  pricingAgreement: '#/components/schemas/pricingAgreementReminder'
              oneOf:
                - description: Object that contains information about the pricing agreement reminder.
                  type: object
                  required: &ref_309
                    - type
                  properties: &ref_310
                    reminderId:
                      type: string
                      description: Unique ID of the reminder.
                      readOnly: true
                      example: '1234567'
                    type:
                      type: string
                      description: Type of reminder.
                      enum:
                        - pricingAgreement
                      example: pricingAgreement
            examples:
              createReminderForProcessingAccount:
                summary: Create reminder for processing account
                description: |
                  When you create a processing account, we send a copy of the pricing agreement to the merchant to sign. You can choose to send them a copy of the pricing agreement by email, or you can generate a link to the pricing agreement.<br/>  
                  If you requested the merchant's signature by email and they don't respond, use our Reminders endpoint to create a reminder and to send another email.<br/>  
                  **Note:** You can use the Reminders endpoint only if you request the merchant's signature by email. If you generate a link to the pricing agreement, you can't use the Reminders endpoint.  
                value: &ref_939
                  type: pricingAgreement
      responses:
        '201':
          description: Successful request. We sent the email to the merchant.
          content:
            application/json:
              schema:
                discriminator:
                  propertyName: type
                  mapping:
                    pricingAgreement: '#/components/schemas/pricingAgreementReminder'
                oneOf:
                  - description: Object that contains information about the pricing agreement reminder.
                    type: object
                    required: *ref_309
                    properties: *ref_310
              examples:
                reminderCreated:
                  summary: Reminder created
                  description: Reminder created.
                  value: &ref_940
                    reminderId: '1234567'
                    type: pricingAgreement
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                badRequest:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                notRequestedByEmail:
                  summary: Not requested by email
                  description: We couldn't resend the email to the merchant because you didn't originally choose to send the information by email.
                  value: &ref_941
                    type: https://docs.payroc.com/api/errors#not-requested-by-email
                    title: Not requested by email
                    status: 400
                    detail: You can use the Reminders endpoint only for documentation that we sent by email.
                contractAlreadySigned:
                  summary: Contract already signed
                  description: We couldn’t resend the email because the merchant already signed the contract.
                  value: &ref_942
                    type: https://docs.payroc.com/api/errors#contract-already-signed
                    title: Contract already signed
                    status: 400
                    detail: The merchant has already signed the contract.
                noPricingAgreementExistsForTheProcessingAccount:
                  summary: No pricing agreement exists for the processing account
                  description: We couldn’t resend the email because there is no pricing agreement for the processing account.
                  value: &ref_943
                    type: https://docs.payroc.com/api/errors#no-pricing-agreement-exists-for-the-processing-account
                    title: No pricing agreement exists
                    status: 400
                    detail: There is no pricing agreement linked to the processing account.
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/terminal-orders:
    post:
      summary: Create terminal order
      description: |
        Use this method to order and configure terminals for a processing account.  

        **Note**: You need the ID of the processing account before you can create an order. If you don't know the processingAccountId, go to the [Retrieve a Merchant Platform](https://docs.payroc.com/api/schema/boarding/merchant-platforms/retrieve) method.  

        In the request, specify the gateway settings, device settings, and application settings for the terminal.  

        In the response, our gateway returns information about the terminal order including its status and terminalOrderId that you can use to [retrieve the terminal order](https://docs.payroc.com/api/schema/boarding/terminal-orders/retrieve).  

        **Note**: You can subscribe to the terminalOrder.status.changed event to get notifications when we update the status of a terminal order. For more information about how to subscribe to events, go to [Events Subscriptions](https://docs.payroc.com/guides/integrate/event-subscriptions).  
      operationId: createTerminalOrder
      tags:
        - Processing accounts
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: &ref_781
                trainingProvider:
                  type: string
                  description: Indicates who provides training to the merchant for the solution.
                  enum: &ref_311
                    - partner
                    - payroc
                  maxLength: 7
                  default: partner
                shipping:
                  type: object
                  description: Object that contains the shipping details for the terminal order. If you don't provide a shipping address, we use the Doing Business As (DBA) address of the processing account.
                  properties: &ref_312
                    preferences:
                      type: object
                      description: Object that contains the shipping preferences for the terminal order.
                      properties:
                        method:
                          type: string
                          description: |
                            Shipping method for the terminal order. Send one of the following values:
                              - `nextDay` - We schedule the order to be delivered the next day.
                              - `ground` - We ship the order with ground shipping.
                          enum:
                            - nextDay
                            - ground
                          default: nextDay
                        saturdayDelivery:
                          type: boolean
                          description: Indicates if we can schedule the terminal order to be delivered on a Saturday.
                          default: false
                    address:
                      type: object
                      description: Object that contains the shipping address for the terminal order.
                      properties:
                        recipientName:
                          type: string
                          description: Name of the person receiving the shipment.
                          maxLength: 100
                        businessName:
                          type: string
                          description: Name of the business receiving the shipment.
                          maxLength: 100
                        addressLine1:
                          type: string
                          description: First line of the shipment address.
                          maxLength: 100
                        addressLine2:
                          type: string
                          description: Second line of the shipment address.
                          maxLength: 100
                        city:
                          type: string
                          description: City of the shipment address.
                          maxLength: 50
                        state:
                          type: string
                          description: State of the shipment address.
                          maxLength: 30
                        postalCode:
                          type: string
                          description: Postal code of the shipment address.
                          maxLength: 9
                        email:
                          type: string
                          description: Contact email address for the shipment.
                          format: email
                          maxLength: 100
                        phone:
                          type: string
                          description: Contact number for the shipment.
                          maxLength: 15
                      required:
                        - recipientName
                        - addressLine1
                        - city
                        - state
                        - postalCode
                        - email
                orderItems:
                  type: array
                  description: Array of order items. Provide a minimum of 1 order item and a maximum of 10 order items.
                  items:
                    type: object
                    properties: &ref_313
                      type:
                        type: string
                        description: Type of item.
                        enum:
                          - solution
                        maxLength: 8
                      solutionTemplateId:
                        type: string
                        description: |
                          Unique identifier of the solution. Send one of the following values:
                          - `Roc Services_DX8000`
                          - `Roc Services_DX4000`
                          - `Roc Services_Web`
                          - `Roc Services_Mobile`
                          - `Payroc DX8000`
                          - `Payroc DX4000`
                          - `Payroc RX7000_Cloud`
                          - `Payroc DX8000_Cloud`
                          - `Payroc DX4000_Cloud`
                          - `Payroc A920Pro`
                          - `Payroc A80`
                          - `Payroc A920Pro_Cloud`
                          - `Payroc A80_Cloud`
                          - `Roc Terminal Plus_N950`
                          - `Roc Terminal Plus_N950-S`
                          - `Roc Terminal Plus_X800`
                          - `Gateway_Payroc`
                          - `VAR_Only_TSYS`
                          - `ROC Services Chipper3X`
                          - `BBPOS Chipper 3X`
                          - `Augusta EMV`
                          - `Ingenico - AXIUM Full Functional Base`
                          - `Pax A920 Charging Base`
                          - `Pax A920 Comms Base`
                          - `A920 Pro Ethernet`
                          - `Axium Bundle`
                        maxLength: 100
                      solutionQuantity:
                        type: number
                        description: Quantity of the solution.
                        format: integer
                        default: 1
                        maximum: 50
                      deviceCondition:
                        type: string
                        description: Indicates if the order contains a new item or a refurbished item.
                        enum:
                          - new
                          - refurbished
                        maxLength: 11
                      solutionSetup:
                        type: object
                        description: Object that contains the settings for the solution, including gateway settings, device settings, and application settings.
                        properties:
                          timezone:
                            type: string
                            description: |
                              Time zone of the terminal. 
                              **Note**: If you don't send a value for this parameter, we use the time zone of the processing account.
                            enum: &ref_771
                              - Pacific/Midway
                              - Pacific/Honolulu
                              - America/Anchorage
                              - America/Los_Angeles
                              - America/Denver
                              - America/Phoenix
                              - America/Chicago
                              - America/Indiana/Indianapolis
                              - America/New_York
                            example: America/Chicago
                            maxLength: 28
                          industryTemplateId:
                            type: string
                            description: |
                              Unique identifier of the industry template you want to apply to the solution. Send one of the following values:
                              - `Retail`
                              - `Restaurant`
                              - `Moto`
                              - `Ecommerce`
                            maxLength: 100
                          gatewaySettings:
                            type: object
                            description: Object that contains the gateway settings for the solution.
                            properties:
                              merchantPortfolioId:
                                type: string
                                description: Unique identifier of the merchant portfolio.
                                maxLength: 100
                              merchantTemplateId:
                                type: string
                                description: Unique identifier of the gateway merchant template.
                                maxLength: 100
                              userTemplateId:
                                type: string
                                description: Unique identifier of the gateway user template.
                                maxLength: 100
                              terminalTemplateId:
                                type: string
                                description: Unique identifier of the gateway terminal template.
                                maxLength: 100
                          applicationSettings:
                            type: object
                            description: Object that contains the application settings for the solution.
                            properties:
                              clerkPrompt:
                                type: boolean
                                description: Indicates if the terminal should prompt the clerk, for example, if the terminal should prompt when the clerk needs to enter an amount on the terminal.
                                example: true
                              security:
                                type: object
                                description: Object that contains the password settings when running specific transaction types.
                                properties:
                                  refundPassword:
                                    type: boolean
                                    description: Indicates if the terminal should prompt the clerk for a password when running a refund.
                                  keyedSalePassword:
                                    type: boolean
                                    description: Indicates if the terminal should prompt the clerk for a password when running a keyed sale.
                                  reversalPassword:
                                    type: boolean
                                    description: Indicates if the terminal should prompt the clerk for a password when cancelling a transaction.
                          deviceSettings:
                            type: object
                            description: Object that contains the device settings if the solution includes a terminal or a peripheral device such as a printer.
                            properties:
                              numberOfMobileUsers:
                                type: number
                                format: integer
                                description: Number of users that we need to set up for mobile solutions.
                              communicationType:
                                type: string
                                description: Method of connection between a terminal or a peripheral device and the host.
                                enum:
                                  - bluetooth
                                  - cellular
                                  - ethernet
                                  - wifi
                                maxLength: 9
                          batchClosure:
                            description: Object that contains information about when and how the terminal closes the batch.
                            discriminator:
                              propertyName: batchCloseType
                              mapping:
                                automatic: '#/components/schemas/automaticBatchClose'
                                manual: '#/components/schemas/manualBatchClose'
                            oneOf:
                              - type: object
                                title: Automatic Batch Close
                                description: Indicates how the merchant batches their transactions.
                                properties: &ref_772
                                  batchCloseType:
                                    type: string
                                    description: |
                                      Indicates how the merchant batches their transactions. Send one of the following:
                                        - `automatic` - Terminal automatically closes the batch each day. To set the time the batch closes, send a value for the batchCloseTime parameter.
                                        - `manual` - Merchant manually closes their batch.
                                    enum:
                                      - automatic
                                  batchCloseTime:
                                    type: string
                                    description: Time that the batch automatically closes.
                                    example: '23:40'
                                    maxLength: 5
                                required: &ref_773
                                  - batchCloseType
                              - type: object
                                title: Manual Batch Close
                                description: Indicates how the merchant batches their transactions.
                                properties: &ref_774
                                  batchCloseType:
                                    type: string
                                    description: |
                                      Indicates how the merchant batches their transactions. Send one of the following:
                                        - `automatic` - Terminal automatically closes the batch each day. To set the time the batch closes, send a value for the batchCloseTime parameter.
                                        - `manual` - Merchant manually closes their batch.
                                    enum:
                                      - manual
                                required: &ref_775
                                  - batchCloseType
                          receiptNotifications:
                            type: object
                            description: Object that indicates if the terminal can send email receipts, text receipts, or both.
                            properties:
                              emailReceipt:
                                description: Indicates if the terminal can send receipts by email.
                                type: boolean
                              smsReceipt:
                                description: Indicates if the terminal can send receipts by text message.
                                type: boolean
                          taxes:
                            type: array
                            description: Array of tax objects that contains the taxes that apply to the merchant's transactions.
                            items:
                              type: object
                              description: Tax that applies to the merchant's transactions.
                              properties:
                                taxRate:
                                  description: Rate of tax that the terminal applies to each transaction.
                                  type: number
                                  format: decimal
                                  minimum: 0
                                  maximum: 99.999
                                taxLabel:
                                  type: string
                                  description: Short description of the tax rate, for example, "Sales Tax".
                                  maxLength: 10
                              required:
                                - taxRate
                                - taxLabel
                            maxItems: 3
                            minItems: 0
                          tips:
                            type: object
                            description: Object that contains the tip options for transactions ran on the terminal.
                            properties:
                              enabled:
                                type: boolean
                                description: Indicates if the terminal can accept tips.
                          tokenization:
                            type: boolean
                            description: Indicates if the terminal can tokenize customer's payment details. For more information about tokenization, go to [Tokenization.](https://docs.payroc.com/knowledge/basic-concepts/tokenization)
                            example: true
                    required: &ref_314
                      - type
                      - solutionTemplateId
                  minItems: 1
                  maxItems: 20
              required: &ref_782
                - orderItems
            examples:
              terminalOrder:
                summary: Terminal order
                description: |
                  Use this method to order and configure terminals for a processing account. When you create an order, you specify the gateway settings, device settings, and application settings for the terminals. 
                  **Note**: You need the ID of the merchant's processing account before you can create an order. If you don't know the processingAccountId, go to [Retrieve a Merchant Platform.](#getMerchantAccounts)
                value: &ref_945
                  trainingProvider: payroc
                  shipping:
                    preferences:
                      method: nextDay
                      saturdayDelivery: true
                    address:
                      recipientName: Recipient Name
                      businessName: Company Ltd
                      addressLine1: 1 Example Ave.
                      addressLine2: Example Address Line 2
                      city: Chicago
                      state: Illinois
                      postalCode: '60056'
                      email: example@mail.com
                      phone: '2025550164'
                  orderItems:
                    - type: solution
                      solutionTemplateId: Roc Services_DX8000
                      solutionQuantity: 1
                      deviceCondition: new
                      solutionSetup:
                        timezone: America/Chicago
                        industryTemplateId: Retail
                        gatewaySettings:
                          merchantPortfolioId: Company Ltd
                          merchantTemplateId: Company Ltd Merchant Template
                          userTemplateId: Company Ltd User Template
                          terminalTemplateId: Company Ltd Terminal Template
                        applicationSettings:
                          clerkPrompt: false
                          security:
                            refundPassword: true
                            keyedSalePassword: false
                            reversalPassword: true
                        deviceSettings:
                          numberOfMobileUsers: 2
                          communicationType: wifi
                        batchClosure:
                          batchCloseType: automatic
                          batchCloseTime: '23:40'
                        receiptNotifications:
                          emailReceipt: true
                          smsReceipt: false
                        taxes:
                          - taxRate: 6
                            taxLabel: Sales Tax
                        tips:
                          enabled: false
                        tokenization: true
      responses:
        '201':
          description: Successful request. We created the terminal order.
          content:
            application/json:
              schema:
                type: object
                properties: &ref_318
                  terminalOrderId:
                    type: string
                    description: Unique identifier that we assigned to the terminal order.
                    example: '12345'
                  status:
                    type: string
                    description: |
                      Status of the terminal order.  

                      **Note**: You can subscribe to our terminalOrder.status.changed event to get notifications when we update the status of a terminal order. For more information about how to subscribe to events, go to [Event Subscriptions](https://docs.payroc.com/guides/integrate/event-subscriptions).  
                    enum:
                      - open
                      - held
                      - dispatched
                      - fulfilled
                      - cancelled
                    example: open
                  trainingProvider: &ref_779
                    type: string
                    description: Indicates who provides training to the merchant for the solution.
                    enum: *ref_311
                    maxLength: 7
                    default: partner
                  shipping: &ref_780
                    type: object
                    description: Object that contains the shipping details for the terminal order. If you don't provide a shipping address, we use the Doing Business As (DBA) address of the processing account.
                    properties: *ref_312
                  orderItems:
                    type: array
                    description: Array of orderItem objects. Provide a minimum of 1 order item and a maximum of 20 order items.
                    items:
                      type: object
                      allOf:
                        - type: object
                          properties: *ref_313
                          required: *ref_314
                        - type: object
                          description: Array of links related to your order items.
                          properties: &ref_778
                            links:
                              type: array
                              items:
                                type: object
                                anyOf:
                                  - type: object
                                    description: Object that contains information about the processing terminal.
                                    properties: &ref_776
                                      processingTerminalId:
                                        type: string
                                        description: Unique identifier that we assigned to the processing terminal.
                                      link:
                                        required:
                                          - href
                                          - rel
                                          - method
                                        type: object
                                        properties:
                                          href:
                                            type: string
                                            description: URL of the target resource.
                                          rel:
                                            type: string
                                            description: Indicates the relationship between the current resource and the target resource.
                                          method:
                                            type: string
                                            description: HTTP method that you need to use with the target resource.
                                        description: Array of links related to your request. For more information about HATEOAS, go to [Hypermedia as the engine of application state](https://docs.payroc.com/knowledge/basic-concepts/hypermedia-as-the-engine-of-application-state-hateoas).
                                    required: &ref_777
                                      - processingTerminalId
                                      - link
                    minItems: 1
                    maxItems: 20
                  createdDate:
                    type: string
                    format: date-time
                    readOnly: true
                    description: Date that we received the terminal order. We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                    example: '2020-09-08T12:00:00.000Z'
                  lastModifiedDate:
                    type: string
                    format: date-time
                    readOnly: true
                    description: Date that the terminal order was last changed.  We return this value in the [ISO-8601](https://www.iso.org/iso-8601-date-and-time-format.html) format.
                    example: '2020-09-09T12:00:00.000Z'
                required: &ref_319
                  - terminalOrderId
                  - status
                  - orderItems
                  - createdDate
                  - lastModifiedDate
              examples:
                terminalOrder:
                  summary: Terminal order
                  description: Terminal order
                  value: &ref_946
                    terminalOrderId: '12345'
                    status: open
                    trainingProvider: payroc
                    shipping:
                      preferences:
                        method: nextDay
                        saturdayDelivery: true
                      address:
                        recipientName: Recipient Name
                        businessName: Company Ltd
                        addressLine1: 1 Example Ave.
                        addressLine2: Example Address Line 2
                        city: Chicago
                        state: Illinois
                        postalCode: '60056'
                        email: example@mail.com
                        phone: '2025550164'
                    orderItems:
                      - type: solution
                        solutionTemplateId: Roc Services_DX8000
                        solutionQuantity: 1
                        deviceCondition: new
                        solutionSetup:
                          timezone: America/Chicago
                          industryTemplateId: Retail
                          gatewaySettings:
                            merchantPortfolioId: Company Ltd
                            merchantTemplateId: Company Ltd Merchant Template
                            userTemplateId: Company Ltd User Template
                            terminalTemplateId: Company Ltd Terminal Template
                          applicationSettings:
                            clerkPrompt: false
                            security:
                              refundPassword: true
                              keyedSalePassword: false
                              reversalPassword: true
                          deviceSettings:
                            numberOfMobileUsers: 2
                            communicationType: wifi
                          batchClosure:
                            batchCloseType: automatic
                            batchCloseTime: '23:40'
                          receiptNotifications:
                            emailReceipt: true
                            smsReceipt: false
                          taxes:
                            - taxRate: 6
                              taxLabel: Sales Tax
                          tips:
                            enabled: false
                          tokenization: true
                    createdDate: '2024-07-02T12:00:00.000Z'
                    lastModifiedDate: '2024-07-02T12:00:00.000Z'
        '400':
          description: Bad request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Not found
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_315
                required: *ref_316
              examples:
                notFound:
                  summary: Not found
                  description: Resource could not be found
                  value: *ref_317
        '500':
          description: An error has occured
          content: *ref_14
    get:
      summary: List terminal orders
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of terminal orders associated with a processing account.  

        **Note:** If you want to view a specific terminal order and you have its terminalOrderId, use our [Retrieve Terminal Order](https://docs.payroc.com/api/schema/boarding/terminal-orders/retrieve) method.  

        Use the query parameters to filter the list of results that we return, for example, to search for terminal orders by their status.  

        To list the terminal orders for a processing account, you need its processingAccountId. If you don't have the processingAccountId, use our [List Merchant Platforms](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list) method to search for a merchant platform and its processing accounts.

        Our gateway returns the following information for each terminal order in the list:  

        - Status of the order  
        - Items in the order  
        - Training provider  
        - Shipping information  

        For each terminal order, we also return its terminalOrderId, which you can use to perform follow-on actions.   
      operationId: listProcessingAccountsTerminalOrders
      tags:
        - Processing accounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
        - name: status
          in: query
          schema: &ref_483
            type: string
            description: Filter terminal orders by status.
            enum:
              - open
              - held
              - dispatched
              - fulfilled
              - cancelled
        - name: fromDateTime
          in: query
          schema: &ref_484
            type: string
            format: date-time
            description: Filter by terminal orders created after a specific date. The date format follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
            example: '2024-09-08T12:00:00.000Z'
        - name: toDateTime
          in: query
          schema: &ref_485
            type: string
            format: date-time
            description: Filter by terminal orders created before a specific date. The date format follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).
            example: '2024-12-08T11:00:00.000Z'
      responses:
        '200':
          description: Successful request. Returns a list of terminal orders associated with the processing account.
          content:
            application/json:
              schema:
                type: array
                description: Array of terminal order objects.
                items:
                  type: object
                  properties: *ref_318
                  required: *ref_319
              examples:
                terminalOrders:
                  summary: Paginated list of Terminal Orders
                  description: Retrieve terminal orders associated with a processing account.
                  value: &ref_944
                    - terminalOrderId: '12345'
                      status: open
                      trainingProvider: payroc
                      shipping:
                        preferences:
                          method: nextDay
                          saturdayDelivery: true
                        address:
                          recipientName: Recipient Name
                          businessName: Company Ltd
                          addressLine1: 1 Example Ave.
                          addressLine2: Example Address Line 2
                          city: Chicago
                          state: Illinois
                          postalCode: '60056'
                          email: example@mail.com
                          phone: '2025550164'
                      orderItems:
                        - type: solution
                          solutionTemplateId: Roc Services_DX8000
                          solutionQuantity: 1
                          deviceCondition: new
                          solutionSetup:
                            timezone: America/Chicago
                            industryTemplateId: Retail
                            gatewaySettings:
                              merchantPortfolioId: Company Ltd
                              merchantTemplateId: Company Ltd Merchant Template
                              userTemplateId: Company Ltd User Template
                              terminalTemplateId: Company Ltd Terminal Template
                            applicationSettings:
                              clerkPrompt: false
                              security:
                                refundPassword: true
                                keyedSalePassword: false
                                reversalPassword: true
                            deviceSettings:
                              numberOfMobileUsers: 2
                              communicationType: wifi
                            batchClosure:
                              batchCloseType: automatic
                              batchCloseTime: '23:40'
                            receiptNotifications:
                              emailReceipt: true
                              smsReceipt: false
                            taxes:
                              - taxRate: 6
                                taxLabel: Sales Tax
                            tips:
                              enabled: false
                            tokenization: true
                          links:
                            - processingTerminalId: '1234001'
                              link:
                                rel: processingTerminal
                                method: get
                                href: https://api.payroc.com/v1/processing-terminals/1234001
                      createdDate: '2024-07-02T12:00:00.000Z'
                      lastModifiedDate: '2024-07-02T12:00:00.000Z'
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-accounts/{processingAccountId}/processing-terminals:
    get:
      summary: List processing terminals
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of processing terminals associated with a processing account.  

        **Note:** If you want to view the details of a specific processing terminal and you have its processingTerminalId, use our [Retrieve Processing Terminal](https://docs.payroc.com/api/schema/boarding/processing-terminals/retrieve) method.  

        To list the terminals for a processing account, you need its processingAccountId. If you don't have the processingAccountId, use our [List Merchant Platforms](https://docs.payroc.com/api/schema/boarding/merchant-platforms/list) method to search for a merchant platform and its processing accounts.   

        Our gateway returns the following information for each processing terminal in the list:  

        - Status indicating whether the terminal is active or inactive.  
        - Configuration settings, including gateway settings and application settings.  
        - Features, receipt settings, and security settings.  
        - Devices that use the processing terminal's configuration.  

        For each processing terminal, we also return its processingTerminalId, which you can use to perform follow-on actions.  
      operationId: listProcessingAccountsProcessingTerminals
      tags:
        - Processing accounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier that we assigned to the processing account.
          required: true
          schema: *ref_288
          examples: *ref_289
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
      responses:
        '200':
          description: Successful request. Returns a list of processing terminals associated with the processing account.
          content:
            application/json:
              schema:
                type: object
                title: paginated Processing Terminals
                allOf: &ref_798
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of processing terminal objects.
                        items:
                          type: object
                          properties: &ref_320
                            processingTerminalId:
                              type: string
                              description: Unique identifier that we assigned to the processing terminal.
                              example: '011234001'
                            status:
                              type: string
                              description: Indicates if the processing terminal is active.
                              enum:
                                - active
                                - inactive
                              maxLength: 8
                            timezone:
                              type: string
                              description: Time zone of the processing terminal.
                              maxLength: 28
                              enum:
                                - Pacific/Midway
                                - Pacific/Honolulu
                                - America/Anchorage
                                - America/Los_Angeles
                                - America/Denver
                                - America/Phoenix
                                - America/Chicago
                                - America/Indiana/Indianapolis
                                - America/New_York
                              example: America/Chicago
                            program:
                              type: string
                              description: Name of the product and its setup.
                              maxLength: 50
                            gateway:
                              description: Object that contains the gateway settings for the solution.
                              discriminator:
                                propertyName: gateway
                                mapping:
                                  payroc: '#/components/schemas/payrocGateway'
                              anyOf:
                                - type: object
                                  description: Object that contains the gateway settings for the solution.
                                  properties: &ref_783
                                    gateway:
                                      type: string
                                      description: Name of the gateway that processes the transactions.
                                      enum:
                                        - payroc
                                    terminalTemplateId:
                                      type: string
                                      description: Unique identifier of the gateway terminal template.
                                      maxLength: 50
                                  required: &ref_784
                                    - gateway
                                    - terminalTemplateId
                            batchClosure:
                              description: Object that contains information about when and how the terminal closes the batch.
                              discriminator:
                                propertyName: batchCloseType
                                mapping:
                                  automatic: '#/components/schemas/schemas-automaticBatchClose'
                                  manual: '#/components/schemas/schemas-manualBatchClose'
                              oneOf:
                                - type: object
                                  title: Automatic Batch Close
                                  description: Indicates how authorized transactions will be batched for settlement
                                  properties: &ref_785
                                    batchCloseType:
                                      type: string
                                      description: Indicates whether batch settlement of authorized transactions are automatically or manually closed
                                      enum:
                                        - automatic
                                    batchCloseTime:
                                      type: string
                                      description: The time, within the specified timezone, at which the batch automatically closes
                                      example: '23:40'
                                      maxLength: 5
                                  required: &ref_786
                                    - batchCloseType
                                    - batchCloseTime
                                - type: object
                                  title: Manual Batch Close
                                  description: Indicates how authorized transactions will be batched for settlement
                                  properties: &ref_787
                                    batchCloseType:
                                      type: string
                                      description: Indicates whether batch settlement of authorized transactions are automatically or manually closed
                                      enum:
                                        - manual
                                  required: &ref_788
                                    - batchCloseType
                            applicationSettings:
                              type: object
                              description: Object that contains the application settings for the solution.
                              properties:
                                invoiceNumberPrompt:
                                  type: boolean
                                  description: Indicates if the terminal should prompt the clerk to provide an invoice number with a sale.
                                clerkPrompt:
                                  type: boolean
                                  description: Indicates if the terminal should prompt the clerk, for example, if the terminal should prompt when the clerk needs to enter an amount on the terminal.
                            features:
                              type: object
                              description: Object that contains the feature settings for the terminal.
                              properties:
                                tips:
                                  description: Object that contains the tip settings for the processing terminal.
                                  discriminator:
                                    propertyName: enabled
                                    mapping:
                                      'true': '#/components/schemas/tipProcessingEnabled'
                                      'false': '#/components/schemas/tipProcessingDisabled'
                                  anyOf:
                                    - type: object
                                      description: Tip settings
                                      properties: &ref_789
                                        enabled:
                                          type: boolean
                                          description: Indicates if the terminal can accept tips.
                                        tipPrompt:
                                          type: boolean
                                          description: Indicates if the terminal prompts for tips.
                                        tipAdjust:
                                          type: boolean
                                          description: Indicates if a clerk can adjust a tip after the customer completes the sale.
                                        suggestedTips:
                                          type: object
                                          description: Object that contains up to three tip amounts that the terminal displays during a sale.
                                          properties:
                                            enabled:
                                              type: boolean
                                              description: Indicates if the terminal displays tip amounts during a sale.
                                            tipPercentages:
                                              type: array
                                              description: Array of the tip amounts that the terminal displays during a sale.
                                              items:
                                                type: string
                                              maxItems: 3
                                      required: &ref_790
                                        - enabled
                                    - type: object
                                      description: Tip settings
                                      properties: &ref_791
                                        enabled:
                                          type: boolean
                                          description: Indicates if the terminal can accept tips.
                                      required: &ref_792
                                        - enabled
                                enhancedProcessing:
                                  type: object
                                  description: Object that contains details about level two and level three transactions.
                                  properties:
                                    enabled:
                                      type: boolean
                                      description: Indicates if the terminal can run level two and level three transactions.
                                    transactionDataLevel:
                                      type: string
                                      description: Indicates if the terminal supports level two or level three transactions.
                                      enum:
                                        - level2
                                        - level3
                                      maxLength: 6
                                    shippingAddressMode:
                                      type: string
                                      description: |
                                        Indicates the address information that the clerk must provide to qualify for level two or level three data. The value is one of the following:
                                        - `fullAddress` - The clerk must provide the full address for the transaction to qualify.
                                        - `postalCode` - The clerk must provide a postal code for the transaction to qualify.
                                      enum:
                                        - fullAddress
                                        - postalCode
                                      maxLength: 11
                                  required:
                                    - enabled
                                ebt:
                                  description: Object that contains details about EBT transactions.
                                  discriminator:
                                    propertyName: enabled
                                    mapping:
                                      'true': '#/components/schemas/ebtEnabled'
                                      'false': '#/components/schemas/ebtDisabled'
                                  anyOf:
                                    - type: object
                                      description: Object that contains details about EBT transactions.
                                      properties: &ref_793
                                        enabled:
                                          type: boolean
                                          description: Indicates if the terminal accepts Electronic Benefit Transfer (EBT) transactions.
                                        ebtType:
                                          type: string
                                          description: Indicates the type of EBT that the terminal supports.
                                          enum:
                                            - foodStamp
                                            - cash
                                            - both
                                          maxLength: 9
                                        fnsNumber:
                                          type: string
                                          description: Food and Nutritional Service (FNS) number that the government assigns to the merchant to allow them to accept Supplemental Nutrition Assistance Program (SNAP) transactions.
                                          maxLength: 7
                                      required: &ref_794
                                        - enabled
                                        - ebtType
                                    - type: object
                                      description: Object that contains details about EBT transactions.
                                      properties: &ref_795
                                        enabled:
                                          type: boolean
                                          description: Indicates if the terminal accepts Electronic Benefit Transfer (EBT) transactions.
                                      required: &ref_796
                                        - enabled
                                pinDebitCashback:
                                  type: boolean
                                  description: Indicates if the terminal prompts for cashback on PIN debit transactions.
                                recurringPayments:
                                  type: boolean
                                  description: Indicates if the terminal can run repeat payments. For more information about repeat payments, go to [Payment Plans](/guides/integrate/repeat-payments).
                                paymentLinks:
                                  type: object
                                  description: Object that contains details about payment links.
                                  properties:
                                    enabled:
                                      type: boolean
                                      description: Indicates if the terminal supports payment links.
                                    logoUrl:
                                      type: string
                                      description: URL of the logo image that the merchant wants to display in their payment link email.
                                      maxLength: 200
                                    footerNotes:
                                      type: string
                                      description: String that the merchant wants to display on the footer of their payment link email.
                                      maxLength: 2000
                                  required:
                                    - enabled
                                preAuthorizations:
                                  type: boolean
                                  description: Indicates if the terminal can run pre-authorizations.
                                offlinePayments:
                                  type: boolean
                                  description: Indicates if the terminal can accept payments when it can't connect to the gateway. For more information about offline processing, go to [Offline Processing](/knowledge/card-payments/offline-processing).
                              required:
                                - enhancedProcessing
                                - pinDebitCashback
                                - ebt
                            taxes:
                              type: array
                              description: Array of tax objects that contains the taxes that apply to the merchant's transactions.
                              items:
                                type: object
                                description: Object that contains a tax rate with a short description of the tax rate.
                                properties:
                                  taxRate:
                                    description: Rate of tax that the terminal applies to each transaction.
                                    type: number
                                    format: decimal
                                    minimum: 0
                                    maximum: 99.999
                                  taxLabel:
                                    type: string
                                    description: Short description of the tax rate, for example, "Sales Tax".
                                    maxLength: 10
                                required:
                                  - taxRate
                                  - taxLabel
                              maxItems: 3
                              minItems: 0
                            security:
                              type: object
                              description: Object that contains the tokenization settings and AVS settings for the terminal.
                              properties:
                                tokenization:
                                  type: boolean
                                  description: Indicates if the terminal can tokenize customer's payment details. For more information about tokenization, go to [Tokenization](/knowledge/basic-concepts/tokenization).
                                avsPrompt:
                                  type: boolean
                                  description: Indicates if the terminal should prompt for Address Verification Service (AVS) details when running a transaction.
                                avsLevel:
                                  type: string
                                  description: Indicates the level of AVS details that the terminal should prompt for.
                                  enum:
                                    - fullAddress
                                    - postalCode
                                  maxLength: 11
                                cvvPrompt:
                                  type: boolean
                                  description: Indicates if the terminal should prompt for a Card Verfication Value (CVV) when running a transaction.
                              required:
                                - tokenization
                                - avsPrompt
                                - cvvPrompt
                            receiptNotifications:
                              type: object
                              description: Object that indicates if the terminal can send email receipts or text receipts.
                              properties:
                                emailReceipt:
                                  type: boolean
                                  description: Indicates if the terminal can send receipts by email.
                                smsReceipt:
                                  type: boolean
                                  description: Indicates if the terminal can send receipts by text message.
                            devices:
                              type: array
                              description: Array of device objects. Each object contains information about a device using the processing terminal's configuration.
                              items:
                                type: object
                                description: Object that contains the details of the device.
                                properties:
                                  manufacturer:
                                    type: string
                                    description: Manufacturer of the terminal.
                                    maxLength: 100
                                  model:
                                    type: string
                                    description: Model of the terminal.
                                    maxLength: 100
                                  serialNumber:
                                    type: string
                                    description: Serial number of the terminal.
                                    maxLength: 45
                                  communicationType:
                                    type: string
                                    description: Indicates how the device communicates with its host.
                                    enum: &ref_797
                                      - bluetooth
                                      - cellular
                                      - ethernet
                                      - wifi
                                    maxLength: 9
                                required:
                                  - manufacturer
                                  - model
                                  - serialNumber
                              maxItems: 1
                              minItems: 0
                          required: &ref_321
                            - processingTerminalId
                            - status
                            - timezone
                            - applicationSettings
                            - batchClosure
                            - features
              examples:
                processingTerminals:
                  summary: Paginated list of processing terminals
                  description: List of processing terminals associated with a processing account.
                  value: &ref_947
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/processing-terminals?before=1543&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/38765/processing-terminals?after=87926&limit=2
                    data:
                      - processingAccountId: '38765'
                        status: active
                        timezone: Pacific/Midway
                        program: Payroc Cloud
                        gateway:
                          gateway: payroc
                          terminalTemplateId: Roc Services_DX8000
                        batchClosure:
                          batchCloseType: automatic
                          batchCloseTime: '23:40'
                        applicationSettings:
                          clerkPrompt: false
                          invoiceNumberPrompt: true
                        features:
                          tips:
                            enabled: false
                            tipPrompt: false
                            tipAdjust: true
                            suggestedTips:
                              enabled: true
                              tipPercentages:
                                - 15
                                - 20
                          enhancedProcessing:
                            enabled: true
                            transactionDataLevel: level2
                            shippingAddressMode: fullAddress
                          ebt:
                            enabled: true
                            ebtType: foodStamp
                            fnsNumber: '1234567890'
                          pinDebitCashback: false
                          recurringPayments: true
                          paymentLinks:
                            enabled: true
                            logoUrl: LogoPayLink
                            footerNotes: FooterNotesPayLink
                          preAuthorizations: true
                          offlinePayments: true
                          security:
                            tokenization: false
                            avsPrompt: true
                            avsLevel: fullAddress
                            cvvPrompt: true
                          receiptNotifications:
                            emailReceipt: true
                            smsReceipt: false
                          taxes:
                            - taxRate: 6
                              taxLabel: Sales Tax
                          devices:
                            - manufacturer: Ingenico
                              model: Axium Dx4000 Tsys
                              serialNumber: DX400-1234
                              communicationType: bluetooth
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}:
    get:
      tags:
        - Processing terminals
      summary: Retrieve processing terminal
      description: |
        **Important:** You can retrieve a processing terminal only if the terminal order was created using the Payroc API.

        Use this method to retrieve information about a processing terminal.  

        To retrieve a processing terminal, you need its processingTerminalId. Our gateway returned the processingTerminalId in the response of the [Create Terminal Order](https://docs.payroc.com/api/schema/boarding/processing-accounts/create-terminal-order) method.  

        **Note:** If you don't have the processingTerminalId, use our [Retrieve Terminal Order](https://docs.payroc.com/api/schema/boarding/terminal-orders/retrieve) method or our [List Processing Terminals](https://docs.payroc.com/api/schema/boarding/processing-accounts/list-processing-terminals) method to search for the processing terminal.  

        Our gateway returns the following information about the processing terminal:  

        - Status indicating whether the terminal is active or inactive.  
        - Configuration settings, including gateway settings and application settings.  
        - Features, receipt settings, and security settings.  
        - Devices that use the processing terminal's configuration.  
          
      operationId: getProcessingTerminal
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      responses:
        '200':
          description: Successful request. Returns the processing terminal.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_320
                required: *ref_321
              examples:
                processingTerminals:
                  summary: Retrieve processing terminal
                  description: Retrieve a specific processing terminal.
                  value: &ref_948
                    processingAccountId: '38765'
                    status: active
                    timezone: Pacific/Midway
                    program: Payroc Cloud
                    gateway:
                      gateway: payroc
                      terminalTemplateId: Roc Services_DX8000
                    batchClosure:
                      batchCloseType: automatic
                      batchCloseTime: '23:40'
                    applicationSettings:
                      clerkPrompt: false
                      invoiceNumberPrompt: true
                    features:
                      tips:
                        enabled: false
                        tipPrompt: false
                        tipAdjust: true
                        suggestedTips:
                          enabled: true
                          tipPercentages:
                            - 15
                            - 20
                      enhancedProcessing:
                        enabled: true
                        transactionDataLevel: level2
                        shippingAddressMode: fullAddress
                      ebt:
                        enabled: true
                        ebtType: foodStamp
                        fnsNumber: '1234567890'
                      pinDebitCashback: false
                      recurringPayments: true
                      paymentLinks:
                        enabled: true
                        logoUrl: LogoPayLink
                        footerNotes: FooterNotesPayLink
                      preAuthorizations: true
                      offlinePayments: true
                      security:
                        tokenization: false
                        avsPrompt: true
                        avsLevel: fullAddress
                        cvvPrompt: true
                      receiptNotifications:
                        emailReceipt: true
                        smsReceipt: false
                      taxes:
                        - taxRate: 6
                          taxLabel: Sales Tax
                      devices:
                        - manufacturer: Ingenico
                          model: Axium Dx4000 Tsys
                          serialNumber: DX400-1234
                          communicationType: bluetooth
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /processing-terminals/{processingTerminalId}/host-configurations:
    get:
      tags:
        - Processing terminals
      summary: Retrieve host processor configuration
      description: |
        Use this method to retrieve the host processor configuration of a processing terminal. Integrate with this method only if you use your own gateway and want to validate the processor configuration.  

        Our gateway returns the configuration settings for the merchant and the payment terminal.
      operationId: getProcessingTerminalHostConfiguration
      parameters:
        - name: processingTerminalId
          in: path
          required: true
          description: Unique identifier that we assigned to the terminal.
          schema: *ref_95
          examples: *ref_96
      responses:
        '200':
          description: Successful request. Returns the host configuration of the processing terminal.
          content:
            application/json:
              schema:
                type: object
                description: Object that contains the terminal's host configuration.
                properties: &ref_801
                  processingTerminalId:
                    type: string
                    description: Unique identifier that our gateway assigned to the terminal.
                    example: '0123451001'
                  processingAccountId:
                    type: string
                    description: Unique identifier that we assigned to the processing account.
                    example: '23451'
                  configuration:
                    description: Object that contains the host processor configuration.
                    discriminator:
                      propertyName: processor
                      mapping:
                        tsys: '#/components/schemas/tsys'
                    oneOf:
                      - type: object
                        properties: &ref_799
                          processor:
                            type: string
                            description: Name of the host processor.
                            example: tsys
                            enum:
                              - tsys
                            maxLength: 50
                          merchant:
                            type: object
                            description: Object that contains the configuration settings for the merchant.
                            properties:
                              posMid:
                                type: string
                                description: Unique identifier that the host processor assigned to the merchant.
                                maxLength: 12
                                example: '123456789101'
                              chainNumber:
                                type: string
                                description: Number that represents the merchant's chain of locations or stores.
                                maxLength: 6
                                example: '222222'
                              settlementAgent:
                                type: string
                                description: Unique identifier of the merchant's settlement agent.
                                maxLength: 4
                                example: '0001'
                              abaNumber:
                                type: string
                                description: Number that identifies the merchant in direct debit requests.
                                maxLength: 12
                                example: '967854108'
                              binNumber:
                                type: string
                                description: Unique identifier of the merchant's bank.
                                maxLength: 6
                                example: '888888'
                              agentBankNumber:
                                type: string
                                description: Number of the merchant's bank if it processes transactions on behalf of another entity.
                                maxLength: 6
                                example: '000001'
                              reimbursementAttribute:
                                type: string
                                description: Indicates if the merchant can accept interlink debit cards.
                                maxLength: 1
                                example: Z
                              locationNumber:
                                type: string
                                description: Location of the merchant's information.
                                maxLength: 6
                                example: '000001'
                            required:
                              - posMid
                              - chainNumber
                              - binNumber
                          terminal:
                            type: object
                            description: Object that contains the configuration settings for the terminal.
                            properties:
                              terminalId:
                                type: string
                                description: Unique identifier that the host processor assigned to the terminal.
                                maxLength: 8
                                example: V500000
                              terminalNumber:
                                type: string
                                description: Unique identifier of the terminal at the merchant's site.
                                maxLength: 4
                                example: '1111'
                              authenticationCode:
                                type: string
                                description: Authenticates the terminal's identity with the host processor.
                                minLength: 6
                                maxLength: 10
                                example: A1B2C3
                              sharingGroups:
                                type: string
                                description: Indicates the direct debit networks and EBT networks that the terminal can use.
                                maxLength: 26
                                example: 3E7HULY8NQWZG
                              motoAllowed:
                                type: boolean
                                description: Indicates if the terminal can run Mail Order/Telephone Order (MOTO) transactions.
                              internetAllowed:
                                type: boolean
                                description: Indicates if the terminal can run e-Commerce transactions.
                              cardPresentAllowed:
                                type: boolean
                                description: Indicates if the terminal can run card present transactions.
                            required:
                              - terminalId
                              - terminalNumber
                        required: &ref_800
                          - processor
                          - merchant
                          - terminal
                required: &ref_802
                  - processingTerminalId
                  - configuration
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /contacts/{contactId}:
    get:
      tags:
        - Contacts
      summary: Retrieve contact
      description: "Use this method to retrieve details about a contact.  \n\nTo retrieve a contact, you need its contactId. Our gateway returned the contactId in the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  \n\n**Note:** If you don't have the contactId, use the [List Contacts](https://docs.payroc.com/api/schema/boarding/processing-accounts/list-contacts) method to search for the contact.  \n\nOur gateway returns the following information about a contact:  \n\n-\tName and contact method, including their phone number or mobile number.  \n-\tRole within the business, for example, if they are a manager. \n"
      operationId: getContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          schema: &ref_322
            type: integer
          examples: &ref_323
            example:
              value: 1543
      responses:
        '200':
          description: Successful request. Returns the requested contact.
          content:
            application/json:
              schema:
                type: object
                title: contact
                required: *ref_290
                properties: *ref_291
              examples:
                contact:
                  summary: Contact object
                  description: Contact object
                  value: &ref_949
                    contactId: 1543
                    type: manager
                    firstName: Jane
                    middleName: Helen
                    lastName: Doe
                    identifiers:
                      - type: nationalId
                        value: xxxxx4320
                    contactMethods:
                      - type: email
                        value: jane.doe@example.com
                      - type: phone
                        value: '2025550164'
                      - type: mobile
                        value: '8445557624'
                      - type: fax
                        value: '2025550110'
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Contacts
      summary: Update contact
      description: "Use this method to update a contact of a processing account.  \n\nTo update a contact, you need its contactId. Our gateway returned the contactId in the response of the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  \n\n**Note:** If you don't have the contactId, use our [List Contacts](https://docs.payroc.com/api/schema/boarding/processing-accounts/list-contacts) method to search for the contact.  \n\nYou can update the following details about a contact:  \n\n-\tFirst name and last name.  \n-\tContact details, including their phone number or mobile number.  \n-\tIdentification details, including their identification type and number.  \n-\tRole within the business, for example, if they are a manager.  \n"
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          schema: *ref_322
          examples: *ref_323
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: contact
              required: *ref_290
              properties: *ref_291
            examples:
              updateContact:
                summary: Update contact
                description: Update a specific contact.
                value: &ref_950
                  type: manager
                  firstName: Jane
                  middleName: Helen
                  lastName: Doe
                  identifiers:
                    - type: nationalId
                      value: 000-00-4320
                  contactMethods:
                    - type: email
                      value: jane.doe@example.com
      responses:
        '204':
          description: Successful request. We updated the contact.
        '400':
          description: Validation errors.
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Contacts
      summary: Delete contact
      description: |
        Use this method to delete a contact associated with a processing account.  

        To delete a contact, you need their contactId. Our gateway returned the contactId in the response of the [Create Processing Account](https://docs.payroc.com/api/schema/boarding/merchant-platforms/create-processing-account) method.  

        **Note:** If you don’t have the contactId, use our [Retrieve Processing Account](https://docs.payroc.com/api/schema/boarding/processing-accounts/retrieve) method or our [List Contacts](https://docs.payroc.com/api/schema/boarding/processing-accounts/list-contacts) method to search for the contact.  
      operationId: deleteContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          schema: *ref_322
          examples: *ref_323
      responses:
        '204':
          description: Successful request. We deleted the contact.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /event-subscriptions:
    get:
      tags:
        - Event Subscriptions
      summary: List event subscriptions
      description: |
        Use this method to retrieve a [paginated](https://docs.payroc.com/api/pagination) list of event subscriptions that are linked to your ISV account.  

        **Note:** If you want to view a specific event subscription and you have its id, use our [Retrieve Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/retrieve) method.  

        Use query parameters to filter the list of results that we return, for example, to search for subscriptions with a specific status or an event type.  

        Our gateway returns the following information about each subscription in the list:  
        - Event types that you have subscribed to.  
        - Whether you have enabled notifications for the subscription.  
        - How we contact you when an event occurs, including the endpoint that send notifications to.  
        - If there are any issues when we try to send you a notification, for example, if we can't contact your endpoint.  

        For each event subscription, we also return its id, which you can use to perform follow-on actions.  
      operationId: listEventSubscriptions
      parameters:
        - name: status
          in: query
          description: Filter event subscriptions by subscription status.
          schema: &ref_486
            type: string
            enum:
              - registered
              - suspended
              - failed
          examples: &ref_487
            example:
              value: registered
        - name: event
          in: query
          description: Filter event subscriptions by an event type. For a list of event types, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).
          schema: &ref_488
            type: string
          examples: &ref_489
            example:
              value: processingAccount.status.changed
      responses:
        '200':
          description: Successful request. Returns a list of event subscriptions.
          content:
            application/json:
              schema:
                type: object
                title: paginated event subscriptions
                allOf: &ref_807
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of eventSubscription objects.
                        items:
                          type: object
                          title: Event Subscription
                          properties: &ref_324
                            id:
                              type: number
                              description: Unique identifier that we assigned to the event subscription.
                              readOnly: true
                              example: 2565435189324
                            enabled:
                              type: boolean
                              description: |
                                Indicates if we should notify you when the event occurs. The value is one of the following:  
                                - `true` - We notify you when the event occurs.  
                                - `false` - We don't notify you when the event occurs.  
                              example: true
                            status:
                              type: string
                              description: |
                                Status of the subscription. We return one of the following values:  
                                - `registered` - You have set up the subscription, and we will notify you when an event occurs.  
                                - `suspended` - We have deactivated the event subscription, and we won't notify you when an event occurs.  
                                - `failed` - We couldn't contact your URI endpoint. We email the supportEmailAddress.  
                              enum:
                                - registered
                                - suspended
                                - failed
                              readOnly: true
                              example: registered
                            eventTypes:
                              type: array
                              description: Array of events that you want to subscribe to. For a list of events, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).
                              items:
                                type: string
                                minLength: 1
                              example:
                                - processingAccount.status.changed
                            notifications:
                              type: array
                              description: Array of notifications objects. Each object contains information about how we contact you when an event occurs.
                              items:
                                type: object
                                title: Notification method
                                oneOf: &ref_805
                                  - type: object
                                    properties: &ref_803
                                      type:
                                        type: string
                                        description: |
                                          Type of notification method.  
                                          **Note:** To receive notifications by webhook, your server must be able to handle POST requests.  
                                        enum:
                                          - webhook
                                        example: webhook
                                      uri:
                                        type: string
                                        description: Public endpoint that we send notifications to.
                                        example: https://my-server/notification/endpoint
                                      secret:
                                        type: string
                                        description: |
                                          String that we send with a notification so that you can ensure it is a valid notification from our gateway. We include the value in the Payroc-Secret header parameter in the webhook call.  
                                          **Note:** In the response, we truncate the secret to the last 12 characters and mask the first 6 characters.  
                                        minLength: 16
                                        maxLength: 64
                                        example: aBcD1234eFgH5678iJkL9012mNoP3456
                                      supportEmailAddress:
                                        type: string
                                        description: Email address of the person or team that we contact if we can't deliver notifications.
                                    required: &ref_804
                                      - type
                                      - uri
                                      - secret
                                      - supportEmailAddress
                                discriminator: &ref_806
                                  propertyName: type
                                  mapping:
                                    webhook: '#/components/schemas/webhook'
                            metadata:
                              type: object
                              description: Object that you can send to include custom data in the request. For more information about how to use metadata, go to [Metadata](https://docs.payroc.com/api/metadata).
                              example:
                                yourCustomField: abc123
                          required: &ref_325
                            - enabled
                            - eventTypes
                            - notifications
              examples:
                paginatedList:
                  summary: Paginated list of Event subscriptions
                  description: Example of a paginated list of event subscriptions
                  value: &ref_951
                    limit: 10
                    count: 2
                    hasMore: false
                    links:
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/event-subscriptions?after=10&limit=10
                    data:
                      - id: 2565435189324
                        enabled: true
                        status: registered
                        eventTypes:
                          - processingAccount.status.changed
                        notifications:
                          - type: webhook
                            uri: https://my-service/notification/endpoint
                            secret: '**********NoP3456'
                            supportEmailAddress: jane.doe@example.com
                        metadata:
                          yourCustomField: abc123
                      - id: 2565435189325
                        enabled: true
                        status: registered
                        eventTypes:
                          - processingAccount.riskStatus.changed
                        notifications:
                          - type: webhook
                            uri: https://my-service/notification/endpoint
                            secret: '**********NoP3456'
                            supportEmailAddress: jane.doe@example.com
                        metadata:
                          yourCustomField: abc123
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    post:
      tags:
        - Event Subscriptions
      summary: Create event subscription
      description: |
        Use this method to create an event subscription that we use to notify you when an event occurs, for example, when we change the status of a processing account.  

        In the request, include the events that you want to subscribe to and the public endpoint that we send event notifications to. For a complete list of events that you can subscribe to, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).  

        In the response, our gateway returns the id of the event subscription, which you can use to perform follow-on actions.  
      operationId: createEventSubscription
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Event Subscription
              properties: *ref_324
              required: *ref_325
            examples:
              createEventSubscription:
                summary: Create event subscription
                description: Create an event subscription
                value: &ref_952
                  enabled: true
                  eventTypes:
                    - processingAccount.status.changed
                  notifications:
                    - type: webhook
                      uri: https://my-server/notification/endpoint
                      secret: aBcD1234eFgH5678iJkL9012mNoP3456
                      supportEmailAddress: jane.doe@example.com
                  metadata:
                    yourCustomField: abc123
      responses:
        '201':
          description: Successful request. We created the event subscription.
          headers:
            Location:
              description: URI reference to created resource
              schema: &ref_963
                type: string
          content:
            application/json:
              schema:
                type: object
                title: Event Subscription
                properties: *ref_324
                required: *ref_325
              examples:
                createdEventSubscription:
                  summary: Event subscription created
                  description: Example of a created event subscription.
                  value: &ref_953
                    id: 2565435189324
                    enabled: true
                    status: registered
                    eventTypes:
                      - processingAccount.status.changed
                    notifications:
                      - type: webhook
                        uri: https://my-service/notification/endpoint
                        secret: '**********NoP3456'
                        supportEmailAddress: jane.doe@example.com
                    metadata:
                      yourCustomField: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
  /event-subscriptions/{subscriptionId}:
    parameters:
      - name: subscriptionId
        in: path
        description: |
          Unique identifier that we assigned to the event subscription.  
          **Note:** Our gateway returned the subscriptionId in the id field in the response of the [Create Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/create) method.  
        required: true
        schema: &ref_490
          type: integer
          format: int32
        examples: &ref_491
          example:
            value: 7654
    get:
      tags:
        - Event Subscriptions
      summary: Retrieve event subscription
      description: |
        Use this method to retrieve the details of an event subscription.  

        In your request, include the subscriptionId that we sent to you when we created the event subscription.  
          
        **Note:** If you don't know the subscriptionId of the event subscription, go to [List event subscriptions](#listEventSubscriptions).
      operationId: getEventSubscription
      responses:
        '200':
          description: Returns the event subscription object.
          content:
            application/json:
              schema:
                type: object
                title: Event Subscription
                properties: *ref_324
                required: *ref_325
              examples:
                eventSubscription:
                  summary: Event subscription
                  description: Example of an event subscription.
                  value: &ref_954
                    id: 2565435189324
                    enabled: true
                    status: registered
                    eventTypes:
                      - processingAccount.status.changed
                    notifications:
                      - type: webhook
                        uri: https://my-service/notification/endpoint
                        secret: '**********NoP3456'
                        supportEmailAddress: jane.doe@example.com
                    metadata:
                      yourCustomField: abc123
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
    put:
      tags:
        - Event Subscriptions
      summary: Update event subscription
      description: |
        Use this method to update the details of an event subscription.  

        To update an event subscription, you need its subscriptionId. Our gateway returned the subscriptionId in the response of the [Create Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/create) method.  

        **Note:** If you don’t have the subscriptionId, use our [List Event Subscriptions](https://docs.payroc.com/api/schema/notifications/event-subscriptions/list) method to search for the event subscription.  

        You can update the following details about an event subscription:  

        - Status of the event subscription.  
        - Events that you have subscribed to. For a list of events that you can subscribe to, go to [Events list](https://docs.payroc.com/knowledge/events/events-list).  
        - Information about how we contact you when an event occurs.  
      operationId: updateEventSubscription
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Event Subscription
              properties: *ref_324
              required: *ref_325
            examples:
              updateEventSubscription:
                summary: Update event subscription
                description: Update an event subscription
                value: &ref_955
                  enabled: true
                  eventTypes:
                    - processingAccount.status.changed
                  notifications:
                    - type: webhook
                      uri: https://my-server/notification/endpoint
                      secret: aBcD1234eFgH5678iJkL9012mNoP3456
                      supportEmailAddress: jane.doe@example.com
                  metadata:
                    yourCustomField: abc123
      responses:
        '204':
          description: Successful request. We updated the event subscription.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
    patch:
      tags:
        - Event Subscriptions
      summary: Partially update event subscription
      description: |
        Use this method to partially update an event subscription. Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.  

        To update an event subscription, you need its subscriptionId. Our gateway returned the subscriptionId in the id field in the response of the [Create Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/create) method.  

        **Note:** If you don't have the subscriptionId, use our [List Event Subscriptions](https://docs.payroc.com/api/schema/notifications/event-subscriptions/list) method to search for the subscription.  

        You can update the following properties of an event subscription:  
        - **eventTypes** - Subscribe to new events or remove events that you are subscribed to.  
        - **notifications** - Information about your endpoint and who we email if we can't contact your endpoint.  
        - **enabled** - Turn on or turn off notifications for the subscription.  
      operationId: patchEventSubscription
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
          schema: *ref_22
          examples: *ref_23
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: A JSON Patch document as defined by RFC 6902.
              items: *ref_100
              example: *ref_101
            examples:
              patchEventSubscriptionRealistic:
                summary: Partially update event subscription
                description: |
                  Partially update an existing event subscription.

                  Structure your request to follow the RFC 6902 standard.
                value: &ref_956
                  - op: replace
                    path: /enabled
                    value: false
      responses:
        '200':
          description: Successful request. We updated the event subscription.
          content:
            application/json:
              schema:
                type: object
                title: Event Subscription
                properties: *ref_324
                required: *ref_325
              examples:
                patchedEventSubscription:
                  summary: Patched event subscription
                  description: Example of a patched event subscription.
                  value: &ref_957
                    id: 2565435189324
                    enabled: false
                    status: registered
                    eventTypes:
                      - processingAccount.status.changed
                    notifications:
                      - type: webhook
                        uri: https://my-service/notification/endpoint
                        secret: '**********NoP3456'
                        supportEmailAddress: jane.doe@example.com
                    metadata:
                      yourCustomField: abc123
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_11
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_26
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_27
                required: *ref_28
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_29
        '500':
          description: An error has occured
          content: *ref_14
    delete:
      tags:
        - Event Subscriptions
      summary: Delete event subscription
      description: |
        Use this method to delete an event subscription.  

        > **Important:** After you delete an event subscription, you can’t recover it. You won't receive event notifications from the event subscription.  

        To delete an event subscription, you need its subscriptionId. Our gateway returned the subscriptionId in the response of the [Create Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/create) method.  

        If you want to stop receiving event notifications but don't want to delete the event subscription, use our [Update Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/update) method to deactivate it.  
      operationId: deleteEventSubscription
      responses:
        '204':
          description: Successful request. We deleted the event subscription.
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_14
  /terminal-orders/{terminalOrderId}:
    get:
      tags:
        - Terminal orders
      summary: Retrieve terminal order
      description: |
        Use this method to retrieve information about a terminal order.  

        To retrieve a terminal order, you need it's terminalOrderId. Our gateway returned the terminalOrderId in the response of the [Create Terminal Order](https://docs.payroc.com/api/schema/boarding/processing-accounts/create-terminal-order) method.  

        **Note**: If you don't have the terminalOrderId, use our [List Terminal Orders](https://docs.payroc.com/api/schema/boarding/processing-accounts/list-terminal-orders) method to search for the terminal order.  

        Our gateway returns the following information about the terminal order:  
        - Status of the order  
        - Items in the order  
        - Training provider  
        - Shipping information  

        **Note**: You can subscribe to our terminalOrder.status.changed event to get notifications when we update the status of a terminal order. For more information about how to subscribe to events, go to [Events Subscriptions](https://docs.payroc.com/guides/integrate/event-subscriptions).  
      operationId: getTerminalOrder
      parameters:
        - name: terminalOrderId
          in: path
          description: Unique identifier of the terminal order.
          required: true
          schema: &ref_492
            type: string
          examples: &ref_493
            example:
              value: '12345'
      responses:
        '200':
          description: Successful request. Returns the terminal order.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_318
                required: *ref_319
              examples:
                terminalOrder:
                  summary: Terminal order
                  description: Terminal order
                  value: &ref_958
                    terminalOrderId: '12345'
                    status: open
                    trainingProvider: payroc
                    shipping:
                      preferences:
                        method: nextDay
                        saturdayDelivery: true
                      address:
                        recipientName: Recipient Name
                        businessName: Company Ltd
                        addressLine1: 1 Example Ave.
                        addressLine2: Example Address Line 2
                        city: Chicago
                        state: Illinois
                        postalCode: '60056'
                        email: example@mail.com
                        phone: '2025550164'
                    orderItems:
                      - type: solution
                        solutionTemplateId: Roc Services_DX8000
                        solutionQuantity: 1
                        deviceCondition: new
                        solutionSetup:
                          timezone: America/Chicago
                          industryTemplateId: Retail
                          gatewaySettings:
                            merchantPortfolioId: Company Ltd
                            merchantTemplateId: Company Ltd Merchant Template
                            userTemplateId: Company Ltd User Template
                            terminalTemplateId: Company Ltd Terminal Template
                          applicationSettings:
                            clerkPrompt: false
                            security:
                              refundPassword: true
                              keyedSalePassword: false
                              reversalPassword: true
                          deviceSettings:
                            numberOfMobileUsers: 2
                            communicationType: wifi
                          batchClosure:
                            batchCloseType: automatic
                            batchCloseTime: '23:40'
                          receiptNotifications:
                            emailReceipt: true
                            smsReceipt: false
                          taxes:
                            - taxRate: 6
                              taxLabel: Sales Tax
                          tips:
                            enabled: false
                          tokenization: true
                        links:
                          - processingTerminalId: 38765
                            link:
                              rel: processingTerminal
                              method: get
                              href: https://api.payroc.com/v1/processing-terminals/38765
        '400':
          description: Invalid request
          content: *ref_15
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /ach-deposits:
    get:
      tags:
        - Settlement
      summary: List ACH deposits
      description: Retrieve a list of ACH deposits.
      operationId: getAchDeposits
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Date to retrieve results from.
          schema:
            type: string
            format: date
            example: '2024-07-02'
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of ACH deposits.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of ACH deposit objects.
                        items:
                          type: object
                          title: ACH deposit
                          description: Object that contains information about the ACH deposit.
                          properties: &ref_326
                            achDepositId:
                              type: integer
                              description: Unique identifier of the ACH deposit.
                              example: 99
                            associationDate:
                              type: string
                              format: date
                              description: Date that we sent the transaction to the cards brands for clearing. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            achDate:
                              type: string
                              format: date
                              description: Date that the ACH deposit was processed. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            paymentDate:
                              type: string
                              format: date
                              description: Date that the payment was made. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            transactions:
                              type: integer
                              description: Number of transactions included in the ACH deposit.
                              example: 20
                            sales:
                              type: integer
                              description: Total value of sales. We return the value in the currency's lowest denomination, for example, cents.
                              example: 5000
                            returns:
                              type: integer
                              description: Total value of returns.
                              example: 100
                            dailyFees:
                              type: integer
                              description: Total value of daily Fees.
                              example: 100
                            heldSales:
                              type: integer
                              description: Total value of sales held for risk investigation.
                              example: 100
                            achAdjustment:
                              type: integer
                              description: Total value of adjustments made to the ACH deposit.
                              example: 100
                            holdback:
                              type: integer
                              description: Total value of funds witheld from the settled batch.
                              example: 100
                            reserveRelease:
                              type: integer
                              description: Total value of funds released from a hold.
                              example: 100
                            netAmount:
                              type: integer
                              description: Net ACH deposit value.
                              example: 5000
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_67
                              example: *ref_68
                            links:
                              type: array
                              items:
                                type: object
                                readOnly: true
                                description: Object that contains HATEOAS links for the resource.
                                properties: *ref_4
                                required: *ref_5
                                example: *ref_6
                              example:
                                - rel: achDepositFees
                                  method: get
                                  href: https://api.payroc.com/v1/ach-deposit-fees?achDepositId=99&merchantId=4525644354
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated ACH deposits
                  value: &ref_959
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/ach-deposits?before=65&limit=2&date=2024-07-02
                    data:
                      - achDepositId: 99
                        associationDate: '2024-07-02'
                        achDate: '2024-07-02'
                        paymentDate: '2024-07-02'
                        transactions: 10
                        sales: 50000
                        returns: 10000
                        dailyFees: 1000
                        heldSales: 1000
                        achAdjustment: 1000
                        holdback: 1000
                        reserveRelease: 500
                        netAmount: 36500
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        links:
                          - rel: achDepositFees
                            method: get
                            href: https://api.payroc.com/v1/ach-deposit-fees?achDepositId=99&merchantId=4525644354
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_70
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /ach-deposits/{achDepositId}:
    get:
      tags:
        - Settlement
      summary: Retrieve ACH deposit
      description: Retrieve a specific ACH deposit.
      operationId: getAchDeposit
      parameters:
        - name: achDepositId
          description: Unique identifier of the ACH deposit.
          in: path
          required: true
          schema: &ref_494
            type: integer
          examples: &ref_495
            example:
              value: 99
      responses:
        '200':
          description: Successful request. Returns the requested ACH deposit.
          content:
            application/json:
              schema:
                type: object
                title: ACH deposit
                description: Object that contains information about the ACH deposit.
                properties: *ref_326
              example:
                summary: Retrieve ACH deposit
                value:
                  achDepositId: 99
                  associationDate: '2024-07-02'
                  achDate: '2024-07-02'
                  paymentDate: '2024-07-02'
                  transactions: 10
                  sales: 50000
                  returns: 10000
                  dailyFees: 1000
                  heldSales: 1000
                  achAdjustment: 1000
                  holdback: 1000
                  reserveRelease: 500
                  netAmount: 36500
                  merchant:
                    merchantId: '4525644354'
                    doingBusinessAs: Pizza Doe
                    processingAccountId: '38765'
                    link:
                      rel: processingAccount
                      method: get
                      href: https://api.payroc.com/v1/processing-accounts/38765
                  links:
                    - rel: achDepositFees
                      method: get
                      href: https://api.payroc.com/v1/ach-deposit-fees?achDepositId=99&merchantId=4525644354
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                idError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_960
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: achDepositId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '404':
          description: Resource not found
          content: *ref_18
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
  /ach-deposit-fees:
    get:
      tags:
        - Settlement
      summary: List ACH deposit fees
      description: Retrieve a list of ACH deposit fees.
      operationId: getAchDepositFees
      parameters:
        - name: before
          in: query
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          schema: *ref_32
          examples: *ref_33
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_34
          examples: *ref_35
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_36
          examples: *ref_37
        - name: date
          in: query
          required: true
          description: Date to retrieve results from. You must provide either the 'achDepositId' or the 'date'.
          schema:
            type: string
            format: date
            example: '2024-07-02'
        - name: achDepositId
          description: Unique identifier of the ACH deposit. You must provide either the 'achDepositId' or the 'date'.
          in: query
          required: true
          schema: &ref_496
            type: integer
          examples: &ref_497
            example:
              value: 99
        - name: merchantId
          in: query
          description: Filter results by the unique identifier that the processor assigned to the merchant.
          schema: *ref_63
          examples: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of ACH deposit fees.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_38
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of ACH deposit objects.
                        items:
                          type: object
                          title: ACH deposit fee
                          description: Object that contains information about the ACH deposit fee.
                          properties: &ref_810
                            achDepositId:
                              type: integer
                              description: Unique identifier of the ACH deposit.
                              example: 99
                            associationDate:
                              type: string
                              format: date
                              description: Date that we sent the transaction to the cards brands for clearing. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            adjustmentDate:
                              type: string
                              format: date
                              description: Date of the adjustment. The format of this value is **YYYY-MM-DD**.
                              example: '2024-07-02'
                            description:
                              type: string
                              description: Description of the ACH deposit fee.
                              example: Month-End Fees Credit Processing
                            amount:
                              type: integer
                              description: Total value of ACH deposit fee.
                              example: 100
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_67
                              example: *ref_68
                            achDeposit:
                              type: object
                              title: ACH deposit summary
                              description: Object that contains information about the ACH deposit.
                              properties: &ref_808
                                achDepositId:
                                  type: integer
                                  description: Unique identifier of the ACH deposit.
                                  example: 99
                                link:
                                  type: object
                                  readOnly: true
                                  description: Object that contains HATEOAS links for the resource.
                                  properties: *ref_4
                                  required: *ref_5
                                  example: *ref_6
                              example: &ref_809
                                achDepositId: 99
                                link:
                                  rel: achDeposit
                                  method: get
                                  href: https://api.payroc.com/v1/ach-deposits/99?merchantId=4525644354
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated ACH deposit fees
                  value: &ref_961
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/ach-deposit-fees?before=65&limit=2&date=2024-07-02
                    data:
                      - associationDate: '2024-07-02'
                        adjustmentDate: '2024-07-02'
                        description: ACH Deposit Fee
                        amount: 500
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Pizza Doe
                          processingAccountId: '38765'
                          link:
                            rel: processingAccount
                            method: get
                            href: https://api.payroc.com/v1/processing-accounts/38765
                        achDeposit:
                          achDepositId: 99
                          link:
                            rel: achDeposit
                            method: get
                            href: https://api.payroc.com/v1/ach-deposits/99?merchantId=4525644354
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_55
        '400':
          description: Validation error
          content:
            application/problem+json:
              schema:
                type: object
                properties: *ref_9
                required: *ref_10
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_69
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_70
        '401':
          description: Identity could not be verified
          content: *ref_12
        '403':
          description: Do not have permissions to perform this action
          content: *ref_13
        '406':
          description: Not acceptable
          content: *ref_19
        '500':
          description: An error has occured
          content: *ref_14
components:
  securitySchemes:
    bearerAuth:
      type: http
      description: 'Example: Authorization: Bearer <token>'
      scheme: bearer
      bearerFormat: JWT
  parameters:
    before:
      name: before
      in: query
      description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
      schema: *ref_32
      examples: *ref_33
    after:
      name: after
      in: query
      description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
      schema: *ref_34
      examples: *ref_35
    limit:
      name: limit
      in: query
      description: States the total amount of results the response is limited to.
      schema: *ref_36
      examples: *ref_37
    idempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      description: Unique identifier that you generate for each request. You must use the [UUID v4 format](https://www.rfc-editor.org/rfc/rfc4122) for the identifier. For more information about the idempotency key, go to [Idempotency](https://docs.payroc.com/api/idempotency).
      schema: *ref_22
      examples: *ref_23
    recipientId:
      name: recipientId
      description: Unique identifier of the funding recipient.
      in: path
      required: true
      schema: *ref_16
      example: 234
    fundingAccountId:
      name: fundingAccountId
      in: path
      required: true
      description: Unique identifier of the funding account.
      schema: *ref_39
      examples: *ref_40
    ownerId:
      name: ownerId
      in: path
      description: Unique identifier that we assigned to the owner.
      required: true
      schema: *ref_41
      examples: *ref_42
    pricingIntentId:
      in: path
      name: pricingIntentId
      required: true
      description: Unique identifier that we assigned to the pricing intent.
      schema: *ref_327
      examples: *ref_328
    dateFrom:
      name: dateFrom
      in: query
      description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
      required: true
      schema: *ref_329
      examples: *ref_330
    dateTo:
      name: dateTo
      in: query
      required: true
      description: Retrieve activity that occured before `dateTo`.
      schema: *ref_331
      examples: *ref_332
    instructionId:
      name: instructionId
      in: path
      required: true
      description: Unique identifier of the funding instruction.
      schema: *ref_333
      examples: *ref_334
    merchantId:
      name: merchantId
      in: query
      description: Filter results by the unique identifier that the processor assigned to the merchant.
      schema: *ref_63
      examples: *ref_64
    parameters-dateFrom:
      name: dateFrom
      in: query
      description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
      required: true
      schema: *ref_335
      examples: *ref_336
    date:
      name: date
      in: query
      required: true
      description: Filter batches by the date that they were submitted. The format of this value is **YYYY-MM-DD**.
      schema: *ref_337
      examples: *ref_338
    batchId:
      name: batchId
      in: path
      required: true
      description: Unique identifier that we assigned to the batch.
      style: simple
      schema: *ref_339
      examples: *ref_340
    keyDate:
      name: date
      in: query
      required: true
      description: Date to retrieve results from. The format of this value is **YYYY-MM-DD**. You must provide either the 'batchId' or the 'date'.
      schema: *ref_72
      examples: *ref_73
    batchIdQuery:
      name: batchId
      in: query
      required: true
      description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
      schema: *ref_74
      examples: *ref_75
    transactionType:
      name: transactionType
      in: query
      description: Type of transaction.
      schema: *ref_341
      examples: *ref_342
    transactionId:
      name: transactionId
      description: Unique identifier of the transaction.
      in: path
      required: true
      schema: *ref_343
      examples: *ref_344
    authorizationId:
      name: authorizationId
      description: Unique identifier of the authorization.
      in: path
      required: true
      schema: *ref_345
      examples: *ref_346
    parameters-date:
      name: date
      in: query
      required: true
      description: Filter results by the date that the dispute was submitted.
      schema: *ref_347
      examples: *ref_348
    disputeId:
      name: disputeId
      description: Unique identifier of the dispute.
      in: path
      required: true
      schema: *ref_349
      examples: *ref_350
    processingTerminalIdPath:
      name: processingTerminalId
      in: path
      required: true
      description: Unique identifier that we assigned to the terminal.
      schema: *ref_95
      examples: *ref_96
    merchantReference:
      name: merchantReference
      in: query
      description: Filter results by the unique identifier that the merchant assigned to the payment link.
      schema: *ref_351
      examples: *ref_352
    linkType:
      name: linkType
      in: query
      description: Filter results by the type of link. Send a value of <code>singleUse</code> or <code>multiUse</code>.
      schema: *ref_353
      examples: *ref_354
    chargeType:
      name: chargeType
      in: query
      description: |
        Filter results by the user that entered the amount. Send one of the following values:
        - <code>prompt</code> - Customer entered the amount.
        - <code>preset</code> - Merchant entered the amount.
      schema: *ref_355
      examples: *ref_356
    payment-link-status:
      name: status
      in: query
      description: Filter results by the status of the payment link. Send a value of <code>active</code>, <code>completed</code>,<code>deactived</code>, or <code>expired</code>.
      schema: *ref_357
      examples: *ref_358
    recipientName:
      name: recipientName
      in: query
      description: Filter results by the customer's name.
      schema: *ref_107
      examples: *ref_108
    recipientEmail:
      name: recipientEmail
      in: query
      description: Filter results by the customer's email address.
      schema: *ref_109
      examples: *ref_110
    createdOn:
      name: createdOn
      in: query
      description: Filter results by the link's created date. Send a value in **YYYY-MM-DD** format.
      schema: *ref_359
      examples: *ref_360
    expiresOn:
      name: expiresOn
      in: query
      description: Filter results by the link's expiry date. Send a value in **YYYY-MM-DD** format.
      schema: *ref_361
      examples: *ref_362
    paymentLinkId:
      name: paymentLinkId
      in: path
      description: Unique identifier that we assigned to the payment link.
      required: true
      schema: *ref_98
      examples: *ref_99
    paymentPlanId:
      name: paymentPlanId
      in: path
      description: Unique identifier that the merchant assigned to the payment plan.
      required: true
      schema: *ref_116
      examples: *ref_117
    customerName:
      name: customerName
      in: query
      description: Filter by the customer's name.
      schema: *ref_363
      examples: *ref_364
    last4:
      name: last4
      in: query
      description: Filter by the last four digits of the card or account number.
      schema: *ref_365
      examples: *ref_366
    paymentPlan:
      name: paymentPlan
      in: query
      description: Filter by the name of the payment plan.
      schema: *ref_367
      examples: *ref_368
    frequency:
      name: frequency
      in: query
      description: Filter by the frequency of subscription payments.
      schema: *ref_369
      examples: *ref_370
    status:
      name: status
      in: query
      description: Filter by the current status of the subscription.
      schema: *ref_371
      examples: *ref_372
    endDate:
      name: endDate
      in: query
      description: |
        Format: `YYYY-MM-DD`  
        Filter subscriptions that end on a specific date.
      schema: *ref_373
      examples: *ref_374
    nextDueDate:
      name: nextDueDate
      in: query
      description: |
        Format: `YYYY-MM-DD`  
        Filter subscriptions by the date that the next payment is collected.
      schema: *ref_375
      examples: *ref_376
    subscriptionId:
      name: subscriptionId
      in: path
      description: Unique identifier that the merchant assigned to the subscription.
      required: true
      schema: *ref_130
      examples: *ref_131
    secureTokenIdInQuery:
      name: secureTokenId
      in: query
      description: Unique identifier that the merchant assigned to the secure token.
      schema: *ref_377
      examples: *ref_378
    phone:
      name: phone
      in: query
      description: Filter by the customer's phone number.
      schema: *ref_379
      examples: *ref_380
    email:
      name: email
      in: query
      description: Filter by the customer's email address.
      schema: *ref_381
      examples: *ref_382
    token:
      name: token
      in: query
      description: Filter by the token that the merchant used in a transaction to represent the customer's payment details.
      schema: *ref_383
      examples: *ref_384
    first6:
      name: first6
      in: query
      description: Filter by the first six digits of the card number.
      schema: *ref_385
      examples: *ref_386
    secureTokenIdInPath:
      name: secureTokenId
      in: path
      required: true
      description: Unique identifier that the merchant assigned to the secure token.
      schema: *ref_155
      examples: *ref_156
    processingTerminalId:
      name: processingTerminalId
      in: path
      required: true
      description: Unique identifier that our gateway assigned to the terminal.
      schema: *ref_387
      examples: *ref_388
    processingTerminalIdQuery:
      name: processingTerminalId
      in: query
      description: Filter by terminal ID.
      schema: *ref_220
      examples: *ref_221
    orderId:
      name: orderId
      in: query
      description: Filter payments by order ID.
      schema: *ref_389
      examples: *ref_390
    operator:
      name: operator
      in: query
      description: Filter payments by operator.
      schema: *ref_391
      examples: *ref_392
    cardholderName:
      name: cardholderName
      in: query
      description: Filter payments by the cardholder’s name.
      schema: *ref_393
      examples: *ref_394
    parameters-first6:
      name: first6
      in: query
      description: Filter payments by the first six digits of the card number that the customer used in the transaction.
      schema: *ref_395
      examples: *ref_396
    parameters-last4:
      name: last4
      in: query
      description: Filter payments by the last four digits of the card number that the customer used in the transaction.
      schema: *ref_397
      examples: *ref_398
    tender:
      name: tender
      in: query
      description: Filter by tender type.
      schema: *ref_399
      examples: *ref_400
    tipMode:
      name: tipMode
      in: query
      description: Filter payments by tip.
      schema: *ref_401
      examples: *ref_402
    type:
      name: type
      in: query
      description: Filter payments by transaction type.
      schema: *ref_403
      examples: *ref_404
    parameters-status:
      name: status
      in: query
      description: Filter payments by the status of the transaction.
      schema: *ref_405
      examples: *ref_406
    components-parameters-dateFrom:
      name: dateFrom
      in: query
      description: Filter by payments that the processor processed after a specific date. The date format follows the ISO 8601 standard.
      schema: *ref_407
      examples: *ref_408
    parameters-dateTo:
      name: dateTo
      in: query
      description: Filter by payments that the processer processed before a specific date. The date format follows the ISO 8601 standard.
      schema: *ref_409
      examples: *ref_410
    settlementState:
      name: settlementState
      in: query
      description: Filter payments by the settlement status of the transaction.
      schema: *ref_411
      examples: *ref_412
    settlementDate:
      name: settlementDate
      in: query
      description: Filter by payments that the processor settled on a specific date in the format **YYYY-MM-DD**.
      schema: *ref_413
      examples: *ref_414
    parameters-paymentLinkId:
      name: paymentLinkId
      in: query
      description: Unique identifier that our gateway assigned to the payment link.
      schema: *ref_415
      examples: *ref_416
    paymentId:
      name: paymentId
      in: path
      required: true
      description: Unique identifier of the payment that the merchant wants to retrieve.
      schema: *ref_192
      examples: *ref_193
    serialNumber:
      name: serialNumber
      description: Serial number that identifies the merchant’s payment device.
      in: path
      required: true
      schema: *ref_417
      examples: *ref_418
    paymentInstructionId:
      name: paymentInstructionId
      description: Unique identifier of the payment instruction.
      in: path
      required: true
      schema: *ref_210
      examples: *ref_211
    parameters-orderId:
      name: orderId
      in: query
      description: Filter refunds by the unique identifier that the merchant assigned to the order.
      schema: *ref_419
      examples: *ref_420
    parameters-operator:
      name: operator
      in: query
      description: Filter refunds by the operator who initiated the request.
      schema: *ref_421
      examples: *ref_422
    parameters-cardholderName:
      name: cardholderName
      in: query
      description: Filter refunds by cardholder name.
      schema: *ref_423
      examples: *ref_424
    components-parameters-first6:
      name: first6
      in: query
      description: Filter refunds by the first six digits of the card number.
      schema: *ref_425
      examples: *ref_426
    components-parameters-last4:
      name: last4
      in: query
      description: Filter refunds by the last four digits of the card number.
      schema: *ref_427
      examples: *ref_428
    components-parameters-status:
      name: status
      in: query
      description: Filter refunds by the current status of the refund.
      schema: *ref_429
      examples: *ref_430
    parameters-v1_components-parameters-dateFrom:
      name: dateFrom
      in: query
      description: Filter by refunds processed after a specific date. The date format follows the ISO 8601 standard.
      schema: *ref_431
      examples: *ref_432
    components-parameters-dateTo:
      name: dateTo
      in: query
      description: Filter by refunds processed before a specific date. The date format follows the ISO 8601 standard.
      schema: *ref_433
      examples: *ref_434
    parameters-settlementState:
      name: settlementState
      in: query
      description: Status of the settlement.
      schema: *ref_435
      examples: *ref_436
    parameters-settlementDate:
      name: settlementDate
      in: query
      description: Date the transaction was settled.
      schema: *ref_437
      examples: *ref_438
    refundId:
      name: refundId
      description: Unique identifier that our gateway assigned to the refund.
      in: path
      required: true
      schema: *ref_225
      examples: *ref_226
    refundInstructionId:
      name: refundInstructionId
      description: Unique identifier of the refund instruction.
      in: path
      required: true
      schema: *ref_235
      examples: *ref_236
    bankTransferPaymentsProcessingTerminalId:
      name: processingTerminalId
      in: query
      required: true
      description: Filter results by the unique identifier that we assigned to the terminal.
      schema: *ref_439
      examples: *ref_440
    bankTransferPaymentsOrderId:
      name: orderId
      in: query
      description: Filter results by the order ID of the payment.
      schema: *ref_441
      examples: *ref_442
    bankTransferPaymentsNameOnAccount:
      name: nameOnAccount
      in: query
      description: Filter results by the account holder's name.
      schema: *ref_443
      examples: *ref_444
    bankTransferPaymentsLast4:
      name: last4
      in: query
      description: Filter results by the last four digits of the account number.
      schema: *ref_445
      examples: *ref_446
    bankTransferPaymentsType:
      name: type
      in: query
      description: Filter results by transaction type.
      schema: *ref_447
      examples: *ref_448
    bankTransferPaymentsStatus:
      name: status
      in: query
      description: Filter results by the status of the payment.
      schema: *ref_449
      examples: *ref_450
    bankTransferPaymentsDateFrom:
      name: dateFrom
      in: query
      description: Filter results by payments that the merchant ran after a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
      schema: *ref_451
      examples: *ref_452
    bankTransferPaymentsDateTo:
      name: dateTo
      in: query
      description: Filter results by payments that the merchant ran before a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
      schema: *ref_453
      examples: *ref_454
    bankTransferPaymentsSettlementState:
      name: settlementState
      in: query
      description: Filter results by the settlement status.
      schema: *ref_455
      examples: *ref_456
    bankTransferPaymentsSettlementDate:
      name: settlementDate
      in: query
      description: Filter results by the settlement date. Send a value in **YYYY-MM-DD** format.
      schema: *ref_457
      examples: *ref_458
    components-parameters-paymentLinkId:
      name: paymentLinkId
      in: query
      description: Filter results by the paymentLinkId.
      schema: *ref_459
      examples: *ref_460
    bankTransferPaymentsPaymentId:
      name: paymentId
      description: Unique identifier that our gateway assigned to the payment.
      in: path
      required: true
      schema: *ref_249
      examples: *ref_250
    bankTransferRefundProcessingTerminalId:
      name: processingTerminalId
      in: query
      required: true
      description: Filter results by the unique identifier that we assigned to the terminal.
      schema: *ref_461
      examples: *ref_462
    bankTransferRefundOrderId:
      name: orderId
      in: query
      description: Filter results by the order ID of the refund.
      schema: *ref_463
      examples: *ref_464
    bankTransferRefundNameOnAccount:
      name: nameOnAccount
      in: query
      description: Filter results by the accountholder's name.
      schema: *ref_465
      examples: *ref_466
    bankTransferRefundLast4:
      name: last4
      in: query
      description: Filter results by the last four digits of the account number.
      schema: *ref_467
      examples: *ref_468
    bankTransferRefundType:
      name: type
      description: Filter results by transaction type.
      in: query
      schema: *ref_469
      examples: *ref_470
    bankTransferRefundStatus:
      name: status
      in: query
      description: Filter results by the status of the refund.
      schema: *ref_471
      examples: *ref_472
    bankTransferRefundDateFrom:
      name: dateFrom
      in: query
      description: Filter results by refunds that the merchant ran after a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
      schema: *ref_473
      examples: *ref_474
    bankTransferRefundDateTo:
      name: dateTo
      in: query
      description: Filter results by refunds that the merchant ran before a specific date. The value follows the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard.
      schema: *ref_475
      examples: *ref_476
    bankTransferRefundSettlementState:
      name: settlementState
      in: query
      description: Filter results by the settlement status.
      schema: *ref_477
      examples: *ref_478
    bankTransferRefundSettlementDate:
      name: settlementDate
      in: query
      description: Filter results by the settlement date. Send a value in **YYYY-MM-DD** format.
      schema: *ref_479
      examples: *ref_480
    bankTransferRefundRefundId:
      name: refundId
      description: Unique identifier that our gateway assigned to the refund.
      in: path
      required: true
      schema: *ref_262
      examples: *ref_263
    merchantPlatformId:
      name: merchantPlatformId
      in: path
      description: Unique identifier of the merchant platform that we sent to you when you created the merchant platform.
      required: true
      schema: *ref_274
      examples: *ref_275
    includeClosed:
      name: includeClosed
      in: query
      description: |
        Indicates if you want to return closed processing accounts. This includes processing accounts that have a status of `terminated`, `cancelled`, or `rejected`.  
        **Note**: By default, we return only open processing accounts.  
      schema: *ref_481
      examples: *ref_482
    processingAccountId:
      name: processingAccountId
      in: path
      description: Unique identifier that we assigned to the processing account.
      required: true
      schema: *ref_288
      examples: *ref_289
    processing-accounts-v1_components-parameters-status:
      name: status
      in: query
      schema: *ref_483
    fromDateTime:
      name: fromDateTime
      in: query
      schema: *ref_484
    toDateTime:
      name: toDateTime
      in: query
      schema: *ref_485
    contactId:
      name: contactId
      in: path
      description: Unique identifier for the contact.
      required: true
      schema: *ref_322
      examples: *ref_323
    parameters-v1_components-parameters-status:
      name: status
      in: query
      description: Filter event subscriptions by subscription status.
      schema: *ref_486
      examples: *ref_487
    event:
      name: event
      in: query
      description: Filter event subscriptions by an event type. For a list of event types, go to [Events List](https://docs.payroc.com/knowledge/events/events-list).
      schema: *ref_488
      examples: *ref_489
    parameters-subscriptionId:
      name: subscriptionId
      in: path
      description: |
        Unique identifier that we assigned to the event subscription.  
        **Note:** Our gateway returned the subscriptionId in the id field in the response of the [Create Event Subscription](https://docs.payroc.com/api/schema/notifications/event-subscriptions/create) method.  
      required: true
      schema: *ref_490
      examples: *ref_491
    terminalOrderId:
      name: terminalOrderId
      in: path
      description: Unique identifier of the terminal order.
      required: true
      schema: *ref_492
      examples: *ref_493
    achDepositId:
      name: achDepositId
      description: Unique identifier of the ACH deposit.
      in: path
      required: true
      schema: *ref_494
      examples: *ref_495
    achDepositIdQuery:
      name: achDepositId
      description: Unique identifier of the ACH deposit. You must provide either the 'achDepositId' or the 'date'.
      in: query
      required: true
      schema: *ref_496
      examples: *ref_497
  schemas:
    '400':
      type: object
      properties: *ref_9
      required: *ref_10
    '401':
      type: object
      properties: *ref_498
      required: *ref_499
    '403':
      type: object
      properties: *ref_500
      required: *ref_501
    '404':
      type: object
      properties: *ref_315
      required: *ref_316
    '406':
      type: object
      properties: *ref_502
      required: *ref_503
    '409':
      type: object
      properties: *ref_27
      required: *ref_28
    '413':
      type: object
      properties: *ref_504
      required: *ref_505
    '415':
      type: object
      properties: *ref_506
      required: *ref_507
    '500':
      type: object
      properties: *ref_508
      required: *ref_509
    link:
      type: object
      readOnly: true
      description: Object that contains HATEOAS links for the resource.
      properties: *ref_4
      required: *ref_5
      example: *ref_6
    paginatedList:
      type: object
      description: Contains the pagination properties that you use to navigate through a list of results.
      properties: *ref_38
    address:
      required: *ref_0
      type: object
      title: address
      description: Object that contains information about the address.
      properties: *ref_1
    contactMethodEmail:
      required: *ref_510
      type: object
      title: Email contact method
      properties: *ref_511
    contactMethodPhone:
      required: *ref_512
      type: object
      title: Phone number contact method
      properties: *ref_513
    contactMethodMobile:
      required: *ref_514
      type: object
      title: Mobile number contact method
      properties: *ref_515
    contactMethodFax:
      required: *ref_516
      type: object
      title: Fax number contact method
      properties: *ref_517
    contactMethod:
      discriminator: *ref_2
      oneOf: *ref_3
    fundingRecipient:
      required: *ref_7
      type: object
      title: funding recipient
      properties: *ref_8
    paginatedFundRecipients:
      type: object
      title: paginated funding recipients
      allOf: *ref_518
    identifier:
      required: *ref_266
      type: object
      title: identifier
      properties: *ref_267
    ownerRelationship:
      required: *ref_519
      type: object
      title: Owner relationship
      description: Object that contains information about the owner's relationship to the business.
      properties: *ref_520
    owner:
      type: object
      title: owner
      required: *ref_30
      properties: *ref_31
    PaymentMethodAch:
      type: object
      title: ACH payment method
      properties: *ref_521
    paymentMethods:
      uniqueItems: true
      type: array
      description: Array of PaymentMethodAch objects.
      items: *ref_522
    fundingAccount:
      required: *ref_20
      type: object
      title: funding account
      properties: *ref_21
    createFundingRecipient:
      required: *ref_523
      type: object
      title: create funding recipient
      properties: *ref_524
    listFundingAccounts:
      type: object
      title: paginated funding accounts
      allOf: *ref_525
    baseIntent:
      type: object
      title: base pricing intent
      description: Object that contains information about the base fees.
      properties: *ref_526
      required: *ref_527
    baseUsMonthly:
      type: object
      title: Monthly platinum security
      required: *ref_528
      properties: *ref_529
    baseUsAnnual:
      type: object
      title: Annual platinum security
      required: *ref_530
      properties: *ref_531
    baseUs:
      type: object
      title: US base fees
      description: Object that contains information about U.S. base fees.
      properties: *ref_292
      required: *ref_293
    percentage:
      description: Percentage value up to 2 decimal places.
      title: percentage
      type: number
      format: double
      minimum: 0
      maximum: 100
      example: 1.25
    amount:
      type: integer
      minimum: 0
    processorFee:
      type: object
      title: Processor Fee
      description: Object that contains information about the processor fees.
      properties: *ref_43
    interchangePlusAmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_532
      properties: *ref_533
    interchangePlusAmexDirect:
      type: object
      title: American Express Direct
      required: *ref_534
      properties: *ref_535
    pinDebit:
      type: object
      description: Object that contains the fees for PIN-debit transactions.
      required: *ref_44
      properties: *ref_45
    electronicBenefitsTransfer:
      type: object
      description: Object that contains the fees for EBT transactions.
      required: *ref_46
      properties: *ref_47
    enhancedInterchange:
      type: object
      description: Object that contains the fees for enhanced interchange services.
      required: *ref_48
      properties: *ref_49
    specialityCards:
      type: object
      description: Object that contains the fees for speciality cards.
      required: *ref_50
      properties: *ref_51
    interchangePlus:
      type: object
      title: Interchange Plus Plan
      description: Object that contains information about Interchange Plus.
      properties: *ref_294
      required: *ref_295
    qualRates:
      type: object
      required: *ref_52
      properties: *ref_53
    interchangePlusPlusAmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_536
      properties: *ref_537
    interchangePlusPlusAmexDirect:
      type: object
      title: American Express Direct
      required: *ref_538
      properties: *ref_539
    interchangePlusPlus:
      type: object
      title: Interchange Plus Plus
      description: Object that contains information about Interchange Plus Plus.
      properties: *ref_540
      required: *ref_541
    tiered3AmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_542
      properties: *ref_543
    tiered3AmexDirect:
      type: object
      title: American Express Direct
      required: *ref_544
      properties: *ref_545
    tiered3:
      type: object
      title: Tiered pricing with three tiers
      description: Object that contains information about tiered pricing with three tiers.
      properties: *ref_296
      required: *ref_297
    qualRatesWithPremium:
      type: object
      allOf: *ref_54
    tiered4AmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_546
      properties: *ref_547
    tiered4AmexDirect:
      type: object
      title: American Express Direct
      required: *ref_548
      properties: *ref_549
    tiered4:
      type: object
      title: Tiered pricing with four tiers
      description: Object that contains information about tiered pricing with four tiers.
      properties: *ref_298
      required: *ref_299
    qualRatesWithPremiumAndRegulated:
      type: object
      allOf: *ref_550
    tiered6AmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_551
      properties: *ref_552
    tiered6AmexDirect:
      type: object
      title: American Express Direct
      required: *ref_553
      properties: *ref_554
    tiered6:
      type: object
      title: Tiered pricing with six tiers
      description: Object that contains information about tiered pricing with six tiers.
      properties: *ref_300
      required: *ref_301
    flatRateAmexDirect:
      type: object
      title: American Express Direct
      required: *ref_555
      properties: *ref_556
    flatRate:
      type: object
      title: Flat Rate Plan
      description: Object that contains information about Flat Rate.
      properties: *ref_302
      required: *ref_303
    consumerChoice:
      type: object
      title: Consumer Choice Plan
      description: Object that contains information about ConsumerChoice.
      properties: *ref_304
      required: *ref_305
    rewardPayChoice:
      type: object
      title: RewardPayChoice Plan
      description: Object that contains information about RewardPayChoice.
      properties: *ref_306
      required: *ref_307
    ach:
      type: object
      description: Object that contains the fees for ACH transactions.
      properties: *ref_308
    gatewayUs5.0:
      type: object
      description: Object that contains information about the gateway fees for MPA 5.0.
      title: gateway fees
      properties: *ref_557
      required: *ref_558
    hardwareAdvantagePlan:
      type: object
      description: Object that contains information about the Hardware Advantage Plan.
      properties: *ref_559
      required: *ref_560
    serviceUs5.0:
      title: US version 5.0 service
      type: object
      description: Object that contains information about the Hardware Advantage Plan.
      discriminator: *ref_561
      oneOf: *ref_562
    servicesUs5.0:
      title: US version 5.0 services array
      description: Object that contains information about our additional services that the merchant can sign up for.
      type: array
      items: *ref_563
      uniqueItems: true
    pricingAgreementUs5.0:
      type: object
      title: US pricing agreement version 5.0
      description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 5.0.
      required: *ref_264
      properties: *ref_265
    pricingIntent5.0:
      type: object
      title: pricing intent version 5.0
      description: Object that contains information about a pricing intent for Merchant Processing Agreement (MPA) 5.0.
      allOf: *ref_564
    pricingIntent:
      type: object
      title: pricing intent
      description: Object that contains information about a pricing intent.
      oneOf: *ref_56
    paginatedPricingIntent:
      type: object
      title: paginated pricing intents
      description: Object that contains information about your pricing intents.
      allOf: *ref_565
    patchAdd:
      type: object
      title: Patch Add Operation
      description: A Patch Add Operation.
      required: *ref_566
      properties: *ref_567
    patchRemove:
      type: object
      title: Patch Remove Operation
      description: A Patch Remove Operation.
      required: *ref_568
      properties: *ref_569
    patchReplace:
      type: object
      title: Patch Replace Operation
      description: A Patch Replace Operation.
      required: *ref_570
      properties: *ref_571
    patchMove:
      type: object
      title: Patch Move Operation
      description: A Patch Move Operation.
      required: *ref_572
      properties: *ref_573
    patchCopy:
      type: object
      title: Patch Copy Operation
      description: A Patch Copy Operation.
      required: *ref_574
      properties: *ref_575
    patchTest:
      type: object
      title: Patch Test Operation
      description: A Patch Test Operation.
      required: *ref_576
      properties: *ref_577
    patchDocument:
      title: Patch Operation
      description: A JSON Patch operation as defined by RFC 6902.
      discriminator: *ref_578
      oneOf: *ref_579
    patchRequest:
      type: array
      description: A JSON Patch document as defined by RFC 6902.
      items: *ref_100
      example: *ref_101
    instruction:
      type: object
      description: Inform the payfac what to do with the specified funds. **
      title: funding instruction
      properties: *ref_58
    merchantBalance:
      type: object
      description: Object that contains information about the total funds available to the merchant.
      title: merchant balance
      properties: *ref_580
    activityRecord:
      type: object
      description: Array of activityRecord objects.
      title: activity record
      properties: *ref_581
      required: *ref_582
    merchantSummary:
      type: object
      title: merchant summary
      description: Object that contains information about the merchant.
      properties: *ref_67
      example: *ref_68
    batch:
      type: object
      title: batch
      properties: *ref_65
    settledSummary:
      type: object
      title: settlement summary
      description: Object that contains information about the settlement.
      properties: *ref_583
      example: *ref_584
    batchSummary:
      type: *ref_76
      title: batch summary
      description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
      properties: *ref_77
    cardSummary:
      type: object
      title: card summary
      description: Object that contains information about the card.
      properties: *ref_78
    authorizationSummary:
      type: object
      title: authorization summary
      description: Object that contains information about the authorization.
      properties: *ref_585
    transaction:
      type: object
      title: transaction
      description: Object that contains information about the transaction.
      properties: *ref_71
    transactionSummary:
      type: object
      title: transaction summary
      description: Object that contains summary information about the transaction that the dispute is linked to.
      properties: *ref_80
    authorization:
      type: object
      title: authorization
      description: Object that contains information about the authorization.
      properties: *ref_79
    disputeStatus:
      type: object
      title: dispute status
      description: Object that contains information about the current status of the dispute.
      properties: *ref_81
    dispute:
      type: object
      title: dispute
      description: Object that contains information about the dispute.
      properties: *ref_586
    currency:
      type: string
      description: Currency of the transaction. The value for the currency follows the [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) standard.
      enum: *ref_82
    promptPaymentLinkCharge:
      required: *ref_83
      type: object
      title: Prompt amount
      description: Object that contains information about the charge when the customer enters the amount of the transaction.
      properties: *ref_84
    presetPaymentLinkCharge:
      required: *ref_85
      type: object
      title: Preset amount
      description: Object that contains information about the charge when the merchant enters the amount of the transaction.
      properties: *ref_86
    multiUsePaymentLinkOrder:
      required: *ref_587
      type: object
      description: Object that contains information about the order.
      properties: *ref_588
    customLabel:
      type: object
      description: Object that contains the information for the custom label.
      properties: *ref_87
    paymentLinkAssets:
      required: *ref_88
      type: object
      readOnly: true
      description: Object that contains shareable assets for the payment link.
      properties: *ref_89
    credentialOnFile:
      type: object
      description: Object that contains information about saving the customer’s payment details.
      properties: *ref_90
    multiUsePaymentLink:
      required: *ref_91
      type: object
      title: Multi-use link
      description: Object that contains information about a multi-use payment link.
      properties: *ref_92
    singleUsePaymentLinkOrder:
      required: *ref_589
      type: object
      description: Object that contains information about the order.
      properties: *ref_590
    singleUsePaymentLink:
      required: *ref_93
      type: object
      title: Single-use link
      description: Object that contains information about a single-use payment link.
      properties: *ref_94
    paymentLinkPaginatedList:
      required: *ref_591
      type: object
      allOf: *ref_592
    paymentLinkEmailRecipient:
      required: *ref_593
      type: object
      description: Object that contains the contact details of the recipient.
      properties: *ref_594
    paymentLinkEmailShareEvent:
      required: *ref_105
      type: object
      title: Share via email
      description: Object that contains the information about a sharing event that the merchant sent by email.
      properties: *ref_106
    sharingEventPaginatedList:
      required: *ref_595
      type: object
      allOf: *ref_596
    tax:
      required: *ref_118
      type: object
      properties: *ref_119
    paymentPlanOrderBreakdown:
      required: *ref_111
      type: object
      description: |
        Object that contains information about the taxes that apply to the transaction.
      properties: *ref_112
    paymentPlanSetupOrder:
      type: object
      description: Object that contains information about the initial cost that a customer pays to set up the subscription.
      properties: *ref_597
    paymentPlanRecurringOrder:
      type: object
      description: |
        Object that contains information about the cost of each payment.  
        **Note:** Send this object only if the value for **type** is `automatic`.
      properties: *ref_598
    paymentPlan:
      required: *ref_113
      type: object
      properties: *ref_114
    paymentPlanPaginatedList:
      required: *ref_599
      type: object
      allOf: *ref_600
    paymentPlanSummary:
      required: *ref_601
      type: object
      properties: *ref_602
    secureTokenSummary:
      required: *ref_132
      type: object
      description: Object that contains information about the secure token.
      properties: *ref_133
    surcharge:
      type: object
      description: |
        Object that contains information about the surcharge.
      properties: *ref_163
    convenienceFee:
      required: *ref_164
      type: object
      readOnly: true
      description: Object that contains information about the convenience fee for the transaction.
      properties: *ref_165
    subscriptionOrderBreakdown:
      required: *ref_120
      type: object
      description: |
        Object that contains information about the surcharge and taxes that apply to the transaction.
      properties: *ref_121
    subscriptionPaymentOrder:
      description: Object that contains information about the initial cost that a customer pays to set up the subscription.
      type: object
      properties: *ref_122
    subscriptionRecurringOrder:
      type: object
      description: |
        Object that contains information about the cost of each payment.  
        **Note:** Send this object only if the value for **type** is `automatic`.
      properties: *ref_123
    subscriptionState:
      required: *ref_134
      type: object
      description: A snapshot of the subscription's current state.
      properties: *ref_135
    customField:
      required: *ref_124
      type: object
      properties: *ref_125
    subscription:
      required: *ref_126
      type: object
      properties: *ref_127
    subscriptionPaginatedList:
      required: *ref_603
      type: object
      allOf: *ref_604
    secureTokenPayload:
      required: *ref_168
      type: object
      writeOnly: true
      title: Secure token
      description: Object that contains information about the secure token that represents the customer’s payment details.
      properties: *ref_169
    subscriptionRequest:
      required: *ref_605
      type: object
      properties: *ref_606
    subscriptionPaymentRequest:
      required: *ref_607
      properties: *ref_608
    paymentSummary:
      required: *ref_218
      type: object
      description: Object that contains information about a payment.
      properties: *ref_219
    subscriptionPayment:
      required: *ref_609
      type: object
      properties: *ref_610
    shipping:
      description: Object that contains information about the customer and their shipping address.
      type: object
      properties: *ref_196
    customer:
      type: object
      description: Object that contains the customer's contact details and address information.
      properties: *ref_144
    achSource:
      required: *ref_147
      type: object
      title: ACH account
      description: Object that contains the customer's account details.
      properties: *ref_148
    padSource:
      required: *ref_149
      type: object
      title: PAD account
      description: Object that contains the customer's account details.
      properties: *ref_150
    surcharging:
      required: *ref_239
      type: object
      description: Object that contains surcharge information. Our gateway returns this object only if the merchant adds a surcharge to transactions.
      properties: *ref_240
    cardSource:
      required: *ref_151
      type: object
      title: Card
      description: Object that contains the customer's card details.
      properties: *ref_152
    secureToken:
      required: *ref_145
      type: object
      description: Object that contains information about the secure token.
      properties: *ref_146
    achSourceWithAccountType:
      allOf: *ref_611
    padSourceWithAccountType:
      allOf: *ref_612
    secureTokenWithAccountType:
      allOf: *ref_153
    secureTokenPaginatedListWithAccountType:
      required: *ref_613
      type: object
      allOf: *ref_614
    ipAddress:
      required: *ref_166
      type: object
      writeOnly: true
      description: Object that contains information about the IP address of the device that sent the request.
      properties: *ref_167
    achPayload:
      required: *ref_157
      type: object
      writeOnly: true
      title: ACH
      description: Object that contains information about the payment details for the customer’s automated clearing house (ACH) transactions.
      properties: *ref_158
    padPayload:
      required: *ref_159
      type: object
      writeOnly: true
      title: PAD
      description: Object that contains information about the payment details for the customer’s preauthorized electronic debit (PAD) transactions.
      properties: *ref_160
    deviceConfig:
      required: *ref_615
      type: object
      description: Object that contains information about the configuration of the POS terminal.
      properties: *ref_616
    device:
      required: *ref_136
      type: object
      description: Object that contains information about the physical device the merchant used to capture the customer’s card details.
      properties: *ref_137
    rawCardDetails:
      required: *ref_617
      type: object
      title: Raw
      description: Object that contains information about the unencrypted card details.
      properties: *ref_618
    encryptionCapableDevice:
      required: *ref_138
      type: object
      description: Object that contains information about the encryption details of the POS terminal.
      allOf: *ref_139
    iccCardDetails:
      required: *ref_619
      type: object
      title: Chip
      description: Object that contains information about the Integrated Circuit Card (ICC).
      properties: *ref_620
    fullyEncryptedKeyedDataFormat:
      required: *ref_621
      type: object
      title: Encrypted
      description: Object that contains information about the encrypted card data for keyed transactions.
      properties: *ref_622
    partiallyEncryptedKeyedDataFormat:
      required: *ref_623
      type: object
      title: Partially encrypted
      description: Object that contains information about the partially-encrypted card data for keyed transactions.
      properties: *ref_624
    plainTextKeyedDataFormat:
      required: *ref_625
      type: object
      title: Unencrypted
      description: Object that contains information about the plain-text card data for keyed transactions.
      properties: *ref_626
    dukptPinDetails:
      required: *ref_140
      type: object
      title: Encrypted
      description: Object that contains information about encrypted PIN details.
      properties: *ref_141
    ebtDetails:
      type: object
      required: *ref_206
      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
      properties: *ref_207
    voucher:
      required: *ref_627
      type: object
      description: |
        Object that contains information about the EBT voucher.  

        **Note:** Vouchers are available only for EBT SNAP payments.
      properties: *ref_628
    ebtDetailsWithVoucher:
      type: object
      required: *ref_142
      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
      allOf: *ref_143
    keyedCardDetails:
      required: *ref_629
      type: object
      title: Keyed
      description: Object that contains information about the keyed card details.
      properties: *ref_630
    encryptedSwipedDataFormat:
      required: *ref_631
      type: object
      title: Encrypted
      description: Object that contains information about the encrypted swiped card data.
      properties: *ref_632
    plainTextSwipedDataFormat:
      required: *ref_633
      type: object
      title: Unencrypted
      description: Object that contains information about plain-text swiped card data.
      properties: *ref_634
    swipedCardDetails:
      required: *ref_635
      type: object
      title: Swiped
      description: Object that contains information about the customer’s card details for swiped transactions.
      properties: *ref_636
    cardPayload:
      required: *ref_161
      type: object
      writeOnly: true
      title: Card
      description: Object that contains information about the customer’s payment card.
      properties: *ref_162
    rawPinDetails:
      required: *ref_637
      type: object
      title: Unencrypted
      description: Object that contains information about the unencrypted PIN details.
      properties: *ref_638
    singleUseTokenPayload:
      required: *ref_170
      type: object
      writeOnly: true
      title: Single-use token
      description: Object that contains information about the single-use token, which represents the customer’s payment details.
      properties: *ref_171
    gatewayThreeDSecure:
      required: *ref_172
      type: object
      title: Gateway
      description: Object that contains the 3-D Secure information from our gateway.
      properties: *ref_173
    thirdPartyThreeDSecure:
      required: *ref_174
      type: object
      title: Third party
      description: Object that contains the 3-D Secure information from a third party.
      properties: *ref_175
    tokenizationRequest:
      required: *ref_639
      type: object
      properties: *ref_640
    singleUseTokenAccountUpdate:
      required: *ref_641
      type: object
      description: Object that contains the token.
      properties: *ref_642
    accountUpdate:
      description: Object that contains the single-use token.
      discriminator: *ref_643
      oneOf: *ref_644
    singleUseTokenRequest:
      required: *ref_645
      type: object
      properties: *ref_646
    singleUseToken:
      required: *ref_647
      type: object
      properties: *ref_648
    hostedFieldsCreateSessionRequest:
      required: *ref_649
      type: object
      title: Hosted Fields Initialization
      description: Object that contains information about Hosted Fields initialization request.
      properties: *ref_650
    hostedFieldsCreateSessionResponse:
      required: *ref_651
      type: object
      properties: *ref_652
    applePaySessions:
      required: *ref_653
      type: object
      properties: *ref_654
    applePayResponseSession:
      required: *ref_655
      type: object
      properties: *ref_656
    order:
      required: *ref_201
      type: object
      description: Object that contains details about the transaction.
      properties: *ref_202
    tip:
      required: *ref_194
      type: object
      description: Object that contains information about the tip.
      properties: *ref_195
    choiceRate:
      required: *ref_657
      type: object
      description: |
        Object that contains information about the choice rate. We return this only if the value for offered was `true`.
      readOnly: true
      properties: *ref_658
    dualPricing:
      required: *ref_659
      type: object
      description: Object that contains information about dual pricing.
      properties: *ref_660
    breakdown:
      required: *ref_203
      type: object
      description: Object that contains information about the breakdown of the transaction.
      properties: *ref_204
    unitOfMeasure:
      type: string
      description: Unit of measurement for the item. For more information about units of measurement, go to [Units of measurement](/knowledge/basic-concepts/units-of-measurement).
      example: QAN
      enum: *ref_661
    lineItem:
      required: *ref_662
      type: object
      description: List of line items.
      properties: *ref_663
    itemizedBreakdown:
      required: *ref_199
      type: object
      description: Object that contains information about the breakdown of the transaction.
      allOf: *ref_200
    dccOffer:
      required: *ref_212
      type: object
      description: |
        Object that contains information about the dynamic currency conversion (DCC) offer.  
          
        For more information about DCC, go to [Dynamic Currency Conversion](/knowledge/card-payments/dynamic-currency-conversion).
      properties: *ref_213
    firstTxnReferenceData:
      type: object
      description: Object that contains information about the initial payment for the payment instruction.
      properties: *ref_664
    standingInstructions:
      required: *ref_665
      type: object
      description: If you don't use our Subscriptions mechanism, include this section to configure your standing/recurring orders.
      properties: *ref_666
    paymentOrder:
      required: *ref_176
      type: object
      description: Object that contains information about the payment.
      allOf: *ref_177
    securityCheck:
      type: object
      description: Object that contains information about card verification and security checks.
      properties: *ref_178
    emvTag:
      required: *ref_179
      type: object
      description: Object that contains information about the EMV tag.
      properties: *ref_180
    cardBalance:
      required: *ref_181
      type: object
      description: Object that contains information about the total funds available in the card.
      properties: *ref_182
    retrievedCard:
      required: *ref_667
      type: object
      description: Object that contains the details of the payment card.
      properties: *ref_668
    refundSummary:
      required: *ref_183
      type: object
      description: Object that contains information about a refund.
      properties: *ref_184
    supportedOperations:
      type: array
      items: *ref_185
      description: |
        Array of operations that you can perform on the transaction.
        - `capture`                - Capture the payment.
        - `refund`                 - Refund the payment.
        - `fullyReverse`           - Fully reverse the transaction.
        - `partiallyReverse`       - Partially reverse the payment.
        - `incrementAuthorization` - Increase the amount of the authorization.
        - `adjustTip`              - Adjust the tip post-payment.
        - `addSignature`           - Add a signature to the payment.
        - `setAsReady`             - Set the transaction’s status to `ready`.
        - `setAsPending`           - Set the transaction’s status to `pending`.
      example: *ref_186
    transactionResult:
      required: *ref_187
      type: object
      properties: *ref_188
      description: Object that contains information about the transaction response details.
    retrievedPayment:
      required: *ref_189
      type: object
      properties: *ref_190
    paymentPaginatedListForRead:
      required: *ref_669
      type: object
      allOf: *ref_670
    digitalWalletPayload:
      required: *ref_237
      type: object
      writeOnly: true
      title: Digital wallet
      description: Object that contains information about the payment details in the customer’s digital wallet.
      properties: *ref_238
    schemas-credentialOnFile:
      type: object
      description: Object that contains information about saving the customer’s payment details.
      properties: *ref_205
    offlineProcessing:
      required: *ref_671
      type: object
      description: Object that contains information about the transaction if the merchant ran it when the terminal was offline.
      properties: *ref_672
    paymentRequest:
      required: *ref_673
      type: object
      properties: *ref_674
    card:
      required: *ref_216
      type: object
      description: Object that contains the details of the payment card.
      properties: *ref_217
    payment:
      required: *ref_197
      type: object
      properties: *ref_198
    breakdownAdjustment:
      type: object
      description: Object that contains information about the tip amount of a transaction.
      properties: *ref_675
    orderAdjustment:
      required: *ref_676
      type: object
      title: Order
      description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the order details.
      properties: *ref_677
    statusAdjustment:
      required: *ref_227
      type: object
      title: Status
      description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the status of the transaction.
      properties: *ref_228
    customerAdjustment:
      required: *ref_229
      type: object
      title: Customer
      description: Object that contains information about the adjustment to the transaction. Send this object if the merchant is adjusting the customer’s contact details.
      properties: *ref_230
    signatureAdjustment:
      required: *ref_678
      type: object
      title: Signature
      description: |
        Object that contains the signature for the transaction.  
        **Note:** If the merchant previously added a signature to the transaction, they can’t adjust or delete the signature.
      properties: *ref_679
    paymentAdjustment:
      required: *ref_680
      type: object
      description: Object that contains the transaction adjustment object.
      properties: *ref_681
    paymentCapture:
      description: Object that contains the details of the payment that the merchant wants to capture.
      type: object
      properties: *ref_682
    paymentReversal:
      type: object
      properties: *ref_683
    referencedRefund:
      description: Object that contains the details of the payment that the merchant wants to refund.
      required: *ref_684
      type: object
      properties: *ref_685
    paymentInstructionOrder:
      required: *ref_686
      type: object
      description: Object that contains information about the payment.
      allOf: *ref_687
    customizationOptions:
      type: object
      description: Object that contains available options to customize certain aspects of an instruction.
      properties: *ref_231
    paymentInstructionRequest:
      required: *ref_688
      type: object
      description: Object that contains the instructions for initiating a payment on a physical device.
      properties: *ref_689
    deviceInstruction:
      type: object
      description: Object that contains information about the status of the instruction
      properties: *ref_232
    paymentInstruction:
      required: *ref_208
      type: object
      allOf: *ref_209
    refundOrder:
      required: *ref_214
      type: object
      description: Object that contains information about the refund.
      allOf: *ref_215
    refund:
      required: *ref_222
      type: object
      description: Object that contains information about the refund.
      properties: *ref_223
    refundPaginatedList:
      required: *ref_690
      type: object
      description: Object that contains information about refund objects.
      allOf: *ref_691
    unreferencedRefund:
      required: *ref_692
      type: object
      description: Refund a payment that is not linked to a previous transaction. Unreferenced refunds are available only on certain accounts.
      properties: *ref_693
    refundAdjustment:
      required: *ref_694
      type: object
      description: Object that contains information about the adjustment to the refund.
      properties: *ref_695
    refundInstructionOrder:
      required: *ref_696
      type: object
      description: Object that contains information about the refund.
      allOf: *ref_697
    refundInstructionRequest:
      required: *ref_698
      type: object
      description: Object that contains information about the instruction request to initiate a refund on a payment device.
      properties: *ref_699
    refundInstruction:
      required: *ref_233
      type: object
      allOf: *ref_234
    cardVerificationRequest:
      required: *ref_700
      type: object
      properties: *ref_701
    cardVerificationResult:
      required: *ref_702
      type: object
      properties: *ref_703
    balanceInquiry:
      required: *ref_704
      type: object
      properties: *ref_705
    balance:
      required: *ref_706
      type: object
      properties: *ref_707
    cardBinPayload:
      required: *ref_708
      type: object
      writeOnly: true
      title: Card BIN
      description: Object that contains information about the card's bank identification number (BIN).
      properties: *ref_709
    binLookup:
      required: *ref_710
      type: object
      properties: *ref_711
    cardInfo:
      required: *ref_241
      type: object
      readOnly: true
      properties: *ref_242
      description: Object that contains information about the card.
    fxRateInquiry:
      required: *ref_712
      type: object
      properties: *ref_713
    fxRateInquiryResult:
      required: *ref_714
      type: object
      description: Object that indicates if the customer's card is eligible for Dynamic Currency Conversion (DCC).
      properties: *ref_715
    fxRate:
      required: *ref_716
      type: object
      description: Foreign exchange rate for the transaction.
      properties: *ref_717
    bankTransferBreakdown:
      required: *ref_718
      type: object
      description: Object that contains information about the transaction.
      properties: *ref_719
    bankTransferPaymentOrder:
      required: *ref_243
      type: object
      allOf: *ref_244
      description: Object that contains information about the transaction.
    bankTransferCustomer:
      type: object
      description: Object that contains information about the customer.
      properties: *ref_245
    achBankAccount:
      required: *ref_253
      type: object
      title: ACH account
      description: Object that contains the customer's account details.
      properties: *ref_254
    padBankAccount:
      required: *ref_255
      type: object
      title: PAD account
      description: Object that contains the customer's account details.
      properties: *ref_256
    bankTransferReturnSummary:
      required: *ref_720
      type: object
      description: Object that contains information about a return.
      properties: *ref_721
    bankTransferResult:
      type: object
      description: Object that contains information about the transaction.
      required: *ref_257
      readOnly: true
      properties: *ref_258
    bankTransferPayment:
      required: *ref_246
      type: object
      description: Object that contains information about the sale and the customer's bank details.
      properties: *ref_247
    bankTransferPaymentPaginatedList:
      required: *ref_722
      type: object
      allOf: *ref_723
    bankTransferPaymentRequest:
      required: *ref_724
      type: object
      description: Object that contains information about the sale and the customer's bank details.
      properties: *ref_725
    bankTransferReferencedRefund:
      required: *ref_726
      type: object
      description: Object that contains information about the payment that you want to refund.
      properties: *ref_727
    representment:
      type: object
      description: Object that contains the paymentMethod object.
      properties: *ref_728
    bankTransferRefundOrder:
      description: Object that contains information about the order.
      required: *ref_251
      type: object
      allOf: *ref_252
    bankTransferRefund:
      required: *ref_259
      type: object
      properties: *ref_260
    bankTransferRefundPaginatedList:
      required: *ref_729
      type: object
      allOf: *ref_730
    bankTransferUnreferencedRefund:
      required: *ref_731
      type: object
      properties: *ref_732
    bankAccountVerificationRequest:
      required: *ref_733
      type: object
      properties: *ref_734
    bankAccountVerificationResult:
      required: *ref_735
      type: object
      properties: *ref_736
    addressType:
      type: object
      description: Type of address.
      required: *ref_737
      properties: *ref_738
    legalAddress:
      title: Legal address
      required: *ref_739
      allOf: *ref_740
    business:
      type: object
      description: Object that contains information about the business.
      title: business
      required: *ref_268
      properties: *ref_269
    signatureByDirectLink:
      description: Object that contains signature information if we captured the merchant’s signature by direct link.
      title: Signature by direct link
      type: object
      required: *ref_741
      properties: *ref_742
    signatureByEmail:
      description: Object that contains signature information if we captured the merchant’s signature by email.
      title: Signature by email
      type: object
      required: *ref_743
      properties: *ref_744
    signature:
      type: object
      description: Object that includes information about how we captured the owner's signature.
      discriminator: *ref_270
      oneOf: *ref_271
    merchantPlatform:
      type: object
      title: merchant
      required: *ref_272
      properties: *ref_273
    paginatedMerchants:
      type: object
      title: paginated merchant platforms
      allOf: *ref_745
    timezone:
      description: Time zone for the processing account.
      enum: *ref_276
      example: America/Chicago
      maxLength: 28
    processing:
      description: Object that contains information about how we process transactions for the account.
      type: object
      title: processing
      required: *ref_277
      properties: *ref_278
    commonFunding:
      type: object
      description: Object that contains information about the funding schedule of the processing account.
      properties: *ref_279
    createFunding:
      type: object
      allOf: *ref_746
    pricingTemplate:
      type: object
      title: Pricing intent
      required: *ref_747
      properties: *ref_748
    pricingAgreement:
      type: object
      title: Pricing agreement
      allOf: *ref_749
    pricing:
      type: object
      description: Object that contains HATEOAS links to the pricing information that we apply to the processing account.
      discriminator: *ref_750
      oneOf: *ref_751
    contact:
      type: object
      title: contact
      required: *ref_290
      properties: *ref_291
    createProcessingAccount:
      required: *ref_280
      type: object
      properties: *ref_281
    createMerchantAccount:
      type: object
      title: create merchant platform
      required: *ref_752
      properties: *ref_753
    fundingAccountSummary:
      type: object
      title: funding account summary
      properties: *ref_754
    funding:
      type: object
      description: Object that contains funding information for the processing account, including funding schedules, funding fees, and details of funding accounts.
      allOf: *ref_755
    processingAccount:
      required: *ref_282
      type: object
      properties: *ref_283
    paginatedProcessingAccounts:
      type: object
      title: paginated processing accounts
      allOf: *ref_756
    paginatedContacts:
      type: object
      title: paginated Contacts
      allOf: *ref_757
    interchangePlusTiered3AmexOptBlue:
      type: object
      title: American Express OptBlue
      required: *ref_758
      properties: *ref_759
    interchangePlusTiered3AmexDirect:
      type: object
      title: American Express Direct
      required: *ref_760
      properties: *ref_761
    interchangePlusTiered3:
      type: object
      title: Interchange Plus with three tiers
      description: Object that contains information about Interchange Plus with three tiers.
      properties: *ref_762
      required: *ref_763
    rewardPay:
      type: object
      title: RewardPay Plan
      description: Object that contains information about RewardPay.
      properties: *ref_764
      required: *ref_765
    gatewayUs:
      type: object
      description: Object that contains information about the gateway fees.
      title: gateway fees
      properties: *ref_766
      required: *ref_767
    pricingAgreementUs4.0:
      type: object
      title: US pricing agreement version 4.0
      description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
      required: *ref_768
      properties: *ref_769
    paginatedOwners:
      type: object
      title: paginated Owners
      allOf: *ref_770
    pricingAgreementReminder:
      description: Object that contains information about the pricing agreement reminder.
      type: object
      required: *ref_309
      properties: *ref_310
    schemas-timezone:
      type: string
      description: |
        Time zone of the terminal. 
        **Note**: If you don't send a value for this parameter, we use the time zone of the processing account.
      enum: *ref_771
      example: America/Chicago
      maxLength: 28
    automaticBatchClose:
      type: object
      title: Automatic Batch Close
      description: Indicates how the merchant batches their transactions.
      properties: *ref_772
      required: *ref_773
    manualBatchClose:
      type: object
      title: Manual Batch Close
      description: Indicates how the merchant batches their transactions.
      properties: *ref_774
      required: *ref_775
    orderItem:
      type: object
      properties: *ref_313
      required: *ref_314
    processingTerminalSummary:
      type: object
      description: Object that contains information about the processing terminal.
      properties: *ref_776
      required: *ref_777
    links:
      type: object
      description: Array of links related to your order items.
      properties: *ref_778
    terminalOrder:
      type: object
      properties: *ref_318
      required: *ref_319
    trainingProvider: *ref_779
    properties-shipping: *ref_780
    createTerminalOrder:
      type: object
      properties: *ref_781
      required: *ref_782
    payrocGateway:
      type: object
      description: Object that contains the gateway settings for the solution.
      properties: *ref_783
      required: *ref_784
    schemas-automaticBatchClose:
      type: object
      title: Automatic Batch Close
      description: Indicates how authorized transactions will be batched for settlement
      properties: *ref_785
      required: *ref_786
    schemas-manualBatchClose:
      type: object
      title: Manual Batch Close
      description: Indicates how authorized transactions will be batched for settlement
      properties: *ref_787
      required: *ref_788
    tipProcessingEnabled:
      type: object
      description: Tip settings
      properties: *ref_789
      required: *ref_790
    tipProcessingDisabled:
      type: object
      description: Tip settings
      properties: *ref_791
      required: *ref_792
    ebtEnabled:
      type: object
      description: Object that contains details about EBT transactions.
      properties: *ref_793
      required: *ref_794
    ebtDisabled:
      type: object
      description: Object that contains details about EBT transactions.
      properties: *ref_795
      required: *ref_796
    communicationType:
      type: string
      description: Indicates how the device communicates with its host.
      enum: *ref_797
      maxLength: 9
    processingTerminal:
      type: object
      properties: *ref_320
      required: *ref_321
    paginatedProcessingTerminals:
      type: object
      title: paginated Processing Terminals
      allOf: *ref_798
    tsys:
      type: object
      properties: *ref_799
      required: *ref_800
    hostConfiguration:
      type: object
      description: Object that contains the terminal's host configuration.
      properties: *ref_801
      required: *ref_802
    webhook:
      type: object
      properties: *ref_803
      required: *ref_804
    notification:
      type: object
      title: Notification method
      oneOf: *ref_805
      discriminator: *ref_806
    eventSubscription:
      type: object
      title: Event Subscription
      properties: *ref_324
      required: *ref_325
    paginatedEventSubscriptions:
      type: object
      title: paginated event subscriptions
      allOf: *ref_807
    achDeposit:
      type: object
      title: ACH deposit
      description: Object that contains information about the ACH deposit.
      properties: *ref_326
    achDepositSummary:
      type: object
      title: ACH deposit summary
      description: Object that contains information about the ACH deposit.
      properties: *ref_808
      example: *ref_809
    achDepositFee:
      type: object
      title: ACH deposit fee
      description: Object that contains information about the ACH deposit fee.
      properties: *ref_810
  examples:
    paginatedFundRecipients:
      summary: Paginated funding recipients.
      description: Paginated list of funding recipients.
      value: *ref_811
    noActivity:
      summary: No records found
      description: Valid request, but no records match the criteria.
      value: *ref_55
    validatorError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_11
    notAuthorized:
      summary: Not Authorized
      description: Your identity could not be verified
      value: *ref_812
    forbidden:
      summary: Forbidden
      description: You do not have the required permission
      value: *ref_813
    apiError:
      summary: Api error
      description: Unable to process your request.
      value: *ref_814
    idempotentKeyMissing:
      summary: Idempotency key missing
      description: Idempotency key must be supplied
      value: *ref_26
    kycCheckFailed:
      summary: KYC check failed
      description: KYC check failed
      value: *ref_17
    notAcceptable:
      summary: Not acceptable
      description: Requested representation not supported
      value: *ref_815
    idempotentKeyInUse:
      summary: Idempotency key in use
      description: Idempotency key in use
      value: *ref_29
    fundingRecipient:
      summary: Funding recipient.
      description: Funding recipients.
      value: *ref_816
    notFound:
      summary: Not found
      description: Resource could not be found
      value: *ref_317
    fundingAccounts:
      summary: List of funding accounts
      description: List of funding accounts.
      value: *ref_817
    fundingAccount:
      summary: Funding account
      description: Funding accounts.
      value: *ref_818
    listFundingAccountExample:
      summary: Paginated funding accounts
      value: *ref_819
    noResults:
      summary: No results found
      description: No results found
      value: *ref_820
    fundingAccountExample:
      summary: Masked funding account example.
      value: *ref_821
    retrievedOwner:
      summary: Retrieve owner
      description: Retrieve a specific owner.
      value: *ref_822
    updateOwner:
      summary: Update owner
      description: Update a specific owner.
      value: *ref_823
    paginatedPricingIntent:
      summary: Paginated pricing intent
      description: Example of a paginated pricing intent.
      value: *ref_824
    interchangePlus:
      summary: Interchange Plus
      description: Create a pricing intent.
      value: *ref_825
    interchangePlusPlus:
      summary: Interchange Plus Plus
      description: Create a pricing intent.
      value: *ref_826
    tiered3:
      summary: Tiered 3
      description: Create a pricing intent.
      value: *ref_827
    tiered4:
      summary: Tiered 4
      description: Create a pricing intent.
      value: *ref_828
    tiered6:
      summary: Tiered 6
      description: Create a pricing intent.
      value: *ref_829
    flatRate:
      summary: Flat Rate
      description: Create a pricing intent.
      value: *ref_830
    consumerChoice:
      summary: Consumer Choice
      description: Create a pricing intent.
      value: *ref_831
    rewardPayChoice:
      summary: Reward Pay Choice
      description: Create a pricing intent.
      value: *ref_832
    pricingIntent:
      summary: Pricing intent
      description: Pricing intent
      value: *ref_57
    modifyPricingIntent:
      summary: Create pricing intent
      description: Create a pricing intent.
      value: *ref_833
    patchPricingIntentRealistic:
      summary: Partially update pricing intent
      description: |
        Partially update an existing pricing intent.

        Structure your request to follow the RFC 6902 standard.
      value: *ref_834
    patchOperations:
      summary: Example patch operations that apply the RFC 6902 standard
      description: |
        Example patch operations that apply the RFC 6902 standard.
      value: *ref_102
    listInstructionsExample:
      summary: Paginated instructions list
      value: *ref_835
    parameterError:
      summary: Bad request
      description: One or more validation errors occurred.
      value: *ref_836
    paginationError:
      summary: Bad request
      description: One or more validation errors occurred
      value: *ref_837
    outsideRecordRange:
      summary: Bad request
      description: Requested data outside allowed range.
      value: *ref_838
    newInstructionAccepted:
      summary: New instruction accepted.
      value: *ref_839
    insufficientFunds:
      summary: Insufficient funds
      description: You do not have enough funds to complete the request.
      value: *ref_59
    fundingAccountsRestricted:
      summary: Funding accounts restricted
      description: Funding accounts restricted.
      value: *ref_61
    instructionIdError:
      summary: Bad request
      description: One or more validation errors occurred.
      value: *ref_60
    canNotBeModified:
      summary: Cannot be modified
      description: Resource cannot be modified.
      value: *ref_62
    listBalancesExample:
      summary: Paginated list of merchant balances
      description: Paginated list of merchant balances.
      value: *ref_840
    paginatedList:
      summary: Paginated activity records
      description: Valid payfac account with activity for date range.
      value: *ref_841
    examples-parameterError:
      summary: Bad request
      description: One or more validation errors occurred.
      value: *ref_842
    paginatedBatches:
      summary: Paginated batches
      value: *ref_843
    components-examples-parameterError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_69
    examples-paginationError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_70
    batchIdError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_66
    paginatedTransactions:
      summary: Paginated transactions
      value: *ref_844
    transactionIdError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_845
    paginatedAuthorizations:
      summary: Paginated authorizations
      value: *ref_846
    paginatedDisputes:
      summary: Paginated disputes
      value: *ref_847
    paginatedPaymentLinks:
      summary: Payment links
      description: Paginated list of payment links
      value: *ref_848
    multiUsePaymentLinkRequest:
      summary: Multi-use payment link.
      description: Create a multi-use payment link.
      value: *ref_849
    singleUsePaymentLinkRequest:
      summary: Single-use payment link.
      description: Create a single-use payment link.
      value: *ref_850
    paymentLinkResponse:
      summary: Payment Link
      description: Active multi-use payment link.
      value: *ref_97
    resourceExists:
      summary: Resource already exists
      description: Resource already exists
      value: *ref_851
    unsupportedMediaType:
      summary: Unsupported media type
      description: The payload is in an unsupported format.
      value: *ref_852
    patchPaymentLinkRealistic:
      summary: Partially update payment link
      description: |
        Partially update an existing payment link.  
        Structure your request to follow the RFC 6902 standard.
      value: *ref_853
    deactivatedPaymentLink:
      summary: Payment link
      description: Deactivated multi-use payment link.
      value: *ref_854
    paginatedSharingEvents:
      summary: Sharing events
      description: Paginated list of payment link sharing events
      value: *ref_855
    sharePaymentLinkRequest:
      summary: Share a payment link.
      description: Share a payment link.
      value: *ref_856
    paymentLinkShareEvent:
      summary: Payment link sharing event.
      description: Payment link sharing event
      value: *ref_857
    paginatedPaymentPlan:
      summary: Payment Plan
      description: Payment Plan
      value: *ref_858
    paymentPlanRequest:
      summary: Payment Plan
      description: Payment Plan
      value: *ref_859
    paymentPlanResponse:
      summary: Payment Plan
      description: Payment Plan
      value: *ref_115
    patchPaymentPlanRealistic:
      summary: Update payment plan
      description: |
        Make changes to an existing payment plan.

        Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
      value: *ref_860
    paginatedSubscription:
      summary: Paginated Subscription
      description: Example of Paginated Subscription
      value: *ref_861
    subscriptionRequest:
      summary: Subscription
      description: Subscription
      value: *ref_862
    subscriptionWithSurchargeResponse:
      summary: Subscription with surcharge
      description: Subscription with surcharge
      value: *ref_128
    subscriptionWithConvenienceFeeResponse:
      summary: Subscription with convenience fee
      description: Subscription with convenience fee
      value: *ref_129
    patchSubscriptionRealistic:
      summary: Update subscription
      description: |
        Make changes to a subscription.

        Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
      value: *ref_863
    deactivateSubscription:
      summary: Deactivate subscription
      description: Deactivate a subscription
      value: *ref_864
    subscriptionPaymentRequest:
      summary: Subscription manual payment
      description: Subscription manual payment
      value: *ref_865
    subscriptionPaymentResponse:
      summary: Subscription manual payment
      description: Subscription manual payment
      value: *ref_866
    paginatedSecureToken:
      summary: Paginated Secure Token
      description: Paginated Secure Token
      value: *ref_867
    secureTokenRequest:
      summary: Secure Token
      description: Secure Token
      value: *ref_868
    secureTokenResponse:
      summary: Secure Token
      description: Secure Token
      value: *ref_154
    patchSecureTokenRealistic:
      summary: Update secure token
      description: |
        Update the customer's payment details that are represented by the secure token.

        Structure your request to follow the [RFC 6902](https://datatracker.ietf.org/doc/html/rfc6902) standard.
      value: *ref_869
    accountUpdateRequest:
      summary: Update account details
      description: Account update request by single use token
      value: *ref_870
    payloadTooLarge:
      summary: Payload too large
      description: The payload submitted is too large
      value: *ref_871
    singleUseTokenRequest:
      summary: Create single-use token
      description: Create a single-use token. The token expires after 30 minutes.
      value: *ref_872
    singleUseTokenResponse:
      summary: Create single-use token
      description: Create a single-use token. The token expires after 30 minutes.
      value: *ref_873
    createSessionRequest:
      summary: Create session request
      description: Create session request.
      value: *ref_874
    createSessionResponse:
      summary: Create session response
      description: Create session response.
      value: *ref_875
    applePaySessions:
      summary: Apple Pay session
      description: Start a session with Apple to accept a payment with Apple Pay.
      value: *ref_876
    applePayResponseSession:
      summary: Apple Pay session response
      description: Wrapper for the content that Apple returns after starting the Apple Pay session.
      value: *ref_877
    paginatedPayment:
      summary: Payment
      description: Payment
      value: *ref_878
    paymentRequest:
      summary: Card Payment
      description: Payment
      value: *ref_879
    applePaySaleRequest:
      summary: Apple Pay Payment
      value: *ref_880
    paymentResponse:
      summary: Payment
      description: Payment
      value: *ref_191
    applePaySaleResponse:
      summary: Apple Pay Payment
      value: *ref_881
    adjustPaymentRequest:
      summary: Adjust Payment
      description: Adjust Payment
      value: *ref_882
    adjustPaymentResponse:
      summary: Adjust Payment
      description: Adjust Payment
      value: *ref_883
    paymentCaptureRequest:
      summary: Payment capture
      description: Capture a payment with itemized breakdown
      value: *ref_884
    reversalPaymentRequest:
      summary: Reversal Payment
      description: Reversal Payment
      value: *ref_885
    reversalPaymentResponse:
      summary: Reversal Payment
      description: Reversal Payment
      value: *ref_886
    refundPaymentRequest:
      summary: Refund Payment
      description: Refund Payment
      value: *ref_887
    refundPaymentResponse:
      summary: Refund Payment
      description: Refund Payment
      value: *ref_888
    paymentInstructionRequest:
      summary: Payment Instruction
      description: Submit an instruction for initiating a payment on a physical device.
      value: *ref_889
    paymentInstructionInProgress:
      summary: Payment instruction
      description: Object that contains information about the progress of the payment instruction.
      value: *ref_890
    paymentInstruction:
      summary: Payment instruction
      description: Object that contains information about the progress of the payment instruction.
      value: *ref_891
    paymentInstructionCompleted:
      summary: Payment instruction already completed
      description: Payment instruction already completed
      value: *ref_892
    paymentInstructionFailed:
      summary: Payment instruction failed
      description: Payment instruction failed
      value: *ref_893
    paginatedRefund:
      summary: Paginated Refund
      description: Paginated Refund
      value: *ref_894
    refundRequest:
      summary: Refund
      description: Refund
      value: *ref_895
    refundResponse:
      summary: Refund
      description: Refund
      value: *ref_224
    adjustRefundRequest:
      summary: Adjust Refund
      description: Adjust Refund
      value: *ref_896
    adjustRefundResponse:
      summary: Adjust Refund
      description: Adjust Refund
      value: *ref_897
    reverseRefund:
      summary: Reverse Refund
      description: Reverse Refund
      value: *ref_898
    refundInstructionRequest:
      summary: Refund instruction
      description: Submit an instruction for initiating a refund on a physical device.
      value: *ref_899
    refundInstructionInProgress:
      summary: Refund instruction
      description: Object that contains information about the progress of the refund instruction.
      value: *ref_900
    refundInstruction:
      summary: Refund instruction
      description: Object that contains information about the progress of the refund instruction.
      value: *ref_901
    refundInstructionCompleted:
      summary: Refund instruction already completed
      description: Refund instruction already completed
      value: *ref_902
    refundInstructionFailed:
      summary: Refund instruction failed
      description: Refund instruction failed
      value: *ref_903
    cardVerificationRequest:
      summary: Card Verification
      description: Card Verification
      value: *ref_904
    cardVerificationResponse:
      summary: Card Verification
      description: Card Verification
      value: *ref_905
    cardBalanceRequest:
      summary: Card Balance
      description: Card Balance
      value: *ref_906
    cardBalanceResponse:
      summary: Card Balance
      description: Card Balance
      value: *ref_907
    binLookupRequest:
      summary: BIN lookup
      description: BIN lookup
      value: *ref_908
    binLookupResponse:
      summary: BIN lookup
      description: BIN lookup
      value: *ref_909
    fxRateRequest:
      summary: Fx-Rate
      description: Fx-Rate
      value: *ref_910
    fxRateResponse:
      summary: Fx-Rate
      description: Fx-Rate
      value: *ref_911
    paginatedBankTransferPayment:
      summary: Bank Transfer Payment
      description: Bank Transfer Payment
      value: *ref_912
    bankTransferPaymentRequestStoreTokenRequest:
      summary: Store Token Bank Transfer Payment
      description: Bank Transfer Payment with ACH payload and token storage
      value: *ref_913
    bankTransferPaymentResponseStoreToken:
      summary: Store Token Bank Transfer Payment
      description: Bank Transfer Payment with ACH payload and token storage
      value: *ref_248
    reverseBankTransferPayment:
      summary: Reverse Bank Transfer Payment
      description: Reverse Bank Transfer Payment
      value: *ref_914
    refundBankTransferPaymentRequest:
      summary: Refund Bank Transfer Payment
      description: Refund Bank Transfer Payment
      value: *ref_915
    refundBankTransferPaymentResponse:
      summary: Reverse Bank Transfer Payment
      description: Reverse Bank Transfer Payment
      value: *ref_916
    representmentBankTransferPaymentRequest:
      summary: Representment Bank Transfer Payment
      description: Representment Bank Transfer Payment
      value: *ref_917
    paginatedBankTransferUnreferencedRefundResponse:
      summary: Paginated Bank Transfer Unreferenced Refund
      description: Paginated Bank Transfer Unreferenced Refund
      value: *ref_918
    bankTransferUnreferencedRefundRequest:
      summary: Bank Transfer Unreferenced Refund
      description: Bank Transfer Unreferenced Refund
      value: *ref_919
    bankTransferUnreferencedRefundResponse:
      summary: Bank Transfer Unreferenced Refund
      description: Bank Transfer Unreferenced Refund
      value: *ref_261
    reverseBankTransferUnreferencedRefundResponse:
      summary: Bank Transfer Unreferenced Refund
      description: Bank Transfer Unreferenced Refund
      value: *ref_920
    bankAccountVerificationRequestPad:
      summary: PAD Bank Account Verification Request
      description: Bank Account Verification Request for PAD
      value: *ref_921
    bankAccountVerificationRequestAch:
      summary: ACH Bank Account Verification Request
      description: Bank Account Verification Request for ACH
      value: *ref_922
    bankAccountVerificationResponse:
      summary: Bank Account Verification Response
      description: Bank Account Verification Response
      value: *ref_923
    listMerchantPlatforms:
      summary: Paginated list of merchant platforms
      description: Retrieve a list of merchant platforms associated with your account.
      value: *ref_924
    createMerchantPlatform:
      summary: Create merchant platform
      description: Create a merchant platform.
      value: *ref_925
    merchantPlatformCreated:
      summary: Created merchant platform
      description: New merchant platform created
      value: *ref_926
    processingAccountFailed:
      summary: Failed processing account
      description: We successfully created the merchant platform, but failed to add one or more processing accounts.
      value: *ref_927
    fundingAccountsLimitReached:
      summary: Funding accounts limit reached
      description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
      value: *ref_284
    tooManyControlProngs:
      summary: Too many control prongs
      description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
      value: *ref_285
    noControlProng:
      summary: No control prong or authorized signatory
      description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
      value: *ref_286
    dailyDiscountAndRewardPayConflict:
      summary: Cannot select Daily Discount and RewardPayChoice at the same time.
      description: You can't select Daily Discount with a RewardPayChoice pricing plan. To select Daily Discount, choose a different pricing plan.
      value: *ref_287
    taxIdInUse:
      summary: Tax ID in use
      description: The tax ID supplied is already in use.
      value: *ref_928
    nationalIdInUse:
      summary: National ID in use
      description: One or more supplied national IDs are not unique. All national IDs must be unique.
      value: *ref_929
    retrievedMerchantPlatforms:
      summary: Retrieve merchant platform
      description: Retrieve a merchant platform.
      value: *ref_930
    listProcessingAccounts:
      summary: Paginated list of processing account
      description: Retrieve processing accounts associated with a merchant platform.
      value: *ref_931
    createProcessingAccount:
      summary: Create merchant platform
      description: Create a merchant platform.
      value: *ref_932
    processingAccountCreated:
      summary: Retrieve merchant platform
      description: Retrieve a merchant platform.
      value: *ref_933
    retrieveProcessingAccount:
      summary: Retrieve processing account
      description: Retrieve a specific processing account.
      value: *ref_934
    listProcessingAccountFundingAccounts:
      summary: List of funding accounts
      description: List of funding accounts associated with a processing account.
      value: *ref_935
    listContactsPaginated:
      summary: Paginated list of processing account contacts
      description: List of contacts associated with a processing account.
      value: *ref_936
    retrieveProcessingAccountPricingAgreement:
      summary: Get processing account pricing agreement
      description: Retrieve a pricing agreement for a processing account.
      value: *ref_937
    listProcessingAccountOwners:
      summary: Paginated list of processing account owners
      description: Retrieve owners associated with a processing account.
      value: *ref_938
    createReminderForProcessingAccount:
      summary: Create reminder for processing account
      description: |
        When you create a processing account, we send a copy of the pricing agreement to the merchant to sign. You can choose to send them a copy of the pricing agreement by email, or you can generate a link to the pricing agreement.<br/>  
        If you requested the merchant's signature by email and they don't respond, use our Reminders endpoint to create a reminder and to send another email.<br/>  
        **Note:** You can use the Reminders endpoint only if you request the merchant's signature by email. If you generate a link to the pricing agreement, you can't use the Reminders endpoint.  
      value: *ref_939
    reminderCreated:
      summary: Reminder created
      description: Reminder created.
      value: *ref_940
    notRequestedByEmail:
      summary: Not requested by email
      description: We couldn't resend the email to the merchant because you didn't originally choose to send the information by email.
      value: *ref_941
    contractAlreadySigned:
      summary: Contract already signed
      description: We couldn’t resend the email because the merchant already signed the contract.
      value: *ref_942
    noPricingAgreementExistsForTheProcessingAccount:
      summary: No pricing agreement exists for the processing account
      description: We couldn’t resend the email because there is no pricing agreement for the processing account.
      value: *ref_943
    listTerminalOrders:
      summary: Paginated list of Terminal Orders
      description: Retrieve terminal orders associated with a processing account.
      value: *ref_944
    createTerminalOrder:
      summary: Terminal order
      description: |
        Use this method to order and configure terminals for a processing account. When you create an order, you specify the gateway settings, device settings, and application settings for the terminals. 
        **Note**: You need the ID of the merchant's processing account before you can create an order. If you don't know the processingAccountId, go to [Retrieve a Merchant Platform.](#getMerchantAccounts)
      value: *ref_945
    terminalOrderCreated:
      summary: Terminal order
      description: Terminal order
      value: *ref_946
    listProcessingTemrinalsPaginated:
      summary: Paginated list of processing terminals
      description: List of processing terminals associated with a processing account.
      value: *ref_947
    retrieveProcessingTerminal:
      summary: Retrieve processing terminal
      description: Retrieve a specific processing terminal.
      value: *ref_948
    contact:
      summary: Contact object
      description: Contact object
      value: *ref_949
    updateContact:
      summary: Update contact
      description: Update a specific contact.
      value: *ref_950
    paginatedEventSubscriptions:
      summary: Paginated list of Event subscriptions
      description: Example of a paginated list of event subscriptions
      value: *ref_951
    createWebhookEventSubscription:
      summary: Create event subscription
      description: Create an event subscription
      value: *ref_952
    eventSubscriptionCreated:
      summary: Event subscription created
      description: Example of a created event subscription.
      value: *ref_953
    eventSubscription:
      summary: Event subscription
      description: Example of an event subscription.
      value: *ref_954
    updateEventSubscription:
      summary: Update event subscription
      description: Update an event subscription
      value: *ref_955
    patchEventSubscriptionRealistic:
      summary: Partially update event subscription
      description: |
        Partially update an existing event subscription.

        Structure your request to follow the RFC 6902 standard.
      value: *ref_956
    patchEventSubscription:
      summary: Patched event subscription
      description: Example of a patched event subscription.
      value: *ref_957
    terminalOrder:
      summary: Terminal order
      description: Terminal order
      value: *ref_958
    paginatedAchDeposits:
      summary: Paginated ACH deposits
      value: *ref_959
    achDepositIdError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_960
    paginatedAchDepositFees:
      summary: Paginated ACH deposit fees
      value: *ref_961
  responses:
    '400':
      description: Invalid request
      content: *ref_15
    '401':
      description: Identity could not be verified
      content: *ref_12
    '403':
      description: Do not have permissions to perform this action
      content: *ref_13
    '404':
      description: Resource not found
      content: *ref_18
    '406':
      description: Not acceptable
      content: *ref_19
    '409':
      description: Conflict
      content: *ref_103
    '413':
      description: Payload too large
      content: *ref_962
    '415':
      description: Unsupported media type
      content: *ref_104
    '500':
      description: An error has occured
      content: *ref_14
  headers:
    location:
      description: URI reference to created resource.
      schema: *ref_24
      examples: *ref_25
    headers-location:
      description: URI reference to created resource
      schema: *ref_963
x-tagGroups:
  - name: Boarding
    tags:
      - Contacts
      - Merchant platforms
      - Owners
      - Pricing intents
      - Processing accounts
      - Processing terminals
      - Terminal orders
  - name: Payroc Cloud
    tags:
      - Payment instructions
      - Refund instructions
  - name: Payments
    tags:
      - Apple Pay session
      - Bank accounts
      - Bank transfer payments
      - Bank transfer refunds
      - Cards
      - Currency conversion
      - Hosted Fields
      - Payments
      - Payment links
      - Payment plans
      - Refunds
      - Secure tokens
      - Single use tokens
      - Subscriptions
  - name: Funding
    tags:
      - Funding accounts
      - Funding instructions
      - Funding recipients
      - Funding activity
  - name: Reporting
    tags:
      - Settlement
  - name: Notifications
    tags:
      - Event Subscriptions
