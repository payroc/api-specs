openapi: 3.0.3
info:
  version: '1'
  title: Payroc API
  description: Api for accessing Payroc services
  contact:
    name: Payroc Helpdesk
    url: https://docs.payroc.com/api
    email: helpdesk@payroc.com
servers:
  - url: https://api.payroc.com/v1
    description: External URL
security:
  - bearerAuth: []
tags:
  - name: Bank accounts
    description: Validate bank account information.
  - name: Bank transfer payments
    description: Take bank-transfer payments.
  - name: Bank transfer refunds
    description: Return payments to customers' bank accounts.
  - name: Cards
    description: Validate card information.
  - name: Contacts
    description: Individuals who serve as points of contact for the business.
  - name: Currency conversion
    description: Offer dynamic currency conversion to customers.
  - name: Funding accounts
    description: Financial accounts associated with entities.
  - name: Funding activity
    description: Activity associated with a payfac account.
  - name: Funding instructions
    description: Instructions on how to split fund between recipients.
  - name: Funding recipient
    description: Entities that can receive funding but not take payments
  - name: Merchant platform
    description: Legal entity
  - name: Owners
    description: Individuals who own or control the business.
  - name: Payment instructions
    description: Submit instructions for initiating payments on physical devices running semi-integrated apps.
  - name: Payment plans
    description: Create and manage payment plans.
  - name: Payments
    description: Take card payments.
  - name: Pricing intents
    description: Create and manage pricing intents.
  - name: Processing account
    description: Create and manage processing accounts.
  - name: Refund instructions
    description: Submit instructions for initiating refunds on physical devices running semi-integrated apps.
  - name: Refunds
    description: Return payments to customers.
  - name: Secure tokens
    description: Save customers' payment details.
  - name: Settlement
    description: Settlement information
  - name: Single use tokens
    description: Create temporary single-use tokens.
  - name: Subscriptions
    description: Subscribe customers to payment plans.
paths:
  /funding-recipients:
    summary: Create and manage funding recipients.
    post:
      tags:
        - Funding recipient
      summary: Create funding recipient
      description: Create a funding recipient.
      operationId: createFundingRecipient
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: &ref_21
            type: string
            example: 8e03978e-40d5-43e8-bc93-6894a57f9324
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_146
                - address
                - contactInformation
                - recipientType
                - taxId
                - owners
                - fundingAccounts
                - doingBuinessAs
              type: object
              title: create funding recipient
              properties: &ref_147
                recipientId:
                  type: integer
                  readOnly: true
                  example: 1
                status:
                  type: string
                  readOnly: true
                  example: approved
                  enum:
                    - approved
                    - rejected
                    - pending
                createdDate:
                  type: string
                  format: date-time
                  example: '2020-09-08T12:00:00.000Z'
                  readOnly: true
                lastModifiedDate:
                  type: string
                  format: date-time
                  example: '2020-09-08T12:00:00.000Z'
                  readOnly: true
                recipientType:
                  type: string
                  description: Type or legal structure of the funding recipient.
                  example: privateCorporation
                  enum:
                    - privateCorporation
                    - publicCorporation
                    - nonProfit
                    - government
                    - privateLlc
                    - publicLlc
                    - privatePartnership
                    - publicPartnership
                    - soleProprietor
                taxId:
                  type: string
                  description: Employer identification number (EIN) or Social Security number (SSN).
                  example: '123456789'
                charityId:
                  type: string
                  description: Government identifier of the charity.
                doingBusinessAs:
                  type: string
                  description: Legal name that the business operates under.
                address:
                  type: object
                  description: Address of the funding recipient.
                  oneOf:
                    - required: &ref_0
                        - city
                        - country
                        - address1
                        - postalCode
                        - state
                      type: object
                      title: address
                      description: Object that contains information about the address.
                      properties: &ref_1
                        address1:
                          type: string
                          description: Address Line.
                          example: 1 Example Ave.
                          maxLength: 150
                        address2:
                          type: string
                          description: Address Line.
                          example: null
                          maxLength: 150
                        address3:
                          type: string
                          description: Address Line.
                          example: null
                          maxLength: 150
                        city:
                          type: string
                          description: City.
                          example: Example city
                          maxLength: 50
                        state:
                          type: string
                          description: Name or postal abbreviation of the state.
                          example: Illinois
                          maxLength: 50
                        country:
                          maxLength: 2
                          minLength: 2
                          type: string
                          description: Two letter ISO 3166-1 country code.
                          example: US
                        postalCode:
                          type: string
                          description: Zip Code or Postcode.
                          example: '60056'
                          maxLength: 10
                contactMethods:
                  type: array
                  minItems: 1
                  xml:
                    wrapped: true
                  description: Array of contactMethod objects that you can use to add contact methods for the funding recipient. You must provide at least an email address.
                  items:
                    oneOf: &ref_2
                      - required: &ref_132
                          - type
                          - value
                        type: object
                        title: Email contact method
                        properties: &ref_133
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - email
                          value:
                            type: string
                            description: Email address.
                            maxLength: 50
                            example: joe@example.com
                      - required: &ref_134
                          - type
                          - value
                        type: object
                        title: Phone number contact method
                        properties: &ref_135
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - phone
                          value:
                            type: string
                            description: Phone Number.
                            maxLength: 15
                            example: 2025550138
                      - required: &ref_136
                          - type
                          - value
                        type: object
                        title: Mobile number contact method
                        properties: &ref_137
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - mobile
                          value:
                            type: string
                            description: Mobile Number.
                            maxLength: 15
                            example: 9876543210
                      - required: &ref_138
                          - type
                          - value
                        type: object
                        title: Fax number contact method
                        properties: &ref_139
                          type:
                            type: string
                            description: Type of contact method.
                            enum:
                              - fax
                          value:
                            type: string
                            description: Fax Number.
                            maxLength: 15
                            example: 2025550144
                  example:
                    - type: email
                      value: david.smith@example.com
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: '[Metadata](/api/metadata) object you can use to include custom data with your request.'
                  example:
                    customerId: '2345'
                owners:
                  minItems: 1
                  description: Array of owner objects that you can use to add owners to the funding recipient.
                  type: array
                  xml:
                    wrapped: true
                  items:
                    xml:
                      name: owners
                    type: object
                    title: owner
                    required: &ref_27
                      - firstName
                      - lastName
                      - dateOfBirth
                      - identifiers
                      - contactMethods
                      - relationship
                      - address
                    properties: &ref_28
                      ownerId:
                        type: integer
                        description: Unique identifier of the owner.
                        readOnly: true
                        example: 1543
                      firstName:
                        type: string
                        description: Owner's first name.
                        example: David
                        maxLength: 50
                      middleName:
                        type: string
                        description: Owner's middle name.
                        example: scott
                        maxLength: 50
                      lastName:
                        type: string
                        description: Owner's last name.
                        example: Simpson
                        maxLength: 50
                      dateOfBirth:
                        type: string
                        format: date
                        description: Owner's date of birth. The format of this value is **YYYY-MM-DD**.
                        example: '1964-03-22'
                      address:
                        required: *ref_0
                        type: object
                        title: address
                        description: Object that contains information about the address.
                        properties: *ref_1
                      identifiers:
                        minItems: 1
                        type: array
                        xml:
                          wrapped: true
                        description: Array of identifier objects.
                        example:
                          - type: nationalId
                            value: xxx-xx-4320
                        items:
                          required: &ref_92
                            - type
                            - value
                          type: object
                          title: identifier
                          properties: &ref_93
                            type:
                              type: string
                              description: Type of ID provided to verify identity.
                              enum:
                                - nationalId
                            value:
                              type: string
                              description: Social Security Number (SSN) or Social Insurance Number (SIN).
                      contactMethods:
                        type: array
                        minItems: 1
                        maxItems: 4
                        uniqueItems: true
                        description: |
                          Array of contactMethod objects.  
                          **Note**: If you are adding information about an owner, you must provide at least an email address. If you are adding information about a contact, you must provide at least a contact number.   
                        items:
                          oneOf: *ref_2
                      relationship:
                        description: Object that contains information about the owner's relationship to the business.
                        allOf:
                          - required: &ref_141
                              - isControlProng
                            type: object
                            title: Owner relationship
                            properties: &ref_142
                              equityPercentage:
                                type: number
                                description: Percentage of the business that the owner holds.
                                format: percentage
                                example: 35.4
                                default: 0
                              title:
                                type: string
                                description: Owner's job title within the business.
                              isControlProng:
                                type: boolean
                                description: Indicates if the owner is a control prong within the business. Only one control prong should be identified.
                              isAuthorizedSignatory:
                                type: boolean
                                example: false
                                description: Indicates if the owner is an authorized signatory within the business.
                            description: Object that contains information about the owner's relationship to the business.
                fundingAccounts:
                  minItems: 1
                  description: Array of fundingAccount objects that you can use to add funding accounts to the funding recipient.
                  type: array
                  xml:
                    wrapped: true
                  items:
                    xml:
                      name: fundingAccount
                    required: &ref_19
                      - nameOnAccount
                      - paymentMethods
                      - type
                      - use
                    type: object
                    title: funding account
                    properties: &ref_20
                      fundingAccountId:
                        type: integer
                        description: Unique identifier of the funding account.
                        readOnly: true
                        example: 123
                      createdDate:
                        type: string
                        description: Date the funding account was created.
                        format: date-time
                        example: '2020-09-08T12:00:00.000Z'
                        readOnly: true
                      lastModifiedDate:
                        type: string
                        description: Date the funding account was last modified.
                        format: date-time
                        example: '2020-09-08T12:00:00.000Z'
                        readOnly: true
                      status:
                        type: string
                        description: Status of the funding account.
                        readOnly: true
                        example: pending
                        enum:
                          - approved
                          - rejected
                          - pending
                          - hold
                      type:
                        type: string
                        description: Type of funding account.
                        enum:
                          - checking
                          - savings
                          - generalLedger
                      use:
                        type: string
                        description: |
                          Indicates if we send funds or withdraw funds from the account.  
                          - `credit` - Send funds to the account.  
                          - `debit` - Withdraw funds from the account.  
                          - `creditAndDebit` - Send funds and withdraw funds from the account.
                        enum:
                          - credit
                          - debit
                          - creditAndDebit
                      nameOnAccount:
                        type: string
                        description: Name of the account holder.
                        example: Joe Bloggs
                      paymentMethods:
                        description: Array of paymentMethod objects.
                        uniqueItems: true
                        type: array
                        xml: &ref_144
                          wrapped: true
                        items: &ref_145
                          title: payment method
                          xml:
                            name: paymentMethod
                          oneOf:
                            - type: object
                              title: ACH payment method
                              properties: &ref_143
                                type:
                                  type: string
                                  description: Payment method that we use to send funds to the account.
                                  enum:
                                    - ach
                                value:
                                  required:
                                    - accountNumber
                                    - routingNumber
                                  type: object
                                  description: Object that contains information about the funding account.
                                  properties:
                                    routingNumber:
                                      maxLength: 9
                                      minLength: 9
                                      type: string
                                      description: Routing number of the funding account.
                                      example: '123456789'
                                    accountNumber:
                                      maxLength: 12
                                      minLength: 9
                                      type: string
                                      description: Account number of the funding account.
                                      example: '1234567890'
                      metadata:
                        type: object
                        additionalProperties:
                          type: string
                        description: '[Metadata](/api/metadata) object you can use to include custom data with your request.'
                        example:
                          internalRef: '2345'
                      links:
                        readOnly: true
                        type: array
                        description: Array of HATEOAS links.
                        items:
                          type: object
                          description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                          properties: &ref_3
                            rel:
                              type: string
                            method:
                              type: string
                            href:
                              type: string
                          required: &ref_4
                            - href
                            - method
                            - rel
                          example: &ref_5
                            rel: previous
                            method: get
                            href: <uri>
      responses:
        '201':
          description: Successful request. We created the funding recipient.
          content:
            application/json:
              schema:
                required: &ref_6
                  - address
                  - contactInformation
                  - recipientType
                  - taxId
                  - owners
                  - fundingAccounts
                  - doingBuinessAs
                type: object
                title: funding recipient
                properties: &ref_7
                  recipientId:
                    type: integer
                    description: Unique identifier of the funding recipient.
                    readOnly: true
                    example: 1
                  status:
                    type: string
                    description: Indicates if we have approved the funding recipient.
                    readOnly: true
                    example: approved
                    enum:
                      - approved
                      - rejected
                      - pending
                  createdDate:
                    type: string
                    description: Date the funding recipient was created.
                    format: date-time
                    example: '2020-09-08T12:00:00.000Z'
                    readOnly: true
                  lastModifiedDate:
                    type: string
                    description: Date the funding recipient was last modified.
                    format: date-time
                    example: '2020-09-08T12:00:00.000Z'
                    readOnly: true
                  recipientType:
                    type: string
                    example: privateCorporation
                    enum:
                      - privateCorporation
                      - publicCorporation
                      - nonProfit
                      - government
                      - privateLlc
                      - publicLlc
                      - privatePartnership
                      - publicPartnership
                      - soleProprietor
                    description: Type or legal structure of the funding recipient.
                  taxId:
                    type: string
                    description: Employer identification number (EIN) or Social Security number (SSN).
                    example: '123456789'
                  charityId:
                    type: string
                    description: Government identifier of the charity.
                  doingBuinessAs:
                    type: string
                    description: Legal name that the business operates under.
                  address:
                    type: object
                    description: Address of the funding recipient.
                    oneOf:
                      - required: *ref_0
                        type: object
                        title: address
                        description: Object that contains information about the address.
                        properties: *ref_1
                  contactMethods:
                    type: array
                    minItems: 1
                    xml:
                      wrapped: true
                    description: Array of contactMethod objects for the funding recipient.
                    items:
                      oneOf: *ref_2
                    example:
                      - type: email
                        value: david.smith@example.com
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: '[Metadata](/api/metadata) object you can use to include custom data with your request.'
                    example:
                      customerId: '2345'
                  owners:
                    readOnly: true
                    description: Array of owner objects associated with the funding recipient.
                    type: array
                    xml:
                      wrapped: true
                    items:
                      type: object
                      title: owner summary
                      xml:
                        name: owner
                      properties:
                        ownerId:
                          type: integer
                          description: Unique identifier of the owner.
                          example: 1
                        link:
                          type: object
                          description: Array of HATEOAS links for viewing the owner.
                          properties:
                            rel:
                              type: string
                              example: owner
                            href:
                              type: string
                              example: https://api.payroc.com/v1/owners/1
                            method:
                              type: string
                              example: get
                  fundingAccounts:
                    readOnly: true
                    description: Array of fundingAccount objects associated with the funding recipient.
                    type: array
                    xml:
                      wrapped: true
                    items:
                      type: object
                      title: funding account summary
                      xml:
                        name: funding account
                      properties:
                        fundingAccountId:
                          type: integer
                          description: Unique identifier of the funding account.
                          example: 2
                        status:
                          type: string
                          example: pending
                          description: Status of the funding account.
                          enum:
                            - approved
                            - rejected
                            - pending
                        link:
                          type: object
                          description: HATEOAS links for viewing the funding account.
                          properties:
                            rel:
                              type: string
                              example: fundingAccount
                            href:
                              type: string
                              example: https://api.payroc.com/v1/funding-accounts/2
                            method:
                              type: string
                              example: get
                    example:
                      - fundingAccountId: 1
                        status: approved
                        link:
                          rel: fundingAccount
                          herf: https://api.payroc.com/v1/funding-accounts/1
                          method: get
                      - fundingAccountId: 2
                        status: rejected
                        link:
                          rel: fundingAccount
                          herf: https://api.payroc.com/v1/funding-accounts/2
                          method: get
          headers:
            location:
              description: URI reference to created resource.
              style: simple
              explode: false
              schema: &ref_22
                type: string
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties: &ref_8
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#bad-request
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Bad request
                  status:
                    type: integer
                    description: Http status code
                    example: 400
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: One or more validation errors occurred, see error section for more info
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        parameter:
                          type: string
                          description: The parameter or field causing the issues
                          example: start_time
                        detail:
                          type: string
                          description: Short detail of the validation errors
                          example: invalid date
                        message:
                          type: string
                          description: Error message
                          example: Expected time, got '' for start_time
                        fundingAccountId:
                          type: integer
                          description: Identifier for funding account.
                          example: 1234
                required: &ref_9
                  - type
                  - title
                  - detail
                  - status
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: &ref_23
                    type: https://docs.payroc.com/api/errors#idempotency-key-missing
                    title: Idempotency-Key header missing
                    status: 400
                    detail: An 'Idempotency-Key' must be supplied for this request
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_10
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: start_time
                        detail: invalid date
                        message: Expected time, got '' for start_time
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: &ref_16
                    type: https://docs.payroc.com/api/errors#kyc-check-failed
                    title: Failed KYC Checks
                    status: 400
                    detail: Entity has been rejected due to failing KYC checks
        '401':
          description: Identity could not be verified
          content: &ref_11
            application/json:
              schema:
                type: object
                properties: &ref_120
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-authorized
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not Authorized
                  status:
                    type: integer
                    description: Http status code
                    example: 401
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You do not have the required permissions to perform this action
                required: &ref_121
                  - type
                  - title
                  - status
                  - detail
              examples:
                notAuthorized:
                  summary: Not Authorized
                  description: Your identity could not be verified
                  value: &ref_231
                    type: https://docs.payroc.com/api/errors#not-authorized
                    title: Not Authorized
                    status: 401
                    detail: Your identity could not be verified
        '403':
          description: Do not have permissions to perform this action
          content: &ref_12
            application/json:
              schema:
                type: object
                properties: &ref_122
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#forbidden
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Forbidden
                  status:
                    type: integer
                    description: Http status code
                    example: 403
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You do not have the required permissions to perform this action
                  instance:
                    type: string
                    description: Resource path the action was attempted on
                    example: https://api.payroc.com/v1/webhook/3
                  resource:
                    type: string
                    description: Resource the action was attempted on
                    example: webhook
                required: &ref_123
                  - type
                  - title
                  - status
                  - detail
              examples:
                forbidden:
                  summary: Forbidden
                  description: You do not have the required permission
                  value: &ref_232
                    type: https://docs.payroc.com/api/errors#forbidden
                    title: Forbidden
                    status: 403
                    detail: You do not have the required permissions to perform this action
                    instance: https://api.payroc.com/v1/webhook/3
                    resource: webhook
        '406':
          description: Not acceptable
          content: &ref_18
            application/json:
              schema:
                type: object
                properties: &ref_126
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-acceptable
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not acceptable
                  status:
                    type: integer
                    description: Http status code
                    example: 406
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Resource does not support the representation requested.
                required: &ref_127
                  - type
                  - title
                  - status
                  - detail
              examples:
                notAcceptable:
                  summary: Not acceptable
                  description: Requested representation not supported
                  value: &ref_234
                    type: https://docs.payroc.com/api/errors#not-acceptable
                    title: Not acceptable
                    status: 406
                    detail: Resource does not support the representation requested
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: &ref_24
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#resource-already-exists
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Resource already exists
                  status:
                    type: integer
                    description: Http status code
                    example: 409
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: The resource you attempted to create already exists
                  instance:
                    type: string
                    description: Resource path to the existing resource
                    example: https://api.payroc.com/v1/webhook/3
                required: &ref_25
                  - type
                  - title
                  - status
                  - detail
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: &ref_26
                    type: https://docs.payroc.com/api/errors#idempotency-key-in-use
                    title: Idempotency-Key in use
                    status: 409
                    detail: '''Idempotency-Key'' is already in use against a different request'
        '500':
          description: An error has occured
          content: &ref_13
            application/json:
              schema:
                type: object
                properties: &ref_130
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#api-error
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Api error
                  status:
                    type: integer
                    description: Http status code
                    example: 500
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Unable to process your request at this time
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          description: Error message
                          example: Service offline
                required: &ref_131
                  - type
                  - title
                  - status
                  - detail
              examples:
                apiError:
                  summary: Api error
                  description: Unable to process your request.
                  value: &ref_233
                    type: https://docs.payroc.com/api/errors#api-error
                    title: Api error
                    status: 500
                    detail: We are unable to process your request at this time
                    errors:
                      message: Service offline
    get:
      tags:
        - Funding recipient
      summary: List funding recipients
      description: Retrieve a list of all funding recipients associated with the ISV.
      operationId: listFundingRecipients
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: &ref_29
            type: string
            example: 2571
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: &ref_30
            type: string
            example: 8516
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: &ref_31
            type: integer
            example: 25
            default: 10
            maximum: 100
      responses:
        '200':
          description: Successful request. Returns a paginated list of all funding recipients.
          content:
            application/json:
              schema:
                type: object
                title: paginated funding recipients
                allOf: &ref_140
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: &ref_32
                      limit:
                        type: number
                        description: Maximum number of results that we return for each page.
                        example: 25
                      count:
                        type: number
                        description: Number of results that we returned.
                        example: 23
                      hasMore:
                        type: boolean
                        description: Indicates that further results are available.
                        example: false
                      links:
                        type: array
                        description: Reference links to navigate to the previous page of results, or to the next page of results.
                        example:
                          - rel: previous
                            method: get
                            href: <uri>
                          - rel: next
                            method: get
                            href: <uri>
                        items:
                          type: object
                          description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                          properties: *ref_3
                          required: *ref_4
                          example: *ref_5
                  - type: object
                    properties:
                      data:
                        type: array
                        description: An array of funding recipients
                        items:
                          required: *ref_6
                          type: object
                          title: funding recipient
                          properties: *ref_7
              examples:
                paginatedFundingRecipients:
                  summary: Paginated funding recipients.
                  description: Paginated list of funding recipients.
                  value: &ref_230
                    limit: 10
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-recipients?before=12345&limit=10
                    data:
                      - recipientId: 12345
                        status: approved
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        recipientType: privateCorporation
                        taxId: '123456789'
                        doingBuinessAs: Example llc
                        address:
                          address1: 1 Example Ave.
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: phone
                            value: 123 456 7890
                        metadata:
                          customerId: 12345
                        owners:
                          - ownerId: 1
                            link:
                              rel: owner
                              method: get
                              href: https://api.payroc.com/v1/owners/1
                        fundingAccounts:
                          - fundingAccountId: 1
                            status: approved
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/1
                          - fundingAccountId: 2
                            status: hold
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/2
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: &ref_48
                    limit: 10
                    count: 0
                    hasMore: false
                    links: []
                    data: []
        '400':
          description: Invalid request
          content: &ref_14
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                badRequest:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '500':
          description: An error has occured
          content: *ref_13
  /funding-recipients/{recipientId}:
    get:
      tags:
        - Funding recipient
      summary: Retrieve a funding recipient
      description: Retrieve a specific funding recipient.
      operationId: getFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: &ref_15
            type: integer
      responses:
        '200':
          description: Successful request. Returns the requested funding recipient.
          content:
            application/json:
              schema:
                required: *ref_6
                type: object
                title: funding recipient
                properties: *ref_7
              examples:
                fundingRecipient:
                  summary: Funding recipient.
                  description: Funding recipients.
                  value: &ref_235
                    recipientId: 12345
                    status: approved
                    createdDate: '2020-09-08T12:00:00.000Z'
                    lastModifiedDate: '2020-09-08T12:00:00.000Z'
                    recipientType: privateCorporation
                    taxId: '123456789'
                    doingBuinessAs: Example llc
                    address:
                      address1: 1 Example Ave.
                      city: Example city
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    contactMethods:
                      - type: phone
                        value: 123 456 7890
                    metadata:
                      customerId: 12345
                    owners:
                      - ownerId: 1
                        link:
                          rel: owner
                          method: get
                          href: https://api.payroc.com/v1/owners/1
                    fundingAccounts:
                      - fundingAccountId: 1
                        status: approved
                        link:
                          rel: fundingAccount
                          method: get
                          href: https://api.payroc.com/v1/funding-accounts/1
                      - fundingAccountId: 2
                        status: hold
                        link:
                          rel: fundingAccount
                          method: get
                          href: https://api.payroc.com/v1/funding-accounts/2
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: &ref_17
            application/json:
              schema:
                type: object
                properties: &ref_124
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#not-found
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Not found
                  status:
                    type: integer
                    description: Http status code
                    example: 404
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: Specified account was not found
                  resource:
                    type: string
                    description: Resource that was not found
                    example: Account
                required: &ref_125
                  - type
                  - title
                  - status
                  - detail
              examples:
                notFound:
                  summary: Not found
                  description: Resource could not be found
                  value: &ref_236
                    type: https://docs.payroc.com/api/errors#not-found
                    title: Not found
                    status: 404
                    detail: Resource not found
                    resource: account
        '500':
          description: An error has occured
          content: *ref_13
    put:
      tags:
        - Funding recipient
      summary: Update funding recipient
      description: Update a funding recipient. If you make significant changes, we may need to approve the funding recipient again.
      operationId: updateFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_6
              type: object
              title: funding recipient
              properties: *ref_7
      responses:
        '204':
          description: Successful request. We updated the funding recipient.
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_16
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      tags:
        - Funding recipient
      summary: Delete funding recipient
      description: Delete a funding recipient. This includes funding accounts and owners linked to the funding recipient.
      operationId: deleteFundingRecipient
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
      responses:
        '204':
          description: Successful request. We deleted the funding recipient.
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /funding-recipients/{recipientId}/funding-accounts:
    get:
      tags:
        - Funding recipient
      summary: List Funding Accounts
      description: Retrieve all funding accounts associated with the funding recipient.
      operationId: listFundRecipientFundingAccounts
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
      responses:
        '200':
          description: Successful request. Returns a list of all funding accounts associated with the funding recipient.
          content:
            application/json:
              schema:
                type: array
                items:
                  required: *ref_19
                  type: object
                  title: funding account
                  properties: *ref_20
              examples:
                fundingAccounts:
                  summary: List of funding accounts
                  description: List of funding accounts.
                  value: &ref_237
                    - fundingAccountId: 123
                      createdDate: '2020-09-08T12:00:00.000Z'
                      lastModifiedDate: '2020-09-08T12:00:00.000Z'
                      status: approved
                      type: checking
                      use: credit
                      nameOnAccount: Joe Bloggs
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****6789'
                            accountNumber: '******7890'
                      metadata:
                        internalRef: '2345'
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/funding-recipient/2
                          method: get
                    - fundingAccountId: 124
                      createdDate: '2021-01-08T12:00:00.000Z'
                      lastModifiedDate: '2021-01-08T12:00:00.000Z'
                      status: pending
                      type: checking
                      use: debit
                      nameOnAccount: Joe Bloggs
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****8725'
                            accountNumber: '******3491'
                      metadata:
                        internalRef: '2346'
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/funding-recipient/2
                          method: get
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    post:
      tags:
        - Funding recipient
      summary: Create Funding Account
      description: Create a new funding account, and add it to the funding recipient.
      operationId: createFundRecipientFundingAccount
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_19
              type: object
              title: funding account
              properties: *ref_20
      responses:
        '201':
          description: Successful request. We created the funding account and added it to the funding recipient.
          content:
            application/json:
              schema:
                required: *ref_19
                type: object
                title: funding account
                properties: *ref_20
              examples:
                fundingAccount:
                  summary: Funding account
                  description: Funding accounts.
                  value: &ref_238
                    fundingAccountId: 123
                    createdDate: '2020-09-08T12:00:00.000Z'
                    lastModifiedDate: '2020-09-08T12:00:00.000Z'
                    status: approved
                    type: checking
                    use: credit
                    nameOnAccount: Joe Bloggs
                    paymentMethods:
                      - type: ach
                        value:
                          routingNumber: '*****6789'
                          accountNumber: '******7890'
                    metadata:
                      internalRef: '2345'
                    links:
                      - rel: parent
                        href: https://api.payroc.com/v1/funding-recipient/2
                        method: get
          headers:
            location:
              description: URI reference to created resource.
              style: simple
              explode: false
              schema: *ref_22
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_16
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
        '500':
          description: An error has occured
          content: *ref_13
  /funding-recipients/{recipientId}/owners:
    get:
      tags:
        - Funding recipient
      summary: List Owner
      description: Retrieve all owners associated with the funding recipient.
      operationId: listFundRecipientOwners
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
      responses:
        '200':
          description: Successful request. Returns a list of all owners associated with the funding recipient.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  title: owner
                  required: *ref_27
                  properties: *ref_28
              examples:
                owners:
                  summary: Owner object
                  description: Owner object
                  value: &ref_34
                    ownerId: 1543
                    firstName: David
                    middleName: scott
                    lastName: Simpson
                    dateOfBirth: '1964-03-22'
                    address:
                      address1: 1 Example Ave.
                      city: Example city
                      state: Illinois
                      country: US
                      postalCode: '60056'
                    identifiers:
                      - type: nationalId
                        value: xxx-xx-4320
                    contactMethods:
                      - type: email
                        value: david.simpson@example.com
                      - type: phone
                        value: '2025550104'
                      - type: mobile
                        value: '0987654321'
                    relationship:
                      equityPercentage: 35.4
                      title: string
                      isControlProng: true
                      isAuthorizedSignatory: false
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    post:
      tags:
        - Funding recipient
      summary: Create Owner
      description: Create a new owner, and add it to the funding recipient.
      operationId: createFundRecipientOwner
      parameters:
        - name: recipientId
          description: Unique identifier of the funding recipient.
          in: path
          required: true
          style: simple
          explode: false
          schema: *ref_15
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: owner
              required: *ref_27
              properties: *ref_28
      responses:
        '201':
          description: Successful request. We created the owner and added it to the funding recipient.
          content:
            application/json:
              schema:
                type: object
                title: owner
                required: *ref_27
                properties: *ref_28
          headers:
            location:
              description: URI reference to created resource.
              style: simple
              explode: false
              schema: *ref_22
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_16
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
        '500':
          description: An error has occured
          content: *ref_13
  /funding-accounts:
    get:
      tags:
        - Funding accounts
      summary: List funding accounts
      description: Retrieve a list of all funding accounts associated with the ISV.
      operationId: listFundingAccount
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
      responses:
        '200':
          description: Successful request. Returns a paginated list of all funding accounts.
          content:
            application/json:
              schema:
                type: object
                title: paginated funding accounts
                allOf: &ref_148
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of fundingAccount objects.
                        items:
                          required: *ref_19
                          type: object
                          title: funding account
                          properties: *ref_20
                    required:
                      - data
              examples:
                fundingAccountExample:
                  summary: Paginated funding accounts
                  value: &ref_239
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-accounts?before=123&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-accounts?after=124&limit=2
                    data:
                      - fundingAccountId: 123
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        status: approved
                        type: checking
                        use: credit
                        nameOnAccount: Joe Bloggs
                        paymentMethods:
                          - type: ach
                            value:
                              routingNumber: '*****6789'
                              accountNumber: '******7890'
                        metadata:
                          internalRef: '2345'
                        links:
                          - rel: parent
                            href: https://api.payroc.com/v1/merchants/1234
                            method: get
                      - fundingAccountId: 124
                        createdDate: '2021-01-08T12:00:00.000Z'
                        lastModifiedDate: '2021-01-08T12:00:00.000Z'
                        status: pending
                        type: checking
                        use: debit
                        nameOnAccount: Joe Bloggs
                        paymentMethods:
                          - type: ach
                            value:
                              routingNumber: '*****8725'
                              accountNumber: '******3491'
                        metadata:
                          internalRef: '2346'
                        links:
                          - rel: parent
                            href: https://api.payroc.com/v1/funding-recipient/2
                            method: get
                noResults:
                  summary: No results found
                  description: No results found
                  value: &ref_240
                    limit: 10
                    count: 0
                    hasMore: false
                    links: []
                    data: []
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /funding-accounts/{fundingAccountId}:
    get:
      tags:
        - Funding accounts
      summary: Retrieve funding account
      description: Retrieve a specific funding account.
      operationId: getFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          style: simple
          explode: false
          schema: &ref_33
            type: integer
      responses:
        '200':
          description: Successful request. Returns the requested funding account.
          content:
            application/json:
              schema:
                required: *ref_19
                type: object
                title: funding account
                properties: *ref_20
              examples:
                fundingAccountExample:
                  summary: Masked funding account example.
                  value: &ref_241
                    fundingAccountId: 123
                    createdDate: '2020-09-08T12:00:00.000Z'
                    lastModifiedDate: '2020-09-08T12:00:00.000Z'
                    status: pending
                    type: checking
                    use: credit
                    nameOnAccount: Joe Bloggs
                    paymentMethods:
                      - type: ach
                        value:
                          routingNumber: '*****6789'
                          accountNumber: '******7890'
                    metadata:
                      internalRef: '2345'
                    links:
                      - rel: parent
                        href: https://api.payroc.com/v1/merchants/1234
                        method: get
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    put:
      tags:
        - Funding accounts
      summary: Update funding account
      description: Update a funding account.
      operationId: updateFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          style: simple
          explode: false
          schema: *ref_33
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_19
              type: object
              title: funding account
              properties: *ref_20
      responses:
        '204':
          description: Successful request. We updated the funding account.
        '400':
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_16
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      tags:
        - Funding accounts
      summary: Delete funding account
      description: Delete a funding account.
      operationId: deleteFundingAccount
      parameters:
        - name: fundingAccountId
          in: path
          required: true
          description: Unique identifier of the funding account.
          style: simple
          explode: false
          schema: *ref_33
      responses:
        '204':
          description: Successful request. We deleted the funding account.
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /owners/{ownerId}:
    get:
      tags:
        - Owners
      summary: Retrieve owner
      description: Retrieve a specific owner.
      operationId: getOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier for the owner.
          required: true
          style: simple
          explode: false
          schema: &ref_35
            type: integer
      responses:
        '200':
          description: Successful request. Returns the requested owner.
          content:
            application/json:
              schema:
                type: object
                title: owner
                required: *ref_27
                properties: *ref_28
              examples:
                owner:
                  summary: Owner object
                  description: Owner object
                  value: *ref_34
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    put:
      tags:
        - Owners
      summary: Update owner
      description: Update a specific owner.
      operationId: updateOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier for the owner.
          required: true
          style: simple
          explode: false
          schema: *ref_35
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: owner
              required: *ref_27
              properties: *ref_28
      responses:
        '204':
          description: Successful request. We updated the owner.
        '400':
          description: Validation errors.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                kycCheckFailed:
                  summary: KYC check failed
                  description: KYC check failed
                  value: *ref_16
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      tags:
        - Owners
      summary: Delete owner
      description: Delete a owner.
      operationId: deleteOwner
      parameters:
        - name: ownerId
          in: path
          description: Unique identifier for the owner.
          required: true
          style: simple
          explode: false
          schema: *ref_35
      responses:
        '204':
          description: Successful request. We deleted the owner.
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /pricing-intents:
    summary: Provides capabilities to list and create pricing intents.
    get:
      summary: List pricing intents
      description: Retrieve a list of pricing intents.
      operationId: listPricingIntents
      tags:
        - Pricing intents
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
      responses:
        '200':
          description: Successful response. Returns a list of pricing intents.
          content:
            application/json:
              schema:
                type: object
                title: paginated pricing intents
                description: Object that contains information about your pricing intents.
                allOf: &ref_177
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of pricing intent objects.
                        items:
                          type: object
                          title: pricing intent
                          description: Object that contains information about a pricing intent.
                          oneOf: &ref_49
                            - type: object
                              title: pricing intent version 4.0
                              description: Object that contains information about a pricing intent for Merchant Processing Agreement (MPA) 4.0.
                              allOf: &ref_176
                                - type: object
                                  title: base pricing intent
                                  description: Object that contains information about the base fees.
                                  properties: &ref_149
                                    id:
                                      type: string
                                      description: Unique identifier of the pricing intent.
                                      readOnly: true
                                    createdDate:
                                      type: string
                                      example: '2020-09-22T09:00:00'
                                      format: date-time
                                      description: Creation date of the pricing intent.
                                      readOnly: true
                                    lastUpdatedDate:
                                      type: string
                                      example: '2020-09-22T09:00:00'
                                      format: date-time
                                      description: Date of the most recent change to the pricing intent.
                                      readOnly: true
                                    status:
                                      type: string
                                      description: Status of the pricing intent.
                                      readOnly: true
                                      enum:
                                        - active
                                        - pendingReview
                                        - rejected
                                    key:
                                      type: string
                                      description: Unique identifier that you use to connect a merchant to the pricing intent.
                                    metadata:
                                      type: object
                                      additionalProperties:
                                        type: string
                                      description: '[Metadata](/api/metadata) object that contains your custom data.'
                                      example:
                                        internalReference: '2345'
                                  required: &ref_150
                                    - key
                                - type: object
                                  title: US pricing agreement version 4.0
                                  description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
                                  required: &ref_90
                                    - country
                                    - version
                                    - base
                                  properties: &ref_91
                                    country:
                                      type: string
                                      description: Indicates the country that the pricing intent applies to.
                                      enum:
                                        - US
                                    version:
                                      type: string
                                      description: Version of the MPA.
                                      default: '4.0'
                                      enum:
                                        - '4.0'
                                    base:
                                      type: object
                                      title: US base fees
                                      description: Object that contains information about U.S. base fees.
                                      properties: &ref_151
                                        addressVerification:
                                          description: Fee for each address verification request. The value is in the currency's lowest denomination, for example, cents.
                                          type: integer
                                          example: 5
                                          minimum: 0
                                          nullable: true
                                        annualFee:
                                          type: object
                                          description: Object that contains information about the annual fee.
                                          properties:
                                            billInMonth:
                                              type: string
                                              description: Indicates the month in which we collect the annual fee.
                                              default: december
                                              enum:
                                                - june
                                                - december
                                            amount:
                                              description: Annual fee. The value is in the currency's lowest denomination, for example, cents.
                                              type: integer
                                              minimum: 0
                                              example: 100
                                          required:
                                            - amount
                                        regulatoryAssistanceProgram:
                                          type: integer
                                          description: Annual fee for the regulatory assistance program. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 15
                                          nullable: true
                                        pciNonCompliance:
                                          type: integer
                                          description: Monthly fee for PCI noncompliance. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 4995
                                          default: 4995
                                        merchantAdvantage:
                                          type: integer
                                          description: Monthly fee for Payroc Advantage. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 10
                                          nullable: true
                                        platinumSecurity:
                                          description: Object that contains information about the Platinum Security fee.
                                          type: object
                                          oneOf:
                                            - type: object
                                              title: Monthly platinum security
                                              required:
                                                - billingFrequency
                                              properties:
                                                billingFrequency:
                                                  type: string
                                                  description: Indicates whether we bill your account monthly or annually.
                                                  enum:
                                                    - monthly
                                                amount:
                                                  readOnly: true
                                                  description: Fee for Platinum Security. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  example: 1295
                                                  default: 1295
                                            - type: object
                                              title: Annual platinum security
                                              required:
                                                - billingFrequency
                                              properties:
                                                billingFrequency:
                                                  type: string
                                                  description: Indicates whether we bill your account monthly or annually.
                                                  enum:
                                                    - annual
                                                amount:
                                                  readOnly: true
                                                  description: Fee for the Platinum Security, this is returned in the lowest unit of currency. For example, cents.
                                                  type: integer
                                                  example: 15540
                                                  default: 15540
                                        maintenance:
                                          type: integer
                                          description: Monthly fee for maintenance. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 500
                                        minimum:
                                          type: integer
                                          description: Monthly fee that we charge when the merchant doesn't meet the minimum fee amount. This monthly fee is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 100
                                        voiceAuthorization:
                                          type: integer
                                          description: Fee for each voice authorization. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 95
                                          default: 95
                                        chargeback:
                                          type: integer
                                          description: Fee for each chargeback. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 2500
                                          default: 2500
                                        retrieval:
                                          type: integer
                                          description: Fee for each retrieval. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 1500
                                          default: 1500
                                        batch:
                                          type: integer
                                          description: Fee for each batch. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 1500
                                        earlyTermination:
                                          type: integer
                                          description: Fee for early termination. The value is in the currency's lowest denomination, for example, cents.
                                          minimum: 0
                                          example: 57500
                                          default: 57500
                                      required: &ref_152
                                        - addressVerification
                                        - annualFee
                                        - regulatoryAssistanceProgram
                                        - merchantAdvantage
                                        - batch
                                        - maintenance
                                        - minimum
                                    processor:
                                      type: object
                                      title: US processor fees
                                      description: Object that contains information about U.S. processor fees.
                                      properties: &ref_173
                                        card:
                                          type: object
                                          description: Object that contains information about card fees.
                                          oneOf:
                                            - type: object
                                              title: Interchange Plus Plan
                                              description: Object that contains information about Interchange Plus.
                                              properties: &ref_153
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - interchangePlus
                                                fees:
                                                  description: Object that contains information about the fees.
                                                  type: object
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      type: object
                                                      title: Processor Fee
                                                      description: Object that contains information about the processor fees.
                                                      properties: &ref_36
                                                        volume:
                                                          description: Percentage of total transaction amount that the processor charges the merchant.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    amex:
                                                      oneOf:
                                                        - type: object
                                                          title: American Express OptBlue
                                                          required:
                                                            - type
                                                            - volume
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - optBlue
                                                            volume:
                                                              description: Percentage of the total transaction amount that the processor charges the merchant.
                                                              allOf:
                                                                - description: Percentage value up to 2 decimal places.
                                                                  title: percentage
                                                                  type: number
                                                                  format: double
                                                                  minimum: 0
                                                                  maximum: 100
                                                                  example: 1.25
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: &ref_39
                                                        - additionalDiscount
                                                        - transaction
                                                        - monthlyAccess
                                                      properties: &ref_40
                                                        additionalDiscount:
                                                          description: Percentage of additional discount.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                        monthlyAccess:
                                                          description: Monthly access fee for using PIN-debit services. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: &ref_41
                                                        - transaction
                                                      properties: &ref_42
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    enhancedInterchange:
                                                      type: object
                                                      required: &ref_43
                                                        - enrollment
                                                        - creditToMerchant
                                                      properties: &ref_44
                                                        enrollment:
                                                          description: Enrollment fee for the enhanced interchange services. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                        creditToMerchant:
                                                          description: Percentage of additional discount.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                    specialityCards:
                                                      type: object
                                                      required: &ref_45
                                                        - transaction
                                                      properties: &ref_46
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_154
                                                - planType
                                                - fees
                                            - type: object
                                              title: Interchange Plus with three tiers
                                              description: Object that contains information about Interchange Plus with three tiers.
                                              properties: &ref_155
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - interchangePlusTiered3
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      type: object
                                                      required: &ref_37
                                                        - qualifiedRate
                                                        - midQualRate
                                                        - nonQualRate
                                                      properties: &ref_38
                                                        qualifiedRate:
                                                          type: object
                                                          title: Processor Fee
                                                          description: Object that contains information about the processor fees.
                                                          properties: *ref_36
                                                        midQualRate:
                                                          type: object
                                                          title: Processor Fee
                                                          description: Object that contains information about the processor fees.
                                                          properties: *ref_36
                                                        nonQualRate:
                                                          type: object
                                                          title: Processor Fee
                                                          description: Object that contains information about the processor fees.
                                                          properties: *ref_36
                                                    amex:
                                                      oneOf:
                                                        - allOf:
                                                            - type: object
                                                              title: American Express OptBlue
                                                              required:
                                                                - type
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  enum:
                                                                    - optBlue
                                                            - type: object
                                                              required: *ref_37
                                                              properties: *ref_38
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    enhancedInterchange:
                                                      type: object
                                                      required: *ref_43
                                                      properties: *ref_44
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_156
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with three tiers
                                              description: Object that contains information about tiered pricing with three tiers.
                                              properties: &ref_157
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered3
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      type: object
                                                      required: *ref_37
                                                      properties: *ref_38
                                                    amex:
                                                      oneOf:
                                                        - allOf:
                                                            - type: object
                                                              title: American Express OptBlue
                                                              required:
                                                                - type
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  enum:
                                                                    - optBlue
                                                            - type: object
                                                              required: *ref_37
                                                              properties: *ref_38
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_158
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with four tiers
                                              description: Object that contains information about tiered pricing with four tiers.
                                              properties: &ref_159
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered4
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      type: object
                                                      allOf: &ref_47
                                                        - type: object
                                                          required: *ref_37
                                                          properties: *ref_38
                                                        - type: object
                                                          required:
                                                            - premiumRate
                                                          properties:
                                                            premiumRate:
                                                              type: object
                                                              title: Processor Fee
                                                              description: Object that contains information about the processor fees.
                                                              properties: *ref_36
                                                    amex:
                                                      oneOf:
                                                        - allOf:
                                                            - type: object
                                                              title: American Express OptBlue
                                                              required:
                                                                - type
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  enum:
                                                                    - optBlue
                                                            - type: object
                                                              required: *ref_37
                                                              properties: *ref_38
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_160
                                                - planType
                                                - fees
                                            - type: object
                                              title: Tiered pricing with six tiers
                                              description: Object that contains information about tiered pricing with six tiers.
                                              properties: &ref_162
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - tiered6
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    mastercardVisaDiscover:
                                                      type: object
                                                      allOf: &ref_161
                                                        - type: object
                                                          allOf: *ref_47
                                                        - type: object
                                                          required:
                                                            - regulatedCheckCard
                                                            - unregulatedCheckCard
                                                          properties:
                                                            regulatedCheckCard:
                                                              type: object
                                                              title: Processor Fee
                                                              description: Object that contains information about the processor fees.
                                                              properties: *ref_36
                                                            unregulatedCheckCard:
                                                              type: object
                                                              title: Processor Fee
                                                              description: Object that contains information about the processor fees.
                                                              properties: *ref_36
                                                    amex:
                                                      oneOf:
                                                        - allOf:
                                                            - type: object
                                                              title: American Express OptBlue
                                                              required:
                                                                - type
                                                              properties:
                                                                type:
                                                                  type: string
                                                                  enum:
                                                                    - optBlue
                                                            - type: object
                                                              required: *ref_37
                                                              properties: *ref_38
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - mastercardVisaDiscover
                                              required: &ref_163
                                                - planType
                                                - fees
                                            - type: object
                                              title: Flat Rate Plan
                                              description: Object that contains information about Flat Rate.
                                              properties: &ref_164
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - flatRate
                                                fees:
                                                  description: Object that contains information about the Flat Rate fees.
                                                  type: object
                                                  properties:
                                                    standardCards:
                                                      type: object
                                                      title: Processor Fee
                                                      description: Object that contains information about the processor fees.
                                                      properties: *ref_36
                                                    amex:
                                                      oneOf:
                                                        - type: object
                                                          title: American Express Direct
                                                          required:
                                                            - type
                                                            - transaction
                                                          properties:
                                                            type:
                                                              type: string
                                                              enum:
                                                                - direct
                                                            transaction:
                                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                              allOf:
                                                                - type: integer
                                                                  minimum: 0
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - standardCards
                                              required: &ref_165
                                                - planType
                                                - fees
                                            - type: object
                                              title: Consumer Choice Plan
                                              description: Object that contains information about ConsumerChoice.
                                              properties: &ref_166
                                                planType:
                                                  type: string
                                                  description: Type of processing plan.
                                                  enum:
                                                    - consumerChoice
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    monthlySubscription:
                                                      description: Fee for the monthly subscription. The value is in the currency's lowest denomination, for example, cents.
                                                      allOf:
                                                        - type: integer
                                                          minimum: 0
                                                    volume:
                                                      description: Merchant-authorized percentage on non-cash transactions.
                                                      allOf:
                                                        - description: Percentage value up to 2 decimal places.
                                                          title: percentage
                                                          type: number
                                                          format: double
                                                          minimum: 0
                                                          maximum: 100
                                                          example: 1.25
                                                    pinDebit:
                                                      type: object
                                                      required: *ref_39
                                                      properties: *ref_40
                                                    electronicBenefitsTransfer:
                                                      type: object
                                                      required: *ref_41
                                                      properties: *ref_42
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - monthlySubscription
                                                    - volume
                                              required: &ref_167
                                                - planType
                                                - fees
                                            - type: object
                                              title: RewardPay Plan
                                              description: Object that contains information about RewardPay.
                                              properties: &ref_168
                                                planType:
                                                  description: Type of processing plan.
                                                  type: string
                                                  enum:
                                                    - rewardPay
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    monthlySubscription:
                                                      description: Fee for the monthly subscription. The value is in the currency's lowest denomination, for example, cents.
                                                      allOf:
                                                        - type: integer
                                                          minimum: 0
                                                    cardChargePercentage:
                                                      description: Percentage of the total transaction amount that the processor charges the cardholder.
                                                      type: number
                                                      format: double
                                                      readOnly: true
                                                      default: 3
                                                    merchantChargePercentage:
                                                      description: Percentage of the total transaction amount that the processor charges the merchant.
                                                      type: number
                                                      format: double
                                                      readOnly: true
                                                      default: 0.9
                                                    transaction:
                                                      description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                      type: integer
                                                      readOnly: true
                                                      default: 15
                                                    tips:
                                                      description: Indicates how the merchant manages tips.
                                                      type: string
                                                      enum:
                                                        - noTips
                                                        - prompt
                                                        - tipAdjust
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - monthlySubscription
                                                    - tips
                                              required: &ref_169
                                                - planType
                                                - fees
                                            - type: object
                                              title: RewardPayChoice Plan
                                              description: Object that contains information about RewardPayChoice.
                                              properties: &ref_170
                                                planType:
                                                  description: Type of processing plan.
                                                  type: string
                                                  enum:
                                                    - rewardPayChoice
                                                fees:
                                                  type: object
                                                  description: Object that contains information about the fees.
                                                  properties:
                                                    monthlySubscription:
                                                      description: Fee for the monthly subscription. The value is in the currency's lowest denomination, for example, cents.
                                                      allOf:
                                                        - type: integer
                                                          minimum: 0
                                                    debit:
                                                      description: Object that contains information about fees for debit transactions.
                                                      properties:
                                                        option:
                                                          type: string
                                                          enum:
                                                            - interchangePlus
                                                            - flatRate
                                                        volume:
                                                          description: Percentage of the total transaction that the processor charges the merchant.
                                                          allOf:
                                                            - description: Percentage value up to 2 decimal places.
                                                              title: percentage
                                                              type: number
                                                              format: double
                                                              minimum: 0
                                                              maximum: 100
                                                              example: 1.25
                                                        transaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                      required:
                                                        - volume
                                                        - transaction
                                                    credit:
                                                      type: object
                                                      description: Object that contains information about fees for credit transactions.
                                                      properties:
                                                        tips:
                                                          description: Indicates how the merchant manages tips.
                                                          type: string
                                                          enum:
                                                            - noTips
                                                            - prompt
                                                            - tipAdjust
                                                        cardChargePercentage:
                                                          description: Percentage of the total transaction amount that the processor charges the cardholder.
                                                          type: number
                                                          format: double
                                                          example: 20
                                                          minimum: 0
                                                        merchantChargePercentage:
                                                          description: Percentage of the total transaction amount that the processor charges the merchant.
                                                          type: number
                                                          format: double
                                                          example: 10
                                                          minimum: 0
                                                        merchantChargePerTransaction:
                                                          description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                          allOf:
                                                            - type: integer
                                                              minimum: 0
                                                    specialityCards:
                                                      type: object
                                                      required: *ref_45
                                                      properties: *ref_46
                                                  required:
                                                    - monthlySubscription
                                                    - debit
                                                    - credit
                                              required: &ref_171
                                                - planType
                                                - fees
                                        ach:
                                          type: object
                                          properties: &ref_172
                                            fees:
                                              type: object
                                              properties:
                                                transaction:
                                                  description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 50
                                                batch:
                                                  description: Fee for each batch. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 1000
                                                returns:
                                                  description: Fee for each return. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 400
                                                unauthorizedReturn:
                                                  description: Fee for each unauthorized return. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 1999
                                                statement:
                                                  description: Fee for each statement. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 800
                                                monthlyMinimum:
                                                  description: Minimum monthly value of transactions. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 20000
                                                accountVerification:
                                                  description: Fee for each account verification. The value is in the currency's lowest denomination, for example, cents.
                                                  type: integer
                                                  minimum: 0
                                                  example: 100
                                                discountRateUnder10000:
                                                  description: Percentage discount for ACH transfers less than $10,000.
                                                  allOf:
                                                    - description: Percentage value up to 2 decimal places.
                                                      title: percentage
                                                      type: number
                                                      format: double
                                                      minimum: 0
                                                      maximum: 100
                                                      example: 1.25
                                                discountRateAbove10000:
                                                  description: Percentage discount for ACH transfers equal to or more than $10,000.
                                                  allOf:
                                                    - description: Percentage value up to 2 decimal places.
                                                      title: percentage
                                                      type: number
                                                      format: double
                                                      minimum: 0
                                                      maximum: 100
                                                      example: 1.25
                                              required:
                                                - transaction
                                                - batch
                                                - returns
                                                - unauthorizedReturn
                                                - statement
                                                - monthlyMinimum
                                                - accountVerification
                                                - discountRateUnder10000
                                                - discountRateAbove10000
                                    gateway:
                                      type: object
                                      description: Object that contains information about the gateway fees.
                                      title: gateway fees
                                      properties: &ref_174
                                        fees:
                                          type: object
                                          description: Object that contains information about the gateway fees.
                                          properties:
                                            monthly:
                                              description: Monthly fee for the gateway. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            setup:
                                              description: Fee for setting up your account with the gateway. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            perTransaction:
                                              description: Fee for each transaction. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            perDeviceMonthly:
                                              description: Monthly fee for each device. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                            additionalServiceMonthly:
                                              description: Monthly fee for additional service. The value is in the currency's lowest denomination, for example, cents.
                                              allOf:
                                                - type: integer
                                                  minimum: 0
                                          required:
                                            - monthly
                                            - setup
                                            - perTransaction
                                            - perDeviceMonthly
                                            - additionalServiceMonthly
                                      required: &ref_175
                                        - fees
              examples:
                paginatedResults:
                  summary: Paginated pricing intent
                  description: Example of a paginated pricing intent.
                  value: &ref_242
                    limit: 1
                    count: 1
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/pricing-intents?before=5&limit=1
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/pricing-intents?after=5&limit=1
                    data:
                      - id: '5'
                        createdDate: '2020-09-22T09:00:00'
                        lastUpdatedDate: '2020-09-22T09:00:00'
                        status: active
                        key: base
                        country: US
                        version: '4.0'
                        base:
                          addressVerification: 5
                          annualFee:
                            billInMonth: december
                            amount: 100
                          regulatoryAssistanceProgram: 15
                          pciNonCompliance: 4995
                          merchantAdvantage: 10
                          platinumSecurity:
                            billingFrequency: monthly
                            amount: 1295
                          maintenance: 500
                          minimum: 100
                          voiceAuthorization: 95
                          chargeback: 2500
                          retrieval: 1500
                          batch: 1000
                          earlyTermination: 57500
                        processor:
                          card:
                            planType: interchangePlus
                            fees:
                              mastercardVisaDiscover:
                                volume: 1.25
                                transaction: 5
                              amex:
                                type: optBlue
                                volume: 1.25
                                transaction: 10
                              pinDebit:
                                additionalDiscount: 1.25
                                transaction: 10
                                monthlyAccess: 1200
                              electronicBenefitsTransfer:
                                transaction: 10
                              enhancedInterchange:
                                enrollment: 1000
                                creditToMerchant: 5.25
                              specialityCards:
                                transaction: 10
                          ach:
                            fees:
                              transaction: 50
                              batch: 1000
                              returns: 400
                              unauthorizedReturn: 1999
                              statement: 800
                              monthlyMinimum: 20000
                              accountVerification: 100
                              discountRateUnder10000: 5.25
                              discountRateAbove10000: 10
                        gateway:
                          fees:
                            monthly: 1000
                            setup: 25000
                            perTransaction: 0
                            perDeviceMonthly: 0
                            additionalServiceMonthly: 0
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '500':
          description: An error has occured
          content: *ref_13
    post:
      summary: Create pricing intent
      description: Create a pricing intent.
      tags:
        - Pricing intents
      operationId: createPricingIntent
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: pricing intent
              description: Object that contains information about a pricing intent.
              oneOf: *ref_49
      responses:
        '201':
          description: Successful response. We created the pricing intent and it is waiting for approval.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_49
              examples:
                createdPricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: &ref_50
                    id: '5'
                    createdDate: '2020-09-22T09:00:00'
                    lastUpdatedDate: '2020-09-22T09:00:00'
                    status: active
                    key: string
                    metadata:
                      internalReference: '2345'
                    country: US
                    version: '4.0'
                    base:
                      addressVerification: 5
                      annualFee:
                        billInMonth: december
                        amount: 100
                      regulatoryAssistanceProgram: 15
                      pciNonCompliance: 4995
                      merchantAdvantage: 10
                      platinumSecurity:
                        billingFrequency: monthly
                        amount: 1295
                      maintenance: 500
                      minimum: 100
                      voiceAuthorization: 95
                      chargeback: 2500
                      retrieval: 1500
                      batch: 1000
                      earlyTermination: 57500
                    processor:
                      card:
                        planType: interchangePlus
                        fees:
                          mastercardVisaDiscover:
                            volume: 1.25
                            transaction: 5
                          amex:
                            type: optBlue
                            volume: 1.25
                            transaction: 10
                          pinDebit:
                            additionalDiscount: 1.25
                            transaction: 10
                            monthlyAccess: 1200
                          electronicBenefitsTransfer:
                            transaction: 10
                          enhancedInterchange:
                            enrollment: 1000
                            creditToMerchant: 5.25
                          specialityCards:
                            transaction: 10
                      ach:
                        fees:
                          transaction: 50
                          batch: 1000
                          returns: 400
                          unauthorizedReturn: 1999
                          statement: 800
                          monthlyMinimum: 20000
                          accountVerification: 100
                          discountRateUnder10000: 5.25
                          discountRateAbove10000: 10
                    gateway:
                      fees:
                        monthly: 1000
                        setup: 25000
                        perTransaction: 0
                        perDeviceMonthly: 0
                        additionalServiceMonthly: 0
          headers:
            location:
              description: URI reference to created resource.
              style: simple
              explode: false
              schema: *ref_22
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
        '500':
          description: An error has occured
          content: *ref_13
  /pricing-intents/{pricingIntentId}:
    summary: Provides create/read/updated/delete capabilities for specific pricing intents
    parameters:
      - in: path
        name: pricingIntentId
        schema: &ref_51
          type: string
        required: true
        description: Unique identifier of the pricing intent.
    get:
      summary: Retrieve pricing intent
      description: Retrieve a specific pricing intent.
      operationId: getPricingIntent
      tags:
        - Pricing intents
      responses:
        '200':
          description: Successful response. Returns the requested pricing intent.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_49
              examples:
                pricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: *ref_50
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    put:
      summary: Update pricing intent
      description: Update a pricing intent.
      operationId: updatePricingIntent
      tags:
        - Pricing intents
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: pricing intent
              description: Object that contains information about a pricing intent.
              oneOf: *ref_49
      responses:
        '204':
          description: Resource successfully updated
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    patch:
      summary: Partially update pricing intent
      description: Partially update a pricing intent.
      operationId: patchPricingIntent
      tags:
        - Pricing intents
      parameters:
        - in: path
          name: pricingIntentId
          schema: *ref_51
          required: true
          description: Unique identifier of the pricing intent.
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              type: array
              description: A JSONPatch document as defined by RFC 6902
              example: &ref_180
                - op: add
                  path: /a/b/c
                  value:
                    - foo
                    - bar
                - op: remove
                  path: /a/b/c
                - op: replace
                  path: /a/b/c
                  value: 42
                - op: move
                  from: /a/b/c
                  path: /a/b/d
                - op: copy
                  from: /a/b/d
                  path: /a/b/e
                - op: test
                  path: /a/b/c
                  value: foo
              items: &ref_181
                description: JSONPatch document, specified in RFC 6902.
                required: &ref_178
                  - op
                  - path
                properties: &ref_179
                  op:
                    type: string
                    description: Operation to be performed.
                    enum:
                      - add
                      - remove
                      - replace
                      - move
                      - copy
                      - test
                  path:
                    type: string
                    description: JSON-Pointer.
                  value:
                    type: object
                    description: Value used in the operations.
                  from:
                    type: string
                    description: String that contains the JSON pointer that references the location of the data you want to operate on.
      responses:
        '200':
          description: Successful request. We updated the pricing intent.
          content:
            application/json:
              schema:
                type: object
                title: pricing intent
                description: Object that contains information about a pricing intent.
                oneOf: *ref_49
              examples:
                pricingIntent:
                  summary: Pricing intent
                  description: Pricing intent
                  value: *ref_50
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      summary: Delete pricing intent
      description: Delete a pricing intent.
      operationId: deletePricingIntent
      tags:
        - Pricing intents
      responses:
        '204':
          description: Successful request. We deleted the pricing intent.
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /funding-instructions:
    post:
      tags:
        - Funding instructions
      summary: Create Funding Instruction
      description: Create funding instructions to tell us how to divide funds between your funding recipients.
      operationId: createInstruction
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Inform the payfac what to do with the specified funds. **
              title: funding instruction
              properties: &ref_52
                instructionId:
                  type: integer
                  description: Unique identifier of the funding instruction.
                  example: 12345
                  readOnly: true
                createdDate:
                  type: string
                  description: Date that we created the funding instruction.
                  format: datetime
                  example: '2021-09-05T13:15:00.000Z'
                  readOnly: true
                lastModifiedDate:
                  type: string
                  description: Date of the most recent change to the funding instruction.
                  format: datetime
                  example: '2021-09-06T18:00:00.000Z'
                  readOnly: true
                status:
                  type: string
                  description: Status of the funding instruction.
                  enum:
                    - accepted
                    - pending
                    - completed
                  readOnly: true
                merchants:
                  type: array
                  description: Array of merchantInstruction objects.
                  items:
                    type: object
                    title: merchant instruction
                    description: Instruction indicating which recipients should receive funding from the specific merchant balance.
                    properties:
                      merchantId:
                        type: string
                        description: Unique identifier of the merchant.
                        example: '123456'
                      recipients:
                        type: array
                        description: Array of target fundingAccount objects.
                        minItems: 1
                        items:
                          type: object
                          title: target funding account
                          description: Object that contains information about the target funding account.
                          required:
                            - fundingAccountId
                            - paymentMethod
                            - amount
                          properties:
                            fundingAccountId:
                              type: integer
                              description: Unique identifier of the funding account that we pay the funds into.
                              example: 5432425374
                            paymentMethod:
                              type: string
                              description: Method of payment.
                              enum:
                                - ACH
                            amount:
                              type: object
                              description: Object that contains details about the funds.
                              required:
                                - value
                              properties:
                                value:
                                  type: number
                                  example: 12350
                                  description: Value of funds in the currency's lowest denomination, for example, cents.
                                currency:
                                  description: Currency of the values. The default value is USD.
                                  type: string
                                  default: USD
                                  enum:
                                    - USD
                            status:
                              readOnly: true
                              type: string
                              description: Status of the funding instruction.
                              enum:
                                - accepted
                                - pending
                                - released
                                - funded
                                - failed
                                - rejected
                                - onHold
                            metadata:
                              type: object
                              additionalProperties:
                                type: string
                              description: '[Metadata](/api/metadata) object you can use to include custom data with your request.'
                              example:
                                customerId: '2345'
                            link:
                              readOnly: true
                              description: Array of HATEOAS links for viewing a funding account.
                              type: object
                              properties:
                                rel:
                                  type: string
                                  example: fundingAccount
                                method:
                                  type: string
                                  example: get
                                href:
                                  type: string
                                  example: https://api.payroc.com/v1/funding-accounts/5432425374
                      link:
                        readOnly: true
                        description: Array of HATEOAS links to view the merchant.
                        type: object
                        properties:
                          rel:
                            type: string
                            example: merchant
                          method:
                            type: string
                            example: get
                          href:
                            type: string
                            example: https://api.payroc.com/v1/merchants/123456
                    required:
                      - merchantId
                      - recipients
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: '[Metadata](/api/metadata) object you can use to include custom data with your request.'
                  example:
                    internalInstructionRef: abcdef
      responses:
        '201':
          description: Successful request. We accepted the instructions.
          content:
            application/json:
              schema:
                type: object
                description: Inform the payfac what to do with the specified funds. **
                title: funding instruction
                properties: *ref_52
              examples:
                newInstructions:
                  summary: New instruction accepted.
                  value: &ref_244
                    instructionId: 123
                    createdDate: '2021-09-05T13:15:00.000Z'
                    lastModifiedDate: null
                    status: accepted
                    merchants:
                      - merchantId: '99999'
                        recipients:
                          - status: accepted
                            fundingAccountId: 67890
                            paymentMethod: ACH
                            amount:
                              value: 12350
                              currency: USD
                            metadata:
                              customerId: '2345'
                            link:
                              rel: fundingAccount
                              method: get
                              href: https://api.payroc.com/v1/funding-accounts/67890
                        link:
                          rel: merchant
                          method: get
                          href: https://api.payroc.com/v1/merchants/99999
                    metadata:
                      instructionRef: abcd
          headers:
            location:
              description: URI reference to created resource.
              style: simple
              explode: false
              schema: *ref_22
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                insufficientFunds:
                  summary: Insufficient funds
                  description: You do not have enough funds to complete the request.
                  value: &ref_53
                    type: https://docs.payroc.com/api/errors#insufficient-funds
                    title: Insufficient funds
                    status: 400
                    detail: You do not have the required funds to complete this transaction
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                fundingAccountsRestrcited:
                  summary: Funding accounts restricted
                  description: Funding accounts restricted.
                  value: &ref_55
                    type: https://docs.payroc.com/api/errors#funding-accounts-restricted
                    title: Funding accounts restricted
                    status: 400
                    detail: One or more funding accounts are restricted and can't receive funding instructions
                    errors:
                      - fundingAccountId: 1234,
                        message: Funding account on hold
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
        '500':
          description: An error has occured
          content: *ref_13
    get:
      tags:
        - Funding instructions
      summary: List funding instructions
      description: Retrieve a list of funding instructions for a specific date range.
      operationId: listInstructions
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: dateFrom
          in: query
          description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
          required: true
          schema: &ref_58
            type: string
            format: date
            example: '2021-09-01'
        - name: dateTo
          in: query
          required: true
          description: Retrieve activity that occured before `dateTo`.
          schema: &ref_59
            type: string
            format: date
            example: '2021-09-30'
      responses:
        '200':
          description: Successful request. Returns a list of funding instructions.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of fundingInstruction objects.
                        items:
                          allOf:
                            - type: object
                              description: Inform the payfac what to do with the specified funds. **
                              title: funding instruction
                              properties: *ref_52
                            - type: object
                              properties:
                                link:
                                  type: object
                                  description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                  properties: *ref_3
                                  required: *ref_4
                                  example: *ref_5
                    required:
                      - data
              examples:
                listSplitsExample:
                  summary: Paginated instructions list
                  value: &ref_243
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-instructions?before=65&limit=2&datefrom=2021-01-01&dateto=2021-01-30
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-instructions?after=66&limit=2&datefrom=2021-01-01&dateto=2021-01-30
                    data:
                      - instructionId: 65
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        status: completed
                        merchants:
                          - merchantId: '99999'
                            recipients:
                              - status: funded
                                fundingAccountId: 67890
                                paymentMethod: ACH
                                amount:
                                  value: 12350
                                  currency: USD
                                metadata:
                                  customerId: '2345'
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/67890
                              - status: rejected
                                fundingAccountId: 67889
                                paymentMethod: ACH
                                amount:
                                  value: 9000
                                  currency: USD
                                metadata:
                                  customerId: '2345'
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/67889
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/99999
                        metadata:
                          instrcutionRef: abcd
                        link:
                          rel: fundingInstruction
                          method: get
                          href: https://api.payroc.com/v1/funding-instructions/65
                      - instructionId: 66
                        createdDate: '2021-09-06T13:15:00.000Z'
                        lastModifiedDate: null
                        status: accepted
                        merchants:
                          - merchantId: '12345'
                            recipients:
                              - status: accepted
                                fundingAccountId: 54784
                                paymentMethod: ACH
                                amount:
                                  value: 5000
                                  currency: USD
                                metadata:
                                  customerId: '5412'
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/54784
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/12345
                          - merchantId: 12346
                            recipients:
                              - status: accepted
                                fundingAccountId: 54784
                                paymentMethod: ACH
                                amount:
                                  value: 1000
                                  currency: USD
                                metadata:
                                  customerId: '5412'
                                link:
                                  rel: fundingAccount
                                  method: get
                                  href: https://api.payroc.com/v1/funding-accounts/54784
                            link:
                              rel: merchant
                              method: get
                              href: https://api.payroc.com/v1/merchants/12346
                        metadata:
                          instrcutionRef: efgh
                        link:
                          rel: fundingInstruction
                          method: get
                          href: https://api.payroc.com/v1/funding-instructions/66
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: &ref_60
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: Expected date, got "abc"
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value: &ref_57
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
                outsideRecordRange:
                  summary: Bad request
                  description: Requested data outside allowed range.
                  value: &ref_61
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: datefrom
                        detail: invalid date
                        message: datefrom cannot be longer than two years ago.
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /funding-instructions/{instructionId}:
    parameters:
      - name: instructionId
        in: path
        required: true
        description: Unique identifier of the funding instruction.
        schema: &ref_114
          type: integer
          example: '124567'
    get:
      tags:
        - Funding instructions
      summary: Retrieve funding instruction
      operationId: getInstruction
      description: Retrieve a specific funding instruction.
      responses:
        '200':
          description: Successful request. Returns the requested funding instruction.
          content:
            application/json:
              schema:
                type: object
                description: Inform the payfac what to do with the specified funds. **
                title: funding instruction
                properties: *ref_52
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: &ref_54
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: instructionId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    put:
      tags:
        - Funding instructions
      summary: Update Funding Instruction
      operationId: updateInstructions
      description: Update an existing funding instruction.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Inform the payfac what to do with the specified funds. **
              title: funding instruction
              properties: *ref_52
      responses:
        '204':
          description: Successful request. We updated the funding instruction.
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                insufficientFunds:
                  summary: Insufficient funds
                  description: You do not have enough funds to complete the request.
                  value: *ref_53
                canNotBeModified:
                  summary: Cannot be modified
                  description: Resource cannot be modified.
                  value: &ref_56
                    type: https://docs.payroc.com/api/errors#cannot-be-modified
                    title: Cannot be modified
                    status: 409
                    detail: You cannot modify this resource in its current state
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: *ref_54
                fundingAccountsRestrcited:
                  summary: Funding accounts restricted
                  description: Funding accounts restricted.
                  value: *ref_55
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      summary: Delete Funding Instruction
      description: Delete an existing funding instruction.
      operationId: deleteInstructions
      tags:
        - Funding instructions
      responses:
        '204':
          description: Successful request. We deleted the funding instruction.
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                canNotBeModified:
                  summary: Cannot be modified
                  description: Resource cannot be modified.
                  value: *ref_56
                instructionIdError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: *ref_54
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
  /funding-balance:
    get:
      tags:
        - Funding activity
      summary: Retrieve funding balance
      operationId: getFundingBalance
      description: Retrieve the balance of funds that are available for each merchant.
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: merchantId
          in: query
          required: false
          description: Unique identifier of the merchant.
          schema:
            type: string
            example: '123456789'
      responses:
        '200':
          description: Successful request. Returns the balance available for each merchant.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of merchantBalance objects.
                        items:
                          type: object
                          description: Object that contains information about the total funds available to the merchant.
                          title: merchant balance
                          properties: &ref_182
                            merchantId:
                              type: string
                              description: Unique Identifier of the merchant.
                              example: '123'
                            funds:
                              type: integer
                              description: Value of funds in the currency's lowest denomination, for example, cents.
                              example: 120000
                            pending:
                              type: number
                              description: Value of funds that we have not yet sent to funding recipients. We return this value in the currency's lowest denomination, for example, cents.
                              example: 50050
                            available:
                              type: number
                              description: Value of funds available for funding instructions. We return this value in the currency's lowest denomination, for example, cents.
                              example: 69950
                            currency:
                              type: string
                              description: Currency of the values. The default value is USD.
                              example: USD
                    required:
                      - data
              examples:
                listSplitsExample:
                  summary: Paginated list of merchant balances
                  description: Paginated list of merchant balances.
                  value: &ref_245
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-balance?before=65&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-balance?after=66&limit=2
                    data:
                      - merchantId: '65'
                        funds: 120000
                        pending: 50050
                        available: 69950
                        currency: USD
                      - merchantId: '66'
                        funds: 50000
                        pending: 0
                        available: 50000
                        currency: USD
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value: *ref_57
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /funding-activity:
    get:
      tags:
        - Funding activity
      summary: List funding activity
      description: Retrieve funding activity for a specific date range.
      operationId: getFundingActivity
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: dateFrom
          in: query
          description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
          required: true
          schema: *ref_58
        - name: dateTo
          in: query
          required: true
          description: Retrieve activity that occured before `dateTo`.
          schema: *ref_59
        - name: merchantId
          in: query
          required: false
          description: Unique identifier of the merchant.
          schema:
            type: string
            example: '123456789'
      responses:
        '200':
          description: Successful request. Returns all available funding activity for the date range.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of activityRecord objects.
                        items:
                          type: object
                          description: Array of activityRecord objects.
                          title: activity record
                          properties: &ref_183
                            id:
                              type: integer
                              description: Unique identifier of the activity record.
                              example: '12345'
                            date:
                              type: string
                              format: datetime
                              example: '2021-01-01T19:32:00.000Z'
                              description: Date of the transaction.
                            merchant:
                              type: string
                              description: Name of the merchant that the activity applies to.
                              example: Joes Hot dogs
                            recipient:
                              type: string
                              description: Recipient of the credit.
                            description:
                              type: string
                              example: Sales
                              description: Description of the activity.
                            amount:
                              type: number
                              example: 20000
                              description: Total fund amount of the transaction. This is returned in the lowest unit of currency.
                            type:
                              type: string
                              description: Payment type.
                              enum:
                                - credit
                                - debit
                            currency:
                              type: string
                              description: Currency of all values.
                              example: USD
                          required: &ref_184
                            - id
                            - date
                            - recipient
                            - merchant
                            - description
                            - amount
                            - type
                            - currency
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated activity records
                  description: Valid payfac account with activity for date range.
                  value: &ref_246
                    limit: 10
                    count: 10
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/funding-activity?before=11&limit=10&datefrom=2021-01-01&dateto=2021-01-30
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/funding-activity?after=20&limit=10&datefrom=2021-01-01&dateto=2021-01-30
                    data:
                      - id: '11'
                        date: '2021-01-01T17:00:00.000Z'
                        merchant: Joes Hot dogs
                        description: sales
                        type: credit
                        amount: 20000
                        currency: USD
                      - id: '12'
                        date: '2021-01-01T19:32:00.000Z'
                        merchant: Joes Hot dogs
                        description: sales
                        type: credit
                        amount: 50000
                        currency: USD
                      - id: '13'
                        date: '2021-01-01T17:00:00.000Z'
                        merchant: Joes Hot dogs
                        recipient: Joes Hot dogs
                        description: payment
                        type: debit
                        amount: 10000
                        currency: USD
                      - id: '14'
                        date: '2021-01-01T17:00:00.000Z'
                        merchant: Joes Hot dogs
                        recipient: Payroc
                        description: Interchange Fees
                        type: debit
                        amount: 500
                        currency: USD
                      - id: '15'
                        date: '2021-01-03T09:10:00.000Z'
                        merchant: Joes Hot dogs
                        description: sales
                        type: credit
                        amount: 30000
                        currency: USD
                      - id: '16'
                        date: '2021-01-10T17:00:00.000Z'
                        merchant: Janes shoe laces LTD
                        description: adjustment
                        type: credit
                        amount: 500
                        currency: USD
                      - id: '17'
                        date: '2021-01-10T17:00:00.000Z'
                        merchant: Janes shoe laces LTD
                        recipient: Payroc
                        description: Interchange Fees
                        type: debit
                        amount: 500
                        currency: USD
                      - id: '18'
                        date: '2021-01-15T17:00:00.000Z'
                        merchant: Joes Hot dogs
                        recipient: Payroc
                        description: Charge back
                        type: debit
                        amount: 1000
                        currency: USD
                      - id: '19'
                        date: '2021-01-17T17:00:00.000Z'
                        merchant: Janes shoe laces LTD
                        description: sales
                        type: credit
                        amount: 50000
                        currency: USD
                      - id: '20'
                        date: '2021-01-26T17:00:00.000Z'
                        merchant: Joes Hot dogs
                        recipient: Mr Payfac corp
                        description: payment
                        type: debit
                        amount: 5000
                        currency: USD
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad request
                  description: One or more validation errors occurred.
                  value: *ref_60
                paginationError:
                  summary: Bad request
                  description: One or more validation errors occurred
                  value: *ref_57
                outsideRecordRange:
                  summary: Bad request
                  description: Requested data outside allowed range.
                  value: *ref_61
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /batches:
    get:
      tags:
        - Settlement
      summary: List batches
      description: Retrieve batch data for a specific date.
      operationId: getbatches
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: date
          in: query
          required: true
          description: Date that the merchant submitted the batch.
          schema:
            type: string
            example: '2021-09-05'
        - name: merchantId
          in: query
          description: Unique identifier of the merchant.
          schema: &ref_64
            type: string
            example: '4525644354'
      responses:
        '200':
          description: Successful request. Returns a paginated list of batches.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of batch objects.
                        items:
                          type: object
                          title: batch
                          properties: &ref_62
                            batchId:
                              type: integer
                              description: Unique identifier of the batch.
                              example: 123
                            date:
                              type: string
                              format: date
                              description: Date that the merchant submitted the batch.
                              example: '2021-09-05'
                            createdDate:
                              type: string
                              format: datetime
                              description: Date that we created a record for the batch.
                            lastModifiedDate:
                              type: string
                              format: datetime
                              description: Date that the batch was last changed.
                            saleAmount:
                              type: integer
                              description: Total value of sales. We return the value in the currency's lowest denomination, for example, cents.
                            heldAmount:
                              type: integer
                              description: Total value of authorizations. We return the value in the currency's lowest denomination, for example, cents.
                            returnAmount:
                              type: integer
                              description: Total value of returns. We return the value in the currency's lowest denomination, for example, cents.
                            transactionCount:
                              type: integer
                              description: Total number of transactions in the batch.
                            currency:
                              type: string
                              description: Currency of the transactions.
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: &ref_65
                                merchantId:
                                  type: string
                                  description: Unique identifier of the merchant.
                                  example: '4525644354'
                                doingBusinessAs:
                                  type: string
                                  description: Legal name that the business operates as.
                                  example: Joes bloggs pizza
                                link:
                                  type: object
                                  description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                  properties: *ref_3
                                  required: *ref_4
                                  example: *ref_5
                              example: &ref_66
                                merchantId: '4525644354'
                                doingBusinessAs: Joes bloggs pizza
                                link:
                                  rel: merchant
                                  method: get
                                  href: https://api.payroc.com/v1/merchants/4525644354
                            links:
                              type: array
                              items:
                                type: object
                                description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                properties: *ref_3
                                required: *ref_4
                                example: *ref_5
                              example:
                                - rel: transactions
                                  method: get
                                  href: https://api.payroc.com/v1/transactions?batchId=123
                                - rel: authorizations
                                  method: get
                                  href: https://api.payroc.com/v1/authorizations?batchId=123
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated batches
                  value: &ref_247
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/batches?before=65&limit=2&date=2021-01-01
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/batches?after=66&limit=2&&date=2021-01-01
                    data:
                      - batchId: 65
                        date: '2021-01-01'
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        saleAmount: 100
                        heldAmount: 0
                        returnAmount: 0
                        transactionCount: 10
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Joe Bloggs pizza
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/merchants/4525644354
                        links:
                          - rel: transactions
                            method: get
                            href: https://api.payroc.com/v1/transactions?batchId=65
                          - rel: authorizations
                            method: get
                            href: https://api.payroc.com/v1/authorizations?batchId=65
                      - batchId: 66
                        date: '2021-01-01'
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        saleAmount: 76
                        heldAmount: 0
                        returnAmount: 12
                        transactionCount: 10
                        currency: USD
                        merchant:
                          merchantId: '987654321'
                          doingBusinessAs: Joe Bloggs Shoes
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/merchants/987654321
                        links:
                          - rel: transactions
                            method: get
                            href: https://api.payroc.com/v1/transactions?batchId=66
                          - rel: authorizations
                            method: get
                            href: https://api.payroc.com/v1/authorizations?batchId=66
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_67
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: date
                        detail: invalid date
                        message: Expected date, got "abc"
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_68
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: before
                        detail: invalid value
                        message: Expected integer, got abc
                idError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_63
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: batchId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /batches/{batchId}:
    get:
      tags:
        - Settlement
      summary: Retrieve batch
      description: Retrieve a specific batch.
      operationId: getbatch
      parameters:
        - name: batchId
          description: Unique identifier of the batch.
          in: path
          required: true
          style: simple
          schema: &ref_115
            type: integer
            example: 12345
      responses:
        '200':
          description: Successful request. Returns the requested batch.
          content:
            application/json:
              schema:
                type: object
                title: batch
                properties: *ref_62
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                idError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_63
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /transactions:
    get:
      tags:
        - Settlement
      summary: List transactions
      description: Retrieve a list of transactions.
      operationId: getTransactions
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: date
          in: query
          required: true
          description: Date to retrieve results from. You must provide either the 'batchId' or the 'date'.
          schema: &ref_70
            type: string
            example: '2021-09-05'
        - name: batchId
          in: query
          required: true
          description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
          schema: &ref_71
            type: integer
            example: 12345
        - name: merchantId
          in: query
          description: Unique identifier of the merchant.
          schema: *ref_64
        - name: transactionType
          in: query
          required: false
          description: Type of transaction.
          schema: &ref_116
            type: string
            enum:
              - Capture
              - Return
      responses:
        '200':
          description: Successful request. Returns a paginated list of transactions.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of transaction objects.
                        items:
                          type: object
                          title: transaction
                          description: Object that contains information about the transaction.
                          properties: &ref_69
                            transactionId:
                              type: integer
                              description: Unique identifier of the transaction. If we can't match a dispute to a transaction, we don't return 'transactionID' or a 'link' object.
                              example: 12345
                              nullable: true
                            type:
                              type: string
                              description: Indicates the type of transaction.
                              enum:
                                - capture
                                - return
                            date:
                              type: string
                              format: datetime
                              description: Timestamp of the transaction.
                              example: '2021-01-01T17:00:00.000Z'
                            amount:
                              type: integer
                              description: Transaction amount. We return the value in the currency's lowest denomination, for example, cents.
                              example: 25000
                            entryMethod:
                              type: string
                              description: Describes how the merchant received the payment details. If we can't match a dispute to a transaction, we don't return an 'entryMethod' object.
                              nullable: true
                              enum:
                                - barcodeRead
                                - smartChipRead
                                - swipedOriginUnknown
                                - contactlessChip
                                - ecommerce
                                - manuallyEntered
                                - manuallyEnteredFallback
                                - swiped
                                - swipedFallback
                                - swipedError
                                - scannedCheckReader
                                - credentialOnFile
                                - unknown
                            createdDate:
                              type: string
                              format: datetime
                              description: Date that we received the transaction.
                            lastModifiedDate:
                              type: string
                              format: datetime
                              description: Date that the transaction was last changed.
                            status:
                              type: string
                              description: Indicates the status of the transaction.
                              enum:
                                - fullSuspense
                                - heldAudited
                                - heldReleasedAudited
                                - holdForSettlement30Days
                                - holdForSettlementDuplicate
                                - holdLongTerm
                                - paid
                                - paidByThirdParty
                                - partialRelease
                                - pull
                                - release
                                - new
                                - held
                                - unknown
                            cashbackAmount:
                              type: integer
                              description: Cashback amount. We return the value in the currency's lowest denomination, for example, cents.
                            interchange:
                              type: object
                              description: Object that contains information about the interchange fees for the transaction.
                              properties:
                                basisPoint:
                                  type: integer
                                  description: Interchange basis points that we apply to the transaction.
                                transactionFee:
                                  type: integer
                                  description: Interchange fee for the transaction. We return the value in the currency's lowest denomination, for example, cents.
                            currency:
                              type: string
                              description: Currency of the transaction.
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_65
                              example: *ref_66
                            settled:
                              type: object
                              title: settlement summary
                              description: Object that contains information about the settlement.
                              properties: &ref_185
                                settledBy:
                                  type: string
                                  description: Processor that settled the transaction.
                                achDate:
                                  type: string
                                  format: date
                                  description: Date that the processor settled the transaction.
                                  example: '2021-09-05'
                            batch:
                              type: object
                              title: batch summary
                              description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
                              nullable: true
                              properties: &ref_72
                                batchId:
                                  type: integer
                                  description: Unique identifier of the batch.
                                  example: 1234
                                date:
                                  type: string
                                  format: date
                                  description: Date that the merchant submitted the batch.
                                  example: '2021-09-05'
                                cycle:
                                  type: string
                                  description: Indicates the cycle that contains the batch.
                                  example: am
                                link:
                                  type: object
                                  description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                  properties: *ref_3
                                  required: *ref_4
                                  example: *ref_5
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: &ref_73
                                cardNumber:
                                  type: string
                                  description: Card number. We mask the number except for the first six digits and the last four digits.
                                  example: 123456**********4124
                                type:
                                  type: string
                                  description: Card type. If we can't match a dispute to a transaction, we don't return a 'type' object.
                                  nullable: true
                                  enum:
                                    - visa
                                    - masterCard
                                    - discover
                                    - debit
                                    - ebt
                                    - wrightExpress
                                    - voyager
                                    - amex
                                    - privateLabel
                                    - storedValue
                                    - discoverRetained
                                    - jcbNonSettled
                                    - dinersClub
                                    - amexOptBlue
                                    - fuelman
                                    - unknown
                                cvvPresenceIndicator:
                                  type: boolean
                                  description: Indicates if the cardholder provided the CVV.
                                avsRequest:
                                  type: boolean
                                  description: Indicates if the AVS was used to verify the cardholder's address.
                                avsResponse:
                                  type: string
                                  description: Response from the AVS.
                            authorization:
                              type: object
                              title: authorization summary
                              description: Object that contains information about the authorization.
                              properties: &ref_186
                                authorizationId:
                                  type: integer
                                  description: Unique identifier of the authorization.
                                  example: 12345
                                code:
                                  type: string
                                  description: Authorization code.
                                amount:
                                  type: integer
                                  description: Authorization amount. We return the value in the currency's lowest denomination, for example, cents.
                                avsResponseCode:
                                  type: string
                                  description: Response code that indicates if the address matches the address registered to the customer.
                                link:
                                  type: object
                                  description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                  properties: *ref_3
                                  required: *ref_4
                                  example: *ref_5
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated transactions
                  value: &ref_248
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/transctions?before=65&limit=2&date=2021-01-01
                    data:
                      - transactionId: 65
                        type: capture
                        date: '2021-01-01'
                        amount: 25000
                        entryMethod: ecommerce
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        status: paid
                        cashbackAmount: 0
                        interchange:
                          basisPoint: 0,
                          transactionFee: 0
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Joe Bloggs pizza
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/merchants/4525644354
                        settled:
                          settledBy: 3rd party
                          achDate: '2021-09-05T13:15:00.000Z'
                        batch:
                          batchId: 12
                          date: '2021-01-01'
                          cycle: am
                          link:
                            rel: batch
                            method: get
                            href: https://api.payroc.com/v1/batches/12
                        card:
                          cardNumber: 12456**********4124
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: ''
                        authorization:
                          authorizationId: 12345
                          code: ABCDE
                          amount: 100
                          avsResponseCode: ''
                          link:
                            rel: authorization
                            method: get
                            href: https://api.payroc.com/v1/authorizations/12345
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_67
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_68
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /transactions/{transactionId}:
    get:
      tags:
        - Settlement
      summary: Retrieve transaction
      description: Retrieve a specific transaction.
      operationId: gettransaction
      parameters:
        - name: transactionId
          description: Unique identifier of the transaction.
          in: path
          required: true
          style: simple
          schema: &ref_117
            type: integer
            example: 12345
      responses:
        '200':
          description: Successful request. Returns the requested transaction.
          content:
            application/json:
              schema:
                type: object
                title: transaction
                description: Object that contains information about the transaction.
                properties: *ref_69
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                transactionIdError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: &ref_249
                    type: https://docs.payroc.com/api/errors#bad-request
                    title: Bad request
                    status: 400
                    detail: One or more validation errors occurred, see error section for more info
                    errors:
                      - parameter: transactionId
                        detail: invalid value
                        message: Expected integer, got abc
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /authorizations:
    get:
      tags:
        - Settlement
      summary: List authorizations
      description: Retrieve a list of authorizations.
      operationId: getAuthorizations
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: date
          in: query
          required: true
          description: Date to retrieve results from. You must provide either the 'batchId' or the 'date'.
          schema: *ref_70
        - name: batchId
          in: query
          required: true
          description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
          schema: *ref_71
        - name: merchantId
          in: query
          description: Unique identifier of the merchant.
          schema: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of authorizations.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of authorization objects.
                        items:
                          type: object
                          title: authorization
                          description: Object that contains information about the authorization.
                          properties: &ref_74
                            authorizationId:
                              type: integer
                              description: Unique identifier of the authorization.
                              example: 12345
                            createdDate:
                              type: string
                              format: datetime
                              description: Date that we received the authorization.
                            lastModifiedDate:
                              type: string
                              format: datetime
                              description: Date that the authorization was last changed.
                            authorizationResponse:
                              type: string
                              description: Code that indicates the response for the authorization.
                              enum:
                                - activityCountLimitExceeded
                                - alreadyReversed
                                - approved
                                - approveVip
                                - approveWithId
                                - cannotVerifyPin
                                - cardAuthenticationFailed
                                - cardTypeVerificationError
                                - cashRequestExceedsIssuerLimit
                                - cashServiceNotAvailable
                                - cidVerificationError
                                - contactCardIssuer
                                - cryptographicFailure
                                - dailyThresholdExceeded
                                - declineCvv2Failure
                                - deny
                                - denyAccountCanceled
                                - denyClosedMerchant
                                - denyNewCardIssued
                                - denyPickUpCard
                                - destinationCannotBeFoundForRouting
                                - doNotHonor
                                - duplicateTransmissionDetected
                                - error
                                - exceedsWithdrawalAmountLimit
                                - expiredCard
                                - fileTemporarilyUnavailable
                                - forceStip
                                - formatError
                                - forwardToIssuer
                                - functionNotSupported
                                - honorWithId
                                - incorrectCvv
                                - incorrectPin
                                - ineligibleForResubmission
                                - insufficientFunds
                                - invalidAccount
                                - invalidAccountNumber
                                - invalidAmount
                                - invalidAuthorizationLifeCycle
                                - invalidBillerInformation
                                - invalidCardSecurityCode
                                - invalidCurrencyCode
                                - invalidMerchant
                                - invalidResponse
                                - invalidTransaction
                                - issuerNotAvailable
                                - issuerTimeout
                                - issuerUnavailable
                                - noActionTaken
                                - noCardRecord
                                - noCheckingAccount
                                - noCreditAccount
                                - noFinancialImpact
                                - noReasonToDecline
                                - noSavingsAccount
                                - noSuchIssuer
                                - partialApproval
                                - partialAuthorization
                                - pickUpCard
                                - pickUpCardSpecialCondition
                                - pinChangeRequestDeclined
                                - pinCryptographicErrorFound
                                - pinEntryTriesExceeded
                                - pinNotChanged
                                - pleaseCallIssuer
                                - reenterTransaction
                                - referToCardIssuer
                                - referToCardIssuerSpecialCondition
                                - restrictedCard
                                - reversal
                                - reversalDataInconsistent
                                - revokeAllAuthorizationsOrder
                                - scheduledTransactionstoppedByCardholder
                                - securityViolation
                                - successful
                                - surchargeAmountNotPermitted
                                - suspectFraud
                                - systemMalfunction
                                - transactionAmountExceedsApprovalAmount
                                - transactionCannotBeCompleted
                                - transactionNotAllowedAtMerchant
                                - transactionNotAllowedAtTerminal
                                - transactionNotPermitted
                                - transactionNotPermittedToCardholder
                                - unableToGoOnline
                                - unableToLocateRecordInFile
                                - unableToVerifyPin
                                - unacceptablePin
                                - unknown
                                - unsafePin
                            preauthorizationRequestAmount:
                              type: integer
                              description: Amount that the merchant requested for the authorization. We return the value in the currency's lowest denomination, for example, cents.
                              example: 10000
                            currency:
                              type: string
                              description: Currency of the authorization.
                            batch:
                              type: object
                              title: batch summary
                              description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
                              nullable: true
                              properties: *ref_72
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: *ref_73
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_65
                              example: *ref_66
                            transaction:
                              type: object
                              title: transaction summary
                              description: Object that contains summary information about the transaction.
                              properties: &ref_75
                                transactionId:
                                  type: integer
                                  description: Unique identifier of the transaction. If we can't match a dispute to a transaction, we don't return 'transactionID' or a 'link' object.
                                  example: 12345
                                  nullable: true
                                type:
                                  type: string
                                  description: Indicates the type of transaction.
                                  enum:
                                    - capture
                                    - return
                                date:
                                  type: string
                                  format: datetime
                                  description: Timestamp of the transaction.
                                  example: '2021-01-01T17:00:00.000Z'
                                entryMethod:
                                  type: string
                                  description: Describes how the merchant received the payment details. If we can't match a dispute to a transaction, we don't return an 'entryMethod' object.
                                  nullable: true
                                  enum:
                                    - barcodeRead
                                    - smartChipRead
                                    - swipedOriginUnknown
                                    - contactlessChip
                                    - ecommerce
                                    - manuallyEntered
                                    - manuallyEnteredFallback
                                    - swiped
                                    - swipedFallback
                                    - swipedError
                                    - scannedCheckReader
                                    - credentialOnFile
                                    - unknown
                                amount:
                                  type: integer
                                  description: Transaction amount. We return the value in the currency's lowest denomination, for example, cents.
                                  example: 25000
                                link:
                                  type: object
                                  description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                  properties: *ref_3
                                  required: *ref_4
                                  example: *ref_5
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated authorizations
                  value: &ref_250
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/authorizations?before=65&limit=2&date=2021-01-01
                    data:
                      - authorizationId: 65
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        authorizationResponse: successful
                        preauthorizationRequestAmount: 10000
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Joe Bloggs pizza
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/merchants/4525644354
                        batch:
                          batchId: 12
                          date: '2021-01-01'
                          cycle: am
                          link:
                            rel: batch
                            method: get
                            href: https://api.payroc.com/v1/batches/12
                        card:
                          cardNumber: 12456**********4124
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: ''
                        transaction:
                          transactionId: 12345
                          type: capture
                          date: ''
                          entryMethod: swiped
                          amount: 100
                          link:
                            rel: transaction
                            method: get
                            href: https://api.payroc.com/v1/transactions/12345
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_67
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_68
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /authorizations/{authorizationId}:
    get:
      tags:
        - Settlement
      summary: Retrieve authorization
      description: Retrieve a specific authorization.
      operationId: getAuthorization
      parameters:
        - name: authorizationId
          description: Unique identifier of the authorization.
          in: path
          required: true
          style: simple
          schema: &ref_118
            type: integer
            example: 12345
      responses:
        '200':
          description: Successful request. Returns the requested authorization.
          content:
            application/json:
              schema:
                type: object
                title: authorization
                description: Object that contains information about the authorization.
                properties: *ref_74
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /disputes:
    get:
      tags:
        - Settlement
      summary: List disputes
      description: Retrieve a list of disputes.
      operationId: getdisputes
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - name: date
          in: query
          required: true
          description: Date that the dispute was submitted.
          schema:
            type: string
            format: date
            example: '2021-09-05'
        - name: merchantId
          in: query
          description: Unique identifier of the merchant.
          schema: *ref_64
      responses:
        '200':
          description: Successful request. Returns a paginated list of disputes.
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of dispute objects.
                        items:
                          type: object
                          title: dispute
                          description: Object that contains information about the dispute.
                          properties: &ref_187
                            disputeId:
                              type: integer
                              description: Unique identifier of the dispute.
                              example: 12345
                            disputeType:
                              type: string
                              description: Type of dispute.
                              enum:
                                - prearbitration
                                - issuerReversal
                                - firstDisputeWithReversal
                                - firstDispute
                            currentStatus:
                              allOf:
                                - type: object
                                  title: dispute status
                                  description: Object that contains information about the current status of the dispute.
                                  properties: &ref_76
                                    disputeStatusId:
                                      type: integer
                                      description: Unique identifier of the dispute status.
                                      example: 12345
                                    status:
                                      type: string
                                      description: Status of the dispute.
                                      enum:
                                        - prearbitrationInProcess
                                        - prearbitrationAccepted
                                        - prearbitrationDeclined
                                        - arbitrationFiledWithCardBand
                                        - arbitrationFundsToBeReturned
                                        - arbitrationLost
                                        - arbitrationSettledPartialAmount
                                        - precomplianceInProcess
                                        - precomplianceAccepted
                                        - precomplianceDeclined
                                        - complianceFiledWithCardBand
                                        - complianceLost
                                        - complianceSettledPartialAmount
                                        - invalid
                                        - issuerReversal
                                        - new
                                        - rejected
                                        - representmentInProgress
                                        - representmentFailed
                                        - representmentPaid
                                        - representmentReceived
                                        - stand
                                    statusDate:
                                      type: string
                                      format: datetime
                                      description: Date that the status changed.
                                - type: object
                                  properties:
                                    link:
                                      type: object
                                      description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                      properties: *ref_3
                                      required: *ref_4
                                      example: *ref_5
                            createdDate:
                              type: string
                              format: datetime
                              description: Date that we received the dispute.
                            lastModifiedDate:
                              type: string
                              format: datetime
                              description: Date that the dispute was last changed.
                            receivedDate:
                              type: string
                              format: datetime
                              description: Date that the acquiring bank received the dispute.
                            description:
                              type: string
                              description: Description of the dispute.
                            referenceNumber:
                              type: string
                              description: Reference number from the acquiring bank.
                            disputeAmount:
                              type: integer
                              description: Dispute amount. We return the value in the currency's lowest denomination, for example, cents.
                            feeAmount:
                              type: integer
                              description: Value of the fees for the dispute. We return the value in the currency's lowest denomination, for example, cents.
                            firstDispute:
                              type: boolean
                              description: Indicates if this is the first dispute for the transaction.
                              example: true
                            authorizationCode:
                              type: string
                              description: Authorization code.
                            currency:
                              type: string
                              description: Currency of the dispute.
                            card:
                              type: object
                              title: card summary
                              description: Object that contains information about the card.
                              properties: *ref_73
                            merchant:
                              type: object
                              title: merchant summary
                              description: Object that contains information about the merchant.
                              properties: *ref_65
                              example: *ref_66
                            transaction:
                              type: object
                              title: transaction summary
                              description: Object that contains summary information about the transaction.
                              properties: *ref_75
                    required:
                      - data
              examples:
                paginatedList:
                  summary: Paginated disputes
                  value: &ref_251
                    limit: 2
                    count: 1
                    hasMore: false
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/disputes?before=65&limit=2&date=2021-01-01
                    data:
                      - disputeId: 65
                        disputeType: firstDispute
                        currentStatus:
                          disputeStatusId: 123
                          status: new
                          statusDate: ''
                          link:
                            rel: statuses
                            method: get
                            href: https://api.payroc.com/v1/disputes/12345/statuses
                        createdDate: '2021-09-05T13:15:00.000Z'
                        lastModifiedDate: '2021-09-06T18:00:00.000Z'
                        receivedDate: ''
                        description: ''
                        referenceNumber: '35435435'
                        disputeAmount: 1000
                        feeAmount: 100
                        firstdispute: true
                        authorizationCode: '574254'
                        currency: USD
                        merchant:
                          merchantId: '4525644354'
                          doingBusinessAs: Joe Bloggs pizza
                          link:
                            rel: merchant
                            method: get
                            href: https://api.payroc.com/v1/merchants/4525644354
                        card:
                          cardNumber: 12456**********4124
                          type: visa
                          cvvPresenceIndicator: true
                          avsRequest: true
                          avsResponse: ''
                        transaction:
                          transactionId: 12345
                          type: capture
                          date: ''
                          entryMethod: swiped
                          amount: 100
                          link:
                            rel: transaction
                            method: get
                            href: https://api.payroc.com/v1/transactions/12345
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_67
                paginationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_68
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /disputes/{disputeId}/statuses:
    get:
      tags:
        - Settlement
      summary: List dispute statuses
      description: Retrieve the status history for a specific dispute.
      operationId: getdisputesStatuses
      parameters:
        - name: disputeId
          description: Unique identifier of the dispute.
          in: path
          required: true
          style: simple
          schema: &ref_119
            type: integer
            example: 12345
      responses:
        '200':
          description: Successful request. Returns the status history for a specific dispute.
          content:
            application/json:
              schema:
                type: array
                description: Collection of status
                items:
                  type: object
                  title: dispute status
                  description: Object that contains information about the current status of the dispute.
                  properties: *ref_76
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                parameterError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_67
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /devices/{serialNumber}/payment-instructions:
    post:
      tags:
        - Payment instructions
      summary: Submit payment instruction
      operationId: sendPaymentInstruction
      description: Submit an instruction request to initiate a sale on a payment device.
      parameters:
        - name: serialNumber
          description: Serial number that identifies the merchant’s payment device.
          in: path
          required: true
          schema:
            maxLength: 45
            minLength: 1
            type: string
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_205
                - order
                - processingTerminalId
              type: object
              description: Object that contains the instructions for initiating a payment on a physical device.
              properties: &ref_206
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that our gateway assigned to the terminal.
                order:
                  required: &ref_199
                    - amount
                    - currency
                    - orderId
                  type: object
                  description: Object that contains information about the payment.
                  allOf: &ref_200
                    - required: &ref_79
                        - amount
                        - currency
                        - orderId
                      type: object
                      description: Object that contains details about the transaction.
                      properties: &ref_80
                        orderId:
                          maxLength: 24
                          minLength: 1
                          type: string
                          description: A unique identifier assigned by the merchant.
                        dateTime:
                          type: string
                          format: date-time
                          readOnly: true
                          description: Date and time that the processor processed the transaction. Our gateway returns this value in the ISO 8601 format.
                        description:
                          maxLength: 1024
                          minLength: 0
                          type: string
                          description: Description of the transaction.
                        amount:
                          type: integer
                          format: int64
                          description: Total amount of the transaction. The value is in the currency’s lowest denomination, for example, cents.
                        currency:
                          type: string
                          description: Currency code for the transaction. This code follows the ISO 4217 standard.
                          enum:
                            - AED
                            - AFN
                            - ALL
                            - AMD
                            - ANG
                            - AOA
                            - ARS
                            - AUD
                            - AWG
                            - AZN
                            - BAM
                            - BBD
                            - BDT
                            - BGN
                            - BHD
                            - BIF
                            - BMD
                            - BND
                            - BOB
                            - BOV
                            - BRL
                            - BSD
                            - BTN
                            - BWP
                            - BYR
                            - BZD
                            - CAD
                            - CDF
                            - CHE
                            - CHF
                            - CHW
                            - CLF
                            - CLP
                            - CNY
                            - COP
                            - COU
                            - CRC
                            - CUC
                            - CUP
                            - CVE
                            - CZK
                            - DJF
                            - DKK
                            - DOP
                            - DZD
                            - EGP
                            - ERN
                            - ETB
                            - EUR
                            - FJD
                            - FKP
                            - GBP
                            - GEL
                            - GHS
                            - GIP
                            - GMD
                            - GNF
                            - GTQ
                            - GYD
                            - HKD
                            - HNL
                            - HRK
                            - HTG
                            - HUF
                            - IDR
                            - ILS
                            - INR
                            - IQD
                            - IRR
                            - ISK
                            - JMD
                            - JOD
                            - JPY
                            - KES
                            - KGS
                            - KHR
                            - KMF
                            - KPW
                            - KRW
                            - KWD
                            - KYD
                            - KZT
                            - LAK
                            - LBP
                            - LKR
                            - LRD
                            - LSL
                            - LTL
                            - LVL
                            - LYD
                            - MAD
                            - MDL
                            - MGA
                            - MKD
                            - MMK
                            - MNT
                            - MOP
                            - MRO
                            - MRU
                            - MUR
                            - MVR
                            - MWK
                            - MXN
                            - MXV
                            - MYR
                            - MZN
                            - NAD
                            - NGN
                            - NIO
                            - NOK
                            - NPR
                            - NZD
                            - OMR
                            - PAB
                            - PEN
                            - PGK
                            - PHP
                            - PKR
                            - PLN
                            - PYG
                            - QAR
                            - RON
                            - RSD
                            - RUB
                            - RWF
                            - SAR
                            - SBD
                            - SCR
                            - SDG
                            - SEK
                            - SGD
                            - SHP
                            - SLL
                            - SOS
                            - SRD
                            - SSP
                            - STD
                            - STN
                            - SVC
                            - SYP
                            - SZL
                            - THB
                            - TJS
                            - TMT
                            - TND
                            - TOP
                            - TRY
                            - TTD
                            - TWD
                            - TZS
                            - UAH
                            - UGX
                            - USD
                            - USN
                            - USS
                            - UYI
                            - UYU
                            - UZS
                            - VEF
                            - VES
                            - VND
                            - VUV
                            - WST
                            - XAF
                            - XCD
                            - XOF
                            - XPF
                            - YER
                            - ZAR
                            - ZMW
                            - ZWL
                    - type: object
                      properties:
                        breakdown:
                          required: &ref_197
                            - subtotal
                          type: object
                          description: Object that contains information about the breakdown of the transaction.
                          properties: &ref_198
                            subtotal:
                              type: integer
                              format: int64
                              description: |
                                Total amount of the transaction before tax and fees.
                                The value is in the currency’s lowest denomination, for example, cents.
                            cashbackAmount:
                              type: integer
                              format: int64
                              description: Value of cashback for the transaction.
                            tip:
                              description: Object that contains tip information for the transaction.
                              required: &ref_188
                                - type
                              type: object
                              properties: &ref_189
                                type:
                                  type: string
                                  description: |
                                    Indicates if the tip is a fixed amount or a percentage.  
                                    **Note:** Our gateway applies the percentage tip to the total amount of the transaction after tax.
                                  enum:
                                    - percentage
                                    - fixedAmount
                                mode:
                                  type: string
                                  readOnly: true
                                  description: |
                                    Indicates how the tip was added to the transaction.
                                    - `prompted` – The customer was prompted to add a tip during payment.
                                    - `adjusted` – The customer added a tip on the receipt for the merchant to adjust post-transaction.
                                  enum:
                                    - prompted
                                    - adjusted
                                amount:
                                  minimum: 0
                                  exclusiveMinimum: true
                                  type: integer
                                  format: int64
                                  description: |
                                    If the value for **type** is `fixedAmount`, the value indicates the tip amount in the currency's lowest denomination, for example, cents.
                                percentage:
                                  maximum: 100
                                  exclusiveMaximum: false
                                  minimum: 0
                                  exclusiveMinimum: true
                                  type: number
                                  format: double
                                  description: If the value for **type** is `percentage`, the value indicates the tip as a percentage.
                            taxes:
                              type: array
                              description: List of taxes.
                              items:
                                required: &ref_190
                                  - name
                                  - rate
                                type: object
                                properties: &ref_191
                                  name:
                                    maxLength: 64
                                    minLength: 1
                                    type: string
                                    description: Name of the tax.
                                  rate:
                                    maximum: 99.99999
                                    exclusiveMaximum: false
                                    minimum: 0
                                    exclusiveMinimum: false
                                    type: number
                                    format: double
                                    description: Tax percentage for the transaction.
                                  amount:
                                    minimum: 0
                                    exclusiveMinimum: true
                                    type: integer
                                    format: int64
                                    readOnly: true
                                    description: Amount of tax that was applied to the transaction. The value is in the currency's lowest denomination, for example, cents.
                            surcharge:
                              description: Object that contains surcharge information for the transaction.
                              type: object
                              properties: &ref_192
                                bypass:
                                  type: boolean
                                  description: |
                                    Indicates if the merchant wants to remove the surcharge fee from the transaction.  
                                    `true` - The gateway removes the surcharge fee from the transaction.  
                                    `false` - The gateway adds the fee to the transaction.   
                                amount:
                                  minimum: 0
                                  exclusiveMinimum: true
                                  type: integer
                                  format: int64
                                  readOnly: true
                                  description: |
                                    If the merchant added a surcharge fee, this value indicates the amount of the surcharge fee
                                    in the currency’s lowest denomination, for example, cents.
                                percentage:
                                  maximum: 100
                                  exclusiveMaximum: false
                                  minimum: 0
                                  exclusiveMinimum: true
                                  type: number
                                  format: double
                                  readOnly: true
                                  description: If the merchant added a surcharge fee, this value indicates the surcharge percentage.
                            dualPricing:
                              description: Object that contains dual pricing information for the transaction.
                              required: &ref_195
                                - offered
                              type: object
                              properties: &ref_196
                                offered:
                                  type: boolean
                                  description: Indicates if the merchant offers dual pricing to the customer.
                                choiceRate:
                                  description: |
                                    Object that contains information about the choice rate.  
                                    **Note:** For requests, if the value for **offered** is `true`, you must send this object in the request.
                                  required: &ref_193
                                    - applied
                                    - rate
                                    - amount
                                  type: object
                                  readOnly: true
                                  properties: &ref_194
                                    applied:
                                      type: boolean
                                      description: |
                                        Indicates if the merchant applies a choice rate to the transaction amount. 

                                        Our gateway adds a choice rate to the transaction when the merchant offers an alternative payment type, but the customer chooses to pay by card.
                                      default: false
                                    rate:
                                      maximum: 100
                                      exclusiveMaximum: false
                                      minimum: 0
                                      exclusiveMinimum: true
                                      type: number
                                      format: double
                                      description: |
                                        If the customer used a card to pay for the transaction, this value indicates the percentage that our gateway added to the transaction amount.  
                                        **Note:** Our gateway returns a value for **rate** only if the value for **applied** in the request is `true`.
                                    amount:
                                      minimum: 0
                                      exclusiveMinimum: true
                                      type: integer
                                      format: int64
                                      description: |
                                        If the customer used a card to pay for the transaction, this value indicates the amount that our gateway added to the transaction amount. This value is in the currency’s lowest denomination, for example, cents.  
                                        **Note:** Our gateway returns a value for **amount** only if the value for **applied** in the request is `true`.
                                alternativeTender:
                                  type: string
                                  description: |
                                    Payment method that the merchant presented to the customer as an alternative to their chosen method.  
                                    **Note:** For requests, if the value for **offered** is `true`, you must send a value for **alternativeTender** in the request.
                                  enum:
                                    - card
                                    - cash
                                    - bankTransfer
                customer:
                  type: object
                  description: Customer contact and address details.
                  properties: &ref_81
                    firstName:
                      maxLength: 60
                      minLength: 0
                      type: string
                      description: Customer's first name.
                    lastName:
                      maxLength: 60
                      minLength: 0
                      type: string
                      description: Customer's last name.
                    dateOfBirth:
                      type: string
                      format: date
                      description: Customer's date of birth. The format for this value is **YYYY-MM-DD**.
                    referenceNumber:
                      maxLength: 48
                      minLength: 0
                      type: string
                      description: |
                        Identifier of the transaction, also known as a customer code. 

                        For requests, you must send a value for **referenceNumber** if the customer provides one. 
                    billingAddress:
                      required: *ref_0
                      type: object
                      title: address
                      description: Object that contains information about the address.
                      properties: *ref_1
                    shippingAddress:
                      description: Object that contains information about the customer and their shipping address.
                      type: object
                      properties: &ref_201
                        recipientName:
                          maxLength: 50
                          minLength: 0
                          type: string
                          description: Recipient's name.
                        address:
                          required: *ref_0
                          type: object
                          title: address
                          description: Object that contains information about the address.
                          properties: *ref_1
                    contactMethods:
                      uniqueItems: true
                      description: Customer's contact information.
                      type: array
                      items:
                        oneOf: *ref_2
                    notificationLanguage:
                      maxLength: 2
                      minLength: 2
                      type: string
                      format: iso-639-1
                      example: en
                      description: |
                        Language that the customer uses for notifications. 

                        This code follows the ISO 639-1 alpha-2 standard.
                      enum:
                        - en
                        - fr
                ipAddress:
                  required: &ref_82
                    - type
                    - value
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: &ref_83
                    type:
                      type: string
                      description: Internet protocol version of the IP address.
                      enum:
                        - ipv4
                        - ipv6
                    value:
                      type: string
                      description: IP address of the merchant's POS.
                credentialOnFile:
                  type: object
                  description: Object that contains information about saving the customer’s payment details.
                  properties: &ref_202
                    externalVault:
                      type: boolean
                      default: false
                      description: Indicates if the merchant uses a third-party vault to store the customer’s payment details.
                    tokenize:
                      type: boolean
                      description: Indicates if our gateway should tokenize the customer’s payment details as part of the transaction.
                    secureTokenId:
                      maxLength: 200
                      minLength: 0
                      type: string
                      description: |
                        Unique identifier that the merchant creates for the secure token that represents the customer’s payment details.  
                        **Note**: If you do not send a value for the **secureTokenId**, our gateway generates a unique identifier for the token.
                    mitAgreement:
                      type: string
                      description: |
                        Indicates how the merchant can use the customer’s card details, as agreed by the customer:  

                        - `unscheduled` - Transactions for a fixed or variable amount that are run at a certain pre-defined event.  
                        - `recurring` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Recurring transactions don’t have a fixed duration and run until the customer cancels the agreement.  
                        - `installment` - Transactions for a fixed amount that are run at regular intervals, for example, monthly. Installment transactions have a fixed duration.  
                          
                        **Note**: If you send a value for **mitAgreement**, you must send the **standingInstructions** object in the **paymentOrder** object.
                      enum:
                        - unscheduled
                        - recurring
                        - installment
                customizationOptions:
                  type: object
                  description: Object that contains available options to customize certain aspects of an instruction.
                  properties: &ref_84
                    ebtDetails:
                      required: &ref_203
                        - benefitCategory
                      type: object
                      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
                      properties: &ref_204
                        benefitCategory:
                          type: string
                          description: |
                            Indicates if the balance relates to an EBT Cash account or an EBT SNAP account.  
                             - `cash` – EBT Cash  
                             - `foodStamp` – EBT SNAP
                          enum:
                            - cash
                            - foodStamp
                        withdrawal:
                          type: boolean
                          description: |
                            Indicates a request to withdraw cash.  
                            **Note:** Cash withdrawal is available only for EBT Cash benefit accounts.
                    entryMethod:
                      type: string
                      description: |
                        Indicates how you want the device to capture the card details.  
                        - `deviceRead` - The cardholder taps, swipes, or inserts their card.
                        - `manualEntry` - The merchant or cardholder manually enters the card details.
                      enum:
                        - deviceRead
                        - manualEntry
                      default: deviceRead
                autoCapture:
                  type: boolean
                  default: true
                  description: |
                    Indicates if we should automatically capture the payment amount.  

                    - `true` - Run a sale and automatically capture the transaction.
                    - `false`- Run a pre-authorization and capture the transaction later.  

                    **Note**: If you send `false` and the terminal doesn't support pre-authorization, we set the transaction's status to pending. The merchant must capture the transaction to take payment from the customer.
                processAsSale:
                  type: boolean
                  default: false
                  description: |
                    Indicates if we should immediately settle the sale transaction. The merchant cannot adjust the transaction if we immediately settle it.  
                    **Note**: If the value for **processAsSale** is `true`, the gateway ignores the value in **autoCapture**.
            examples:
              paymentInstructionRequest:
                summary: Payment Instruction
                description: Submit an instruction for initiating a payment on a physical device.
                value: &ref_252
                  operator: jbloggs
                  processingTerminalId: '1021'
                  order:
                    orderId: 4fd4-99bc
                    currency: USD
                    amount: 1000
                  customizationOptions:
                    entryMethod: deviceRead
                  autoCapture: true
        required: true
      responses:
        '202':
          description: Successful request. We accepted the payment instruction to process.
          content:
            application/json:
              schema:
                required: &ref_77
                  - paymentInstructionId
                  - status
                type: object
                allOf: &ref_78
                  - type: object
                    description: Object that contains information about the status of the instruction
                    properties: &ref_85
                      status:
                        type: string
                        description: |
                          Indicates the current status of the instruction.  
                          - `canceled` – The instruction was canceled before it was completed.
                          - `completed` – The instruction has completed. Use the link to check the resource.
                          - `failure` – The instruction failed. Check the error message for more information.
                          - `inProgress` – The instruction is currently in progress.
                        enum:
                          - canceled
                          - completed
                          - failure
                          - inProgress
                      errorMessage:
                        type: string
                        description: Description of the error that caused the instruction to fail.
                      link:
                        type: object
                        description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                        properties: *ref_3
                        required: *ref_4
                        example: *ref_5
                  - type: object
                    properties:
                      paymentInstructionId:
                        maxLength: 36
                        minLength: 1
                        type: string
                        description: Unique identifier that our gateway assigned to the instruction.
              examples:
                paymentInstruction:
                  summary: Payment instruction
                  description: Object that contains information about the progress of the payment instruction.
                  value: &ref_253
                    paymentInstructionId: 3743a9165d134678a9100ebba3b29597
                    status: inProgress
                    link:
                      rel: self
                      method: GET
                      href: https://api.payroc.com/v1/payment-instructions/3743a9165d134678a9100ebba3b29597
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content: &ref_86
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                resourceExists:
                  summary: Resource already exists
                  description: Resource already exists
                  value: &ref_254
                    type: https://docs.payroc.com/api/errors#resource-already-exists
                    title: Resource already exists
                    status: 409
                    detail: The resource you attempted to create already exists
                    instance: https://api.payroc.com/v1/merchant/12345
        '415':
          description: Unsupported media type
          content: &ref_87
            application/json:
              schema:
                type: object
                properties: &ref_128
                  type:
                    type: string
                    description: URI reference identifying the problem type
                    example: https://docs.payroc.com/api/errors#unsupported-media-type
                  title:
                    type: string
                    description: Short description of the issue.
                    example: Unsupported media type
                  status:
                    type: integer
                    description: Http status code
                    example: 415
                  detail:
                    type: string
                    description: Explanation of the problem
                    example: You submitted a payload in an unsupported format.
                required: &ref_129
                  - type
                  - title
                  - status
                  - detail
              examples:
                unsupportedMediaType:
                  summary: Unsupported media type
                  description: The payload is in an unsupported format.
                  value: &ref_255
                    type: https://docs.payroc.com/api/errors#unsupported-media-type
                    title: Unsupported media type
                    status: 415
                    detail: You submitted a payload in an unsupported format
        '500':
          description: An error has occured
          content: *ref_13
  /payment-instructions/{paymentInstructionId}:
    get:
      tags:
        - Payment instructions
      summary: Retrieve payment instruction
      operationId: getPaymentInstruction
      description: Retrieve the current status of a specific payment instruction.
      parameters:
        - name: paymentInstructionId
          description: Unique identifier of the payment instruction.
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 1
            type: string
      responses:
        '200':
          description: Successful request. Returns the current status of the requested payment instruction.
          content:
            application/json:
              schema:
                required: *ref_77
                type: object
                allOf: *ref_78
              examples:
                paymentInstruction:
                  summary: Payment instruction
                  description: Object that contains information about the progress of the payment instruction.
                  value: &ref_256
                    paymentInstructionId: 3743a9165d134678a9100ebba3b29597
                    status: completed
                    link:
                      rel: payment
                      method: GET
                      href: https://api.payroc.com/v1/payments/DD6ZDQU7L2
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /devices/{serialNumber}/refund-instructions:
    post:
      tags:
        - Refund instructions
      summary: Submit refund instruction
      operationId: sendRefundInstruction
      description: Submit an instruction request to initiate a refund on a payment device.
      parameters:
        - name: serialNumber
          description: Serial number that identifies the merchant’s payment device.
          in: path
          required: true
          schema:
            maxLength: 45
            minLength: 1
            type: string
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              required: &ref_209
                - order
                - processingTerminalId
              type: object
              description: Object that contains information about the instruction request to initiate a refund on a payment device.
              properties: &ref_210
                operator:
                  maxLength: 50
                  minLength: 0
                  type: string
                  description: Operator who initiated the request.
                processingTerminalId:
                  maxLength: 50
                  minLength: 4
                  type: string
                  description: Unique identifier that our gateway assigned to the terminal.
                order:
                  required: &ref_207
                    - amount
                    - currency
                    - description
                    - orderId
                  type: object
                  description: Object that contains information about the refund.
                  allOf: &ref_208
                    - required: *ref_79
                      type: object
                      description: Object that contains details about the transaction.
                      properties: *ref_80
                    - type: object
                customer:
                  type: object
                  description: Customer contact and address details.
                  properties: *ref_81
                ipAddress:
                  required: *ref_82
                  type: object
                  writeOnly: true
                  description: Object that contains information about the IP address of the device that sent the request.
                  properties: *ref_83
                customizationOptions:
                  type: object
                  description: Object that contains available options to customize certain aspects of an instruction.
                  properties: *ref_84
            examples:
              refundInstructionRequest:
                summary: Refund instruction
                description: Submit an instruction for initiating a refund on a physical device.
                value: &ref_257
                  operator: jbloggs
                  processingTerminalId: '1021'
                  order:
                    orderId: 4fd4-99bc
                    currency: USD
                    amount: 1000
                  customizationOptions:
                    entryMethod: manualEntry
        required: true
      responses:
        '202':
          description: Successful request. We accepted the refund instruction to process.
          content:
            application/json:
              schema:
                required: &ref_88
                  - refundInstructionId
                  - status
                type: object
                allOf: &ref_89
                  - type: object
                    description: Object that contains information about the status of the instruction
                    properties: *ref_85
                  - type: object
                    properties:
                      refundInstructionId:
                        maxLength: 36
                        minLength: 1
                        type: string
                        description: Unique identifier that our gateway assigned to the instruction.
              examples:
                refundInstruction:
                  summary: Refund instruction
                  description: Object that contains information about the progress of the refund instruction.
                  value: &ref_258
                    refundInstructionId: 3743a9165d134678a9100ebba3b29597
                    status: inProgress
                    link:
                      rel: self
                      method: GET
                      href: https://api.payroc.com/v1/refund-instructions/3743a9165d134678a9100ebba3b29597
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content: *ref_86
        '415':
          description: Unsupported media type
          content: *ref_87
        '500':
          description: An error has occured
          content: *ref_13
  /refund-instructions/{refundInstructionId}:
    get:
      tags:
        - Refund instructions
      summary: Retrieve refund instruction
      operationId: getRefundInstruction
      description: Retrieve the current status of a specific refund instruction.
      parameters:
        - name: refundInstructionId
          description: Unique identifier of the refund instruction.
          in: path
          required: true
          schema:
            maxLength: 36
            minLength: 1
            type: string
      responses:
        '200':
          description: Successful request. Returns the current status of the requested refund instruction.
          content:
            application/json:
              schema:
                required: *ref_88
                type: object
                allOf: *ref_89
              examples:
                refundInstruction:
                  summary: Refund instruction
                  description: Object that contains information about the progress of the refund instruction.
                  value: &ref_259
                    refundInstructionId: 3743a9165d134678a9100ebba3b29597
                    status: completed
                    link:
                      rel: refund
                      method: GET
                      href: https://api.payroc.com/v1/refunds/DD6ZDQU7L2
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /merchant-platforms:
    summary: Provide capabilities to manage a merchant platform.
    post:
      tags:
        - Merchant platform
      summary: Create merchant platform
      description: Create a merchant platform.
      operationId: createMerchant
      parameters:
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: create merchant platform
              required: &ref_223
                - business
                - processingAccounts
              properties: &ref_224
                business:
                  type: object
                  description: Object that contains information about the business.
                  title: business
                  required: &ref_94
                    - name
                    - taxId
                    - contactMethods
                    - addresses
                    - organizationType
                  properties: &ref_95
                    name:
                      type: string
                      description: Legal name of the business.
                      maxLength: 100
                    taxId:
                      type: string
                      description: Tax ID of the business.
                      maxLength: 20
                    organizationType:
                      type: string
                      description: Type of organization.
                      enum:
                        - privateCorporation
                        - publicCorporation
                        - nonProfit
                        - privateLlc
                        - publicLlc
                        - privatePartnership
                        - publicPartnership
                        - soleProprietor
                    countryOfOperation:
                      type: string
                      description: Two-digit country code for the country that the business operates in. The format follows the ISO-3166 standard.
                      enum:
                        - US
                    addresses:
                      type: array
                      minItems: 1
                      uniqueItems: true
                      description: Array of address objects.
                      items:
                        oneOf:
                          - title: Legal address
                            required: &ref_211
                              - type
                              - city
                              - country
                              - address1
                              - postalCode
                              - state
                            allOf: &ref_212
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    description: Type of address
                                    enum:
                                      - legalAddress
                                    default: legalAddress
                              - required: *ref_0
                                type: object
                                title: address
                                description: Object that contains information about the address.
                                properties: *ref_1
                    contactMethods:
                      type: array
                      minItems: 1
                      uniqueItems: true
                      description: An array of contactMethod objects. Email should always be provided.
                      items:
                        oneOf: *ref_2
                processingAccounts:
                  description: Array of processingAccounts objects.
                  type: array
                  minItems: 1
                  items:
                    required: &ref_103
                      - doingBusinessAs
                      - owners
                      - businessType
                      - merchandiseOrServiceSold
                      - businessStartDate
                      - timezone
                      - address
                      - contactMethods
                      - processing
                      - funding
                      - pricing
                      - signature
                      - categoryCode
                    type: object
                    properties: &ref_104
                      processingAccountId:
                        type: integer
                        description: Unique identifier of the processing account.
                        readOnly: true
                      doingBusinessAs:
                        type: string
                        description: Trading name of the business.
                        maxLength: 100
                      owners:
                        description: |
                          Collection of individuals that are responsible for a processing account. When you create a processing account, you must indicate at least one owner as either of the following:
                          - Control prong – An individual who has a significant equity stake in the business and can make decisions for the processing account. You can add only one control prong to a processing account.
                          - Authorized signatory – An individual who doesn’t have an equity stake in the business but can make decisions for the processing account.
                        minItems: 1
                        type: array
                        items:
                          type: object
                          title: owner
                          required: *ref_27
                          properties: *ref_28
                      website:
                        type: string
                        description: Website address of the business.
                        maxLength: 128
                      businessType:
                        type: string
                        description: Type of business.
                        enum:
                          - retail
                          - restaurant
                          - internet
                          - moto
                          - lodging
                          - notForProfit
                      categoryCode:
                        type: integer
                        format: int32
                        example: 5999
                        description: Category code for the type of business.
                        maxLength: 4
                      merchandiseOrServiceSold:
                        type: string
                        description: Description of the services or merchandise sold by the business.
                        maxLength: 125
                      businessStartDate:
                        type: string
                        format: date
                        description: Date that the business was established. The format of the value is **YYYY-MM-DD**.
                        example: '2020-01-01'
                      timezone:
                        type: string
                        description: Time zone of the processing account.
                        enum:
                          - Pacific/Midway
                          - Pacific/Honolulu
                          - America/Anchorage
                          - America/Los_Angeles
                          - America/Denver
                          - America/Phoenix
                          - America/Chicago
                          - America/Indiana/Indianapolis
                          - America/New_York
                      address:
                        type: object
                        oneOf:
                          - required: *ref_0
                            type: object
                            title: address
                            description: Object that contains information about the address.
                            properties: *ref_1
                      contactMethods:
                        type: array
                        minItems: 1
                        description: Array of contactMethod objects. One contact method must be an email address.
                        items:
                          oneOf: *ref_2
                      processing:
                        type: object
                        title: processing
                        required: &ref_99
                          - transactionAmounts
                          - monthlyAmounts
                          - volumeBreakdown
                        properties: &ref_100
                          merchantId:
                            type: string
                            description: Unique identifier that the acquiring platform assigns to the merchant.
                            maxLength: 15
                            example: '444412365478965'
                            readOnly: true
                          transactionAmounts:
                            description: Object that contains information about transaction amounts for the processing account.
                            type: object
                            required:
                              - average
                              - highest
                            properties:
                              average:
                                type: integer
                                format: int32
                                description: Estimated average transaction amount. The value is in the currency's lowest denomination, for example, cents.
                              highest:
                                type: integer
                                format: int32
                                description: Estimated maximum transaction amount. The value is in the currency's lowest denomination, for example, cents.
                          monthlyAmounts:
                            description: Object that contains information about the monthly processing amounts for the processing account.
                            type: object
                            required:
                              - average
                              - highest
                            properties:
                              average:
                                type: integer
                                format: int32
                                description: Estimated average transaction amount each month. The value is in the currency's lowest denomination, for example, cents.
                              highest:
                                type: integer
                                format: int32
                                description: Estimated maximum transaction amount each month. The value is in the currency's lowest denomination, for example, cents.
                          volumeBreakdown:
                            type: object
                            description: Object that contains information about the types of transactions ran by the processing account. The percentages for transaction types must total 100%.
                            required:
                              - cardPresentKeyed
                              - cardPresentSwiped
                              - mailOrTelephone
                              - ecommerce
                            properties:
                              cardPresentKeyed:
                                description: Estimated percentage of keyed card-present transactions.
                                type: integer
                                format: int32
                                example: 47
                              cardPresentSwiped:
                                description: Estimated percentage of swiped card-present transactions.
                                type: integer
                                format: int32
                                example: 30
                              mailOrTelephone:
                                description: Estimated percentage of mail order or telephone transactions.
                                type: integer
                                format: int32
                                example: 3
                              ecommerce:
                                description: Esimated percentage of e-Commerce transactions.
                                type: integer
                                format: int32
                                example: 20
                          isSeasonal:
                            type: boolean
                            description: Indicates if the processing account runs transactions on a seasonal basis. For example, if the processing account runs transactions during only the winter months, send a value of `true`.
                          monthsOfOperation:
                            type: array
                            description: Months of the year that the processing account runs transactions.
                            maxItems: 12
                            items:
                              type: string
                              enum:
                                - jan
                                - feb
                                - mar
                                - apr
                                - may
                                - jun
                                - jul
                                - aug
                                - sep
                                - oct
                                - nov
                                - dec
                          ach:
                            type: object
                            required:
                              - refunds
                              - estimatedMonthlyTransactions
                              - limits
                            properties:
                              naics:
                                type: string
                                description: North American Industry Classification System (NAICS) code.
                                maxLength: 6
                                example: 44-45
                              previouslyTerminatedForAch:
                                type: boolean
                                default: false
                                description: Indicates if the business or its principals were previously turned down for ACH processing.
                              refunds:
                                type: object
                                required:
                                  - writtenRefundPolicy
                                properties:
                                  writtenRefundPolicy:
                                    type: boolean
                                    description: Indicates if the business has a written refund policy.
                                    default: false
                                  refundPolicyUrl:
                                    type: string
                                    description: URL of the written refund policy.
                                    maxLength: 2000
                              estimatedMonthlyTransactions:
                                type: integer
                                description: Estimated maximum number of transactions that the merchant will process in a month.
                              limits:
                                type: object
                                required:
                                  - singleTransaction
                                  - dailyDeposit
                                  - monthlyDeposit
                                properties:
                                  singleTransaction:
                                    type: integer
                                    description: Maximum amount allowed for a single debit or credit transaction. The value is in the currency's lowest denomination, for example, cents.
                                    example: 10000
                                  dailyDeposit:
                                    type: integer
                                    description: Maximum amount of total transactions allowed per day. The value is in the currency's lowest denomination, for example, cents.
                                    example: 200000
                                  monthlyDeposit:
                                    type: integer
                                    description: Maximum amount of total transactions allowed per month. The value is in the currency's lowest denomination, for example, cents.
                              transactionTypes:
                                type: array
                                description: List of supported transaction types.
                                uniqueItems: true
                                example:
                                  - prearrangedPayment
                                  - other
                                items:
                                  type: string
                                  enum:
                                    - prearrangedPayment
                                    - corpCashDisbursement
                                    - telephoneInitiatedPayment
                                    - webInitiatedPayment
                                    - other
                              transactionTypesOther:
                                type: string
                                description: If you send a value of `other` for transactionTypes, provide a list of the supported transaction types.
                                example: anotherTransactionType
                                maxLength: 100
                          cardAcceptance:
                            type: object
                            description: Information around the type of cards that will be accepted.
                            properties:
                              debitOnly:
                                type: boolean
                                default: false
                                description: Indicates if the merchant accepts only debit cards.
                              cardsAccepted:
                                type: array
                                description: List of card types the merchant accepts.
                                uniqueItems: true
                                default:
                                  - visa
                                  - mastercard
                                  - discover
                                  - amexOptBlue
                                items:
                                  type: string
                                  enum:
                                    - visa
                                    - mastercard
                                    - discover
                                    - amexOptBlue
                              specialityCards:
                                type: object
                                description: Information about the speciality cards that the merchant accepts.
                                properties:
                                  americanExpressDirect:
                                    type: object
                                    properties:
                                      enabled:
                                        type: boolean
                                        default: false
                                        description: Indicates if the merchant accepts American Express Direct.
                                      merchantNumber:
                                        type: string
                                        description: If the merchant accepts American Express Direct, provide their American Express merchant number.
                                        maxLength: 100
                                  electronicBenefitsTransfer:
                                    type: object
                                    properties:
                                      enabled:
                                        type: boolean
                                        default: false
                                        description: Indicates if the merchant accepts EBT.
                                      fnsNumber:
                                        type: string
                                        description: If the merchant accepts EBT, provide their FNS number.
                                        example: '1234567'
                                        maxLength: 7
                                  other:
                                    type: object
                                    properties:
                                      wexMerchantNumber:
                                        type: string
                                        description: If the merchant accepts WEX, provide their WEX merchant number.
                                        maxLength: 50
                                      voyagerMerchantId:
                                        type: string
                                        description: If the merchant accepts Voyager, provide their Voyager merchant ID.
                                        maxLength: 50
                                      fleetMerchantId:
                                        type: string
                                        description: If the merchant accepts Fleet, provide their Fleet merchant ID.
                                        maxLength: 50
                      funding:
                        type: object
                        allOf: &ref_218
                          - type: object
                            description: Object that contains information about the funding schedule of the processing account.
                            properties: &ref_101
                              status:
                                type: string
                                readOnly: true
                                description: Indicates if the processing account can receive funds.
                                enum:
                                  - enabled
                                  - disabled
                              fundingSchedule:
                                type: string
                                description: |
                                  Indicates when funds are sent to the funding account.  
                                  **Note:** If you send a value of `sameday`, funding includes all transactions the merchant ran before the ACH cut-off time.
                                example: nextday
                                enum:
                                  - standard
                                  - nextday
                                  - sameday
                                default: standard
                              acceleratedFundingFee:
                                type: integer
                                description: Monthly fee in cents for accelerated funding. We apply this fee if the value for fundingSchedule is `sameday` or `nextday`.
                                example: 1999
                                default: 0
                              dailyDiscount:
                                type: boolean
                                description: Indicator if fees should be taken on a daily basis.
                          - type: object
                            properties:
                              fundingAccounts:
                                description: Array of fundingAccounts objects.
                                minItems: 1
                                maxItems: 2
                                writeOnly: true
                                type: array
                                items:
                                  required: *ref_19
                                  type: object
                                  title: funding account
                                  properties: *ref_20
                      pricing:
                        type: object
                        description: Object that contains pricing information.
                        oneOf: &ref_222
                          - type: object
                            title: Pricing intent
                            required: &ref_219
                              - type
                              - pricingIntentId
                            properties: &ref_220
                              type:
                                type: string
                                enum:
                                  - intent
                              pricingIntentId:
                                type: integer
                                description: Unique identifier of the pricing intent.
                          - type: object
                            title: Pricing agreement
                            allOf: &ref_221
                              - type: object
                                properties:
                                  type:
                                    type: string
                                    enum:
                                      - agreement
                                required:
                                  - type
                              - type: object
                                title: US pricing agreement version 4.0
                                description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
                                required: *ref_90
                                properties: *ref_91
                      signature:
                        type: string
                        description: Method used to capture the owner's signature.
                        enum:
                          - requestedViaEmail
                          - requestedViaDirectLink
                      contacts:
                        type: array
                        description: Array of contact objects.
                        items:
                          type: object
                          title: contact
                          required: &ref_111
                            - type
                            - firstName
                            - lastName
                            - identifiers
                            - contactMethods
                          properties: &ref_112
                            contactId:
                              type: integer
                              description: Unique identifier of the contact.
                              readOnly: true
                              example: 1543
                            type:
                              type: string
                              description: Type of contact.
                              enum:
                                - manager
                                - representative
                                - others
                            firstName:
                              type: string
                              description: Contact's first name.
                              example: David
                              maxLength: 50
                            middleName:
                              type: string
                              description: Contact's middle name.
                              example: scott
                              maxLength: 50
                            lastName:
                              type: string
                              description: Contact's last name.
                              example: Simpson
                              maxLength: 50
                            identifiers:
                              minItems: 1
                              type: array
                              description: Array of identifier objects.
                              example:
                                - type: nationalId
                                  value: 987-65-4320
                              items:
                                required: *ref_92
                                type: object
                                title: identifier
                                properties: *ref_93
                            contactMethods:
                              type: array
                              minItems: 1
                              maxItems: 4
                              uniqueItems: true
                              description: |
                                Array of contactMethod objects.  
                                **Note**: If you are adding information about an owner, you must provide at least an email address. If you are adding information about a contact, you must provide at least a contact number.   
                              items:
                                oneOf: *ref_2
                      metadata:
                        type: object
                        additionalProperties:
                          type: string
                        description: Object that you can send to include custom data in the request.
                        example:
                          customerId: '2345'
                metadata:
                  type: object
                  additionalProperties:
                    type: string
                  description: Object that you can send to include custom data in the request.
                  example:
                    customerId: '2345'
      responses:
        '201':
          description: Successful request. We created the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: merchant
                required: &ref_96
                  - business
                  - processingAccounts
                properties: &ref_97
                  merchantPlatformId:
                    type: string
                    readOnly: true
                    description: Unique identifier of the merchant platform.
                    example: '12345'
                  createdDate:
                    type: string
                    format: date-time
                    example: '2020-09-08T12:00:00.000Z'
                    readOnly: true
                    description: Date that the merchant platform was created.
                  lastModifiedDate:
                    type: string
                    format: date-time
                    example: '2020-09-08T12:00:00.000Z'
                    readOnly: true
                    description: Date that the merchant platform was last modified.
                  business:
                    type: object
                    description: Object that contains information about the business.
                    title: business
                    required: *ref_94
                    properties: *ref_95
                  processingAccounts:
                    readOnly: true
                    description: Array of processingAccount objects
                    required:
                      - doingBusinessAs
                      - status
                    type: array
                    items:
                      type: object
                      title: processingAccount
                      properties:
                        processingAccountId:
                          type: string
                          description: Unique identifier of the processing account.
                          example: '12345'
                        doingBusinessAs:
                          type: string
                          description: Trading name of the business.
                        status:
                          type: string
                          description: |
                            Status of the processing account.  
                            - `entered` - We have received information about the account, but we have not yet reviewed it.  
                            - `pending` - We have reviewed the information about the account, but we have not yet approved it.  
                            - `approved` - We have approved the account for processing transactions and funding.  
                            - `seasonal` - Account can process transactions in certain months.  
                            - `subjectTo` - We have approved the account, but we are waiting on further information.  
                            - `dormant` - Account is closed for a period.  
                            - `nonProcessing` - We have approved the account, but the merchant has not yet run a transaction.  
                            - `rejected` - We rejected the application for the processing account.  
                            - `terminated` - Processing account is closed.  
                            - `cancelled` - Merchant withdrew the application for the processing account.
                            - `failed` - An error occurred while we were setting up the processing account.
                          readOnly: true
                          enum:
                            - entered
                            - pending
                            - approved
                            - seasonal
                            - subjectTo
                            - dormant
                            - nonProcessing
                            - rejected
                            - terminated
                            - cancelled
                            - failed
                        link:
                          type: object
                          description: Object that contains HATEOAS links for the processing account.
                          properties:
                            rel:
                              type: string
                              example: processingAccount
                              description: Relationship to the parent resource.
                            href:
                              type: string
                              example: https://api.payroc.com/v1/processing-accounts/1
                              description: Link to the resource.
                            method:
                              type: string
                              example: get
                              description: HTTP method you can use to retrieve the resource.
                        signature:
                          type: object
                          description: Object containing the method we used to capture the owner's signature.
                          oneOf: &ref_102
                            - title: Signature by direct link
                              description: We return a link to the pricing agreement in the response.
                              type: object
                              required: &ref_213
                                - type
                              properties: &ref_214
                                type:
                                  type: string
                                  description: Method used to capture the owner's signature.
                                  enum:
                                    - requestedViaDirectLink
                                link:
                                  example:
                                    rel: agreement
                                    href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                                    method: get
                                  allOf:
                                    - type: object
                                      readOnly: true
                                      description: Link to sign agreement
                                    - type: object
                                      description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                      properties: *ref_3
                                      required: *ref_4
                                      example: *ref_5
                            - title: Signature by email
                              description: Owner's signature by email.
                              type: object
                              required: &ref_215
                                - type
                              properties: &ref_216
                                type:
                                  type: string
                                  description: Method used to capture the owner's signature.
                                  enum:
                                    - requestedViaEmail
                  metadata:
                    type: object
                    additionalProperties:
                      type: string
                    description: Object that you can send to include custom metadata in the request.
                    example:
                      customerId: '2345'
                  links:
                    readOnly: true
                    type: array
                    description: Array of useful links related to your request
                    items:
                      type: object
                      description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                      properties: *ref_3
                      required: *ref_4
                      example: *ref_5
              examples:
                created:
                  summary: Created merchant platform
                  description: New merchant platform created
                  value: &ref_261
                    merchantPlatformId: '12346'
                    createdDate: '2020-09-08T12:00:00.000Z'
                    lastModifiedDate: '2020-09-08T12:00:00.000Z'
                    business:
                      name: Example corp
                      taxId: xxx-xx-4321
                      organizationType: privateCorporation
                      countryOfOperation: US
                      addresses:
                        - type: legalAddress
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: example-corp@example.com
                        - type: phone
                          value: 123 456 7890
                    processingAccounts:
                      - processingAccountId: '38765'
                        doingBusinessAs: dba
                        status: pending
                        link:
                          rel: processingAccount
                          href: https://api.payroc.com/v1/processing-accounts/38765
                          method: get
                        signature:
                          type: requestedViaDirectLink
                          link:
                            rel: agreement
                            href: https://us.agreementexpress.net/mv2/viewer2.jsp?docId=00000000-0000-0000-0000-000000000000
                            method: get
                partialSuccess:
                  summary: Failed processing account
                  description: We successfully created the merchant platform, but failed to add one or more processing accounts.
                  value: &ref_262
                    merchantPlatformId: '12346'
                    createdDate: '2020-09-08T12:00:00.000Z'
                    lastModifiedDate: '2020-09-08T12:00:00.000Z'
                    business:
                      name: Example corp
                      taxId: xxx-xx-4321
                      organizationType: privateCorporation
                      countryOfOperation: US
                      addresses:
                        - type: legalAddress
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                      contactMethods:
                        - type: email
                          value: example-corp@example.com
                        - type: phone
                          value: 123 456 7890
                    processingAccounts:
                      - doingBusinessAs: dba
                        status: failed
          headers:
            location:
              description: URI reference to the resource.
              style: simple
              explode: false
              schema:
                type: string
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                fundingAccountsLimitReached:
                  summary: Funding accounts limit reached
                  description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
                  value: &ref_107
                    type: https://docs.payroc.com/api/errors#funding-accounts-limit-reached
                    title: Funding accounts limit reached
                    status: 400
                    detail: You can not have any more than two funding accounts attached to this entity
                tooManyControlProngs:
                  summary: Too many control prongs
                  description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
                  value: &ref_108
                    type: https://docs.payroc.com/api/errors#too-many-control-prongs
                    title: Too many control prongs
                    status: 400
                    detail: You can set only one owner as the control prong
                noControlProng:
                  summary: No control prong or authorized signatory
                  description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
                  value: &ref_109
                    type: https://docs.payroc.com/api/errors#no-control-prong-or-authorized-signatory
                    title: No control prong or authorized signatory
                    status: 400
                    detail: Set one owner as the control prong or the authorized signatory
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
                taxIdInUse:
                  summary: Tax ID in use
                  description: The tax ID supplied is already in use.
                  value: &ref_263
                    type: https://docs.payroc.com/api/errors#tax-id-in-use
                    title: Tax ID already in use
                    status: 409
                    detail: The tax ID that you supplied is already in use. Supply a unique tax ID
                nationalIdInUse:
                  summary: National ID in use
                  description: One or more supplied national IDs are not unique. All national IDs must be unique.
                  value: &ref_264
                    type: https://docs.payroc.com/api/errors#national-id-in-use
                    title: National ID in use
                    status: 409
                    detail: One or more supplied national IDs are not unique. All national IDs must be unique
        '500':
          description: An error has occured
          content: *ref_13
    get:
      tags:
        - Merchant platform
      summary: List merchant platforms
      description: Retrieve a list of merchant platforms associated with your account.
      operationId: listMerchantPlatforms
      parameters:
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
      responses:
        '200':
          description: Successful request. Returns a list of merchant platforms associated with your account.
          content:
            application/json:
              schema:
                type: object
                title: paginated merchant platforms
                allOf: &ref_217
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of merchantPlatform objects.
                        items:
                          type: object
                          title: merchant
                          required: *ref_96
                          properties: *ref_97
              examples:
                listMerchantPlatforms:
                  summary: Paginated list of merchant platforms
                  description: Retrieve a list of merchant platforms associated with your account.
                  value: &ref_260
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms?before=12345&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms?after=12346&limit=2
                    data:
                      - merchantPlatformId: '12345'
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        business:
                          name: Example corp
                          taxId: xxx-xx-1234
                          organizationType: privateCorporation
                          countryOfOperation: US
                          addresses:
                            - type: legalAddress
                              address1: 1 Example Ave.
                              address2: example line 2
                              address3: example line 3
                              city: Example city
                              state: Illinois
                              country: US
                              postalCode: '60056'
                          contactMethods:
                            - type: email
                              value: example-corp@example.com
                            - type: phone
                              value: 123 456 7890
                        processingAccounts:
                          - processingAccountId: '237654'
                            doingBusinessAs: example dba
                            status: pending
                            link:
                              rel: processingAccount
                              href: https://api.payroc.com/v1/processing-accounts/237654
                              method: get
                      - merchantPlatformId: '12346'
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        business:
                          name: Example corp
                          taxId: xxx-xx-4321
                          organizationType: privateCorporation
                          countryOfOperation: US
                          addresses:
                            - type: legalAddress
                              address1: 1 Example Ave.
                              address2: example line 2
                              address3: example line 3
                              city: Example city
                              state: Illinois
                              country: US
                              postalCode: '60056'
                          contactMethods:
                            - type: email
                              value: example-corp@example.com
                            - type: phone
                              value: 123 456 7890
                        processingAccounts:
                          - processingAccountId: '38765'
                            doingBusinessAs: dba
                            status: pending
                            link:
                              rel: processingAccount
                              href: https://api.payroc.com/v1/processing-accounts/38765
                              method: get
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /merchant-platforms/{merchantPlatformId}:
    get:
      tags:
        - Merchant platform
      summary: Retrieve merchant platform
      description: Retrieve a specific merchant platform.
      operationId: getMerchantAcccounts
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform.
          required: true
          style: simple
          explode: false
          schema: &ref_98
            type: string
            example: '12345'
      responses:
        '200':
          description: Successful request. Returns the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: merchant
                required: *ref_96
                properties: *ref_97
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /merchant-platforms/{merchantPlatformId}/processing-accounts:
    get:
      tags:
        - Merchant platform
      summary: Paginated list of open processing accounts of a merchant platform
      description: Retrieve processing accounts associated with a merchant platform.
      operationId: listMerchantLocations
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform.
          required: true
          style: simple
          explode: false
          schema: *ref_98
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
        - in: query
          name: includeClosed
          description: Indicates if you want to return closed processing accounts. This includes processing accounts that have a status of `terminated`, `cancelled`, or `rejected`.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successful request. Returns a list of processing accounts associated with the merchant platform.
          content:
            application/json:
              schema:
                type: object
                title: paginated processing accounts
                allOf: &ref_227
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of processingAccount objects.
                        items:
                          required: &ref_105
                            - doingBusinessAs
                            - owners
                            - businessType
                            - merchandiseOrServiceSold
                            - timezone
                            - address
                            - contactMethods
                            - processing
                            - funding
                            - pricing
                            - signature
                            - categoryCode
                          type: object
                          properties: &ref_106
                            processingAccountId:
                              type: string
                              readOnly: true
                              description: Unique identifier of the processing account.
                              example: '12345'
                            createdDate:
                              type: string
                              format: date-time
                              example: '2020-09-08T12:00:00.000Z'
                              readOnly: true
                              description: Date that the processing account was created.
                            lastModifiedDate:
                              type: string
                              format: date-time
                              example: '2020-09-08T12:00:00.000Z'
                              readOnly: true
                              description: Date that the processing account was last modified.
                            status:
                              type: string
                              description: |
                                Status of the processing account.  
                                - `entered` - We have received information about the account, but we have not yet reviewed it.  
                                - `pending` - We have reviewed the information about the account, but we have not yet approved it.  
                                - `approved` - We have approved the account for processing transactions and funding.  
                                - `seasonal` - Account can process transactions in certain months.  
                                - `subjectTo` - We have approved the account, but we are waiting on further information.  
                                - `dormant` - Account is closed for a period.  
                                - `nonProcessing` - We have approved the account, but the merchant has not yet run a transaction.  
                                - `rejected` - We rejected the application for the processing account.  
                                - `terminated` - Processing account is closed.  
                                - `cancelled` - Merchant withdrew the application for the processing account.  
                              readOnly: true
                              enum:
                                - entered
                                - pending
                                - approved
                                - seasonal
                                - subjectTo
                                - dormant
                                - nonProcessing
                                - rejected
                                - terminated
                                - cancelled
                            doingBusinessAs:
                              type: string
                              description: Trading name of the business.
                              maxLength: 100
                            owners:
                              readOnly: true
                              description: Object that contains information about the owners of the business.
                              type: array
                              items:
                                type: object
                                title: owner
                                properties:
                                  ownerId:
                                    type: integer
                                    example: 1
                                  firstName:
                                    type: string
                                    example: Joe
                                  lastName:
                                    type: string
                                    example: Bloggs
                                  link:
                                    type: object
                                    properties:
                                      rel:
                                        type: string
                                        example: owner
                                        description: The relationship to the parent resource.
                                      href:
                                        type: string
                                        example: https://api.payroc.com/v1/owners/1
                                        description: The link to the resource.
                                      method:
                                        type: string
                                        example: get
                                        description: HTTP method for retrieving the resource.
                            website:
                              type: string
                              description: Website address of the business.
                              maxLength: 128
                            businessType:
                              type: string
                              description: Type of business.
                              enum:
                                - retail
                                - restaurant
                                - internet
                                - moto
                                - lodging
                                - notForProfit
                            categoryCode:
                              type: integer
                              format: int32
                              example: 5999
                              description: Category code for the type of business.
                              maxLength: 4
                            merchandiseOrServiceSold:
                              type: string
                              description: Description of the services or merchandise sold by the business.
                              maxLength: 125
                            businessStartDate:
                              type: string
                              format: date
                              description: Date that the business was established. The format of the value is **YYYY-MM-DD**.
                              example: '2020-01-01'
                            timezone:
                              type: string
                              description: Time zone for the processing account.
                              enum:
                                - Pacific/Midway
                                - Pacific/Honolulu
                                - America/Anchorage
                                - America/Los_Angeles
                                - America/Denver
                                - America/Phoenix
                                - America/Chicago
                                - America/Indiana/Indianapolis
                                - America/New_York
                            address:
                              type: object
                              oneOf:
                                - required: *ref_0
                                  type: object
                                  title: address
                                  description: Object that contains information about the address.
                                  properties: *ref_1
                            contactMethods:
                              type: array
                              minItems: 1
                              description: Array of contactMethods objects for the processing account. Atleast one contactMethod must be an email address.
                              items:
                                oneOf: *ref_2
                            processing:
                              type: object
                              title: processing
                              required: *ref_99
                              properties: *ref_100
                            funding:
                              type: object
                              description: Object that contains funding information.
                              allOf: &ref_226
                                - type: object
                                  description: Object that contains information about the funding schedule of the processing account.
                                  properties: *ref_101
                                - type: object
                                  properties:
                                    fundingAccounts:
                                      minItems: 1
                                      maxItems: 2
                                      readOnly: true
                                      type: array
                                      items:
                                        type: object
                                        title: funding account summary
                                        properties: &ref_225
                                          fundingAccountId:
                                            type: integer
                                            readOnly: true
                                            example: 123
                                          status:
                                            type: string
                                            readOnly: true
                                            example: pending
                                            enum:
                                              - approved
                                              - rejected
                                              - pending
                                          link:
                                            readOnly: true
                                            type: object
                                            description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                            properties: *ref_3
                                            required: *ref_4
                                            example: *ref_5
                            pricing:
                              type: object
                              description: Object that contains pricing information.
                              properties:
                                link:
                                  type: object
                                  description: Array of HATEOAS links for pricing information.
                                  properties:
                                    rel:
                                      type: string
                                      example: pricing
                                      description: Relationship to the parent resource.
                                    href:
                                      type: string
                                      example: https://api.payroc.com/v1/processing-account/1/pricing
                                      description: Link to the resource.
                                    method:
                                      type: string
                                      example: get
                                      description: HTTP method you can use to retrieve the resource.
                            contacts:
                              readOnly: true
                              description: Array of contact objects.
                              type: array
                              items:
                                type: object
                                title: contact
                                properties:
                                  contactId:
                                    type: integer
                                    description: Unique identifier of the contact.
                                    example: 1
                                  firstName:
                                    type: string
                                    description: Contact's first name.
                                    example: Joe
                                  lastName:
                                    type: string
                                    description: Contact's last name.
                                    example: Bloggs
                                  link:
                                    type: object
                                    description: Object that contains HATEOAS links for the contact.
                                    properties:
                                      rel:
                                        type: string
                                        example: contact
                                        description: Relationship to the parent resource.
                                      href:
                                        type: string
                                        example: https://api.payroc.com/v1/contacts/1
                                        description: Link to the resource.
                                      method:
                                        type: string
                                        example: get
                                        description: HTTP method you can use to retrieve the resource.
                            signature:
                              type: object
                              description: Object containing the method we used to capture the owner's signature.
                              oneOf: *ref_102
                            metadata:
                              type: object
                              additionalProperties:
                                type: string
                              description: Object that you can send to include custom data in the request.
                              example:
                                customerId: '2345'
                            links:
                              type: array
                              description: Array of useful links related to your request.
                              items:
                                type: object
                                description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
                                properties: *ref_3
                                required: *ref_4
                                example: *ref_5
                              example:
                                - rel: merchantPricingAgreement
                                  href: https://agreementexpress.com/38765
                                  method: get
              examples:
                listProcessingAccounts:
                  summary: Paginated list of processing account
                  description: Retrieve processing accounts associated with a merchant platform.
                  value: &ref_265
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms/12345/processing-accounts?before=12345&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/merchant-platforms/12346/processing-accounts?after=12346&limit=2
                    data:
                      - processingAccountId: '12345'
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        status: approved
                        doingBusinessAs: Example business
                        owners:
                          - ownerId: 4563
                            firstName: Jane
                            lastName: Bloggs
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/owners/4563
                              method: get
                        website: www.example.com
                        businessType: retail
                        categoryCode: 5999
                        merchandiseOrServiceSold: Food
                        businessStartDate: '2020-01-01'
                        timezone: America/Chicago
                        address:
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: email
                            value: example-corp@example.com
                          - type: phone
                            value: 123 456 7890
                        processing:
                          merchantId: '444412365478965'
                          transactionAmounts:
                            average: 1000
                            highest: 200000
                          monthlyAmounts:
                            average: 1000000
                            highest: 200000000
                          volumeBreakdown:
                            cardPresentKeyed: 47
                            cardPresentSwiped: 30
                            mailOrTelephone: 3
                            ecommerce: 20
                          isSeasonal: true
                          monthsOfOperation:
                            - jan
                            - feb
                            - mar
                            - nov
                            - dec
                          ach:
                            naics: '441222'
                            previouslyTerminatedForAch: false
                            refunds:
                              writtenRefundPolicy: true
                              refundPolicyUrl: http://www.example.com/refunds
                            estimatedMonthlyTransactions: 1000
                            limits:
                              singleTransaction: 10000000
                              dailyDeposit: 1000
                              monthlyDeposit: 2000
                            transactionTypes:
                              - telephoneInitiatedPayment
                              - webInitiatedPayment
                          cardAcceptance:
                            debitOnly: false
                            cardsAccepted:
                              - visa
                              - mastercard
                            specialityCards:
                              americanExpressDirect:
                                enabled: true
                                merchantNumber: '1234567890'
                              electronicBenefitsTransfer:
                                enabled: true
                                fnsNumber: '1234567'
                              other:
                                wexMerchantNumber: '1234567890'
                                voyagerMerchantId: '1234567890'
                                fleetMerchantId: '1234567890'
                        funding:
                          status: enabled
                          fundingSchedule: nextday
                          acceleratedFundingFee: 1999
                          fundingAccounts:
                            - fundingAccountId: 123
                              status: pending
                              link:
                                rel: fundingAccount
                                method: get
                                href: https://api.payroc.com/v1/funding-accounts/123
                        pricing:
                          link:
                            rel: pricing
                            method: get
                            href: https://api.payroc.com/v1/processing-account/12345/pricing
                        signature:
                          type: requestedViaEmail
                        contacts:
                          - contactId: 87926
                            firstName: Joe
                            lastName: Bloggs
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/contacts/87926
                              method: get
                      - processingAccountId: '12346'
                        createdDate: '2020-09-08T12:00:00.000Z'
                        lastModifiedDate: '2020-09-08T12:00:00.000Z'
                        status: approved
                        doingBusinessAs: Example internet business
                        owners:
                          - ownerId: 4564
                            firstName: Joe
                            lastName: Bloggs
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/owners/4564
                              method: get
                        website: www.example.com
                        businessType: internet
                        categoryCode: 5999
                        merchandiseOrServiceSold: Food
                        businessStartDate: '2020-01-01'
                        timezone: America/Chicago
                        address:
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        contactMethods:
                          - type: email
                            value: example-corp@example.com
                          - type: phone
                            value: 123 456 7890
                        processing:
                          merchantId: '444412365478966'
                          transactionAmounts:
                            average: 2000
                            highest: 300000
                          monthlyAmounts:
                            average: 2000000
                            highest: 300000000
                          volumeBreakdown:
                            cardPresentKeyed: 0
                            cardPresentSwiped: 0
                            mailOrTelephone: 0
                            ecommerce: 100
                          isSeasonal: false
                        funding:
                          status: enabled
                          fundingSchedule: nextday
                          acceleratedFundingFee: 1999
                          fundingAccounts:
                            - fundingAccountId: 124
                              status: pending
                              link:
                                rel: fundingAccount
                                method: get
                                href: https://api.payroc.com/v1/funding-accounts/124
                        pricing:
                          link:
                            rel: pricing
                            method: get
                            href: https://api.payroc.com/v1/processing-account/12346/pricing
                        signature:
                          type: requestedViaEmail
                        contacts:
                          - contactId: 87926
                            firstName: Joe
                            lastName: Bloggs
                            link:
                              rel: owner
                              href: https://api.payroc.com/v1/contacts/87926
                              method: get
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    post:
      tags:
        - Merchant platform
      summary: Create processing account
      description: Create a new processing account.
      operationId: createProcessingAccount
      parameters:
        - name: merchantPlatformId
          in: path
          description: Unique identifier of the merchant platform.
          required: true
          style: simple
          explode: false
          schema: *ref_98
        - name: Idempotency-Key
          in: header
          required: true
          description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
          schema: *ref_21
      requestBody:
        content:
          application/json:
            schema:
              required: *ref_103
              type: object
              properties: *ref_104
      responses:
        '201':
          description: Successful request. We created the processing account.
          content:
            application/json:
              schema:
                required: *ref_105
                type: object
                properties: *ref_106
          headers:
            location:
              description: URI reference to the resource.
              style: simple
              explode: false
              schema:
                type: string
        '400':
          description: Validation error.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
                idempotentKeyMissing:
                  summary: Idempotency key missing
                  description: Idempotency key must be supplied
                  value: *ref_23
                fundingAccountsLimitReached:
                  summary: Funding accounts limit reached
                  description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
                  value: *ref_107
                tooManyControlProngs:
                  summary: Too many control prongs
                  description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
                  value: *ref_108
                noControlProng:
                  summary: No control prong or authorized signatory
                  description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
                  value: *ref_109
        '401':
          description: Identity could not be verified
          content: *ref_11
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties: *ref_24
                required: *ref_25
              examples:
                idempotentKeyInUse:
                  summary: Idempotency key in use
                  description: Idempotency key in use
                  value: *ref_26
        '500':
          description: An error has occured
          content: *ref_13
  /processing-accounts/{processingAccountId}:
    get:
      tags:
        - Processing account
      summary: Retrieve processing account
      description: Retrieve a specific processing account.
      operationId: getProcessingAcccounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier of the processing account.
          required: true
          style: simple
          explode: false
          schema: &ref_110
            type: string
            example: '12345'
      responses:
        '200':
          description: Successful request. Returns the processing account.
          content:
            application/json:
              schema:
                required: *ref_105
                type: object
                properties: *ref_106
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /processing-accounts/{processingAccountId}/funding-accounts:
    get:
      tags:
        - Processing account
      summary: List processing account's funding accounts
      description: Retrieve a list of funding accounts associated with a processing account.
      operationId: listProcessingAccountsFundingAccounts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier of the processing account.
          required: true
          style: simple
          explode: false
          schema: *ref_110
      responses:
        '200':
          description: Successful request. Returns a list of funding accounts associated with the processing account.
          content:
            application/json:
              schema:
                type: array
                description: Array of fundingAccount objects.
                items:
                  required: *ref_19
                  type: object
                  title: funding account
                  properties: *ref_20
              examples:
                fundingAccounts:
                  summary: List of funding accounts
                  description: List of funding accounts associated with a processing account.
                  value: &ref_266
                    - fundingAccountId: 123
                      createdDate: '2020-09-08T12:00:00.000Z'
                      lastModifiedDate: '2020-09-08T12:00:00.000Z'
                      status: approved
                      type: checking
                      use: credit
                      nameOnAccount: Joe Bloggs
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****6789'
                            accountNumber: '******7890'
                      metadata:
                        internalRef: '2345'
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/processing-accounts/2
                          method: get
                    - fundingAccountId: 124
                      createdDate: '2021-01-08T12:00:00.000Z'
                      lastModifiedDate: '2021-01-08T12:00:00.000Z'
                      status: pending
                      type: checking
                      use: debit
                      nameOnAccount: Joe Bloggs
                      paymentMethods:
                        - type: ach
                          value:
                            routingNumber: '*****8725'
                            accountNumber: '******3491'
                      metadata:
                        internalRef: '2346'
                      links:
                        - rel: parent
                          href: https://api.payroc.com/v1/processing-accounts/2
                          method: get
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Identity could not be verified
          content: *ref_11
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /processing-accounts/{processingAccountId}/contacts:
    get:
      tags:
        - Processing account
      summary: List contacts
      description: Retrieve a list of contacts associated with a processing account.
      operationId: listProcessingAccountContacts
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier of the processing account.
          required: true
          style: simple
          explode: false
          schema: *ref_110
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
      responses:
        '200':
          description: Successful request. Returns a list of contacts associated with the processing account.
          content:
            application/json:
              schema:
                type: object
                title: paginated Contacts
                allOf: &ref_228
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: An array of contact objects.
                        items:
                          type: object
                          title: contact
                          required: *ref_111
                          properties: *ref_112
              examples:
                paginatedContacts:
                  summary: Paginated list of processing account contacts
                  description: List of contacts associated with a processing account.
                  value: &ref_267
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/12345/contacts?before=12345&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/12346/contacts?after=12346&limit=2
                    data:
                      - contactId: 12345
                        type: manager
                        firstName: Joe
                        middleName: Scott
                        lastName: Bloggs
                        identifiers:
                          - type: nationalId
                            value: xxx-xx-1234
                        contactMethods:
                          - type: phone
                            value: '98765432000'
                          - type: mobile
                            value: '85645787451'
                          - type: email
                            value: joe.blogs@example.com
                      - contactId: 12346
                        type: representative
                        firstName: Jane
                        middleName: Emma
                        lastName: Bloggs
                        identifiers:
                          - type: nationalId
                            value: xxx-xx-9876
                        contactMethods:
                          - type: phone
                            value: '98765432000'
                          - type: mobile
                            value: '85645787451'
                          - type: email
                            value: jane.blogs@example.com
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Identity could not be verified
          content: *ref_11
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /processing-accounts/{processingAccountId}/pricing:
    get:
      summary: Get processing account pricing agreement
      description: Retrieve a pricing agreement for a processing account.
      operationId: retrieveProcessingAccountPricing
      tags:
        - Processing account
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier of the processing account.
          required: true
          style: simple
          explode: false
          schema: *ref_110
      responses:
        '200':
          description: Successful request. Returns the pricing agreement for the processing account.
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: US pricing agreement version 4.0
                    description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
                    required: *ref_90
                    properties: *ref_91
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /processing-accounts/{processingAccountId}/owners:
    get:
      tags:
        - Processing account
      summary: List owners
      description: Retrieve owners associated with a processing account.
      operationId: listMerchantOwners
      parameters:
        - name: processingAccountId
          in: path
          description: Unique identifier of the processing account.
          required: true
          style: simple
          explode: false
          schema: *ref_110
        - name: before
          in: query
          required: false
          description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
          explode: false
          schema: *ref_29
        - name: after
          in: query
          description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
          schema: *ref_30
        - name: limit
          in: query
          description: States the total amount of results the response is limited to.
          schema: *ref_31
      responses:
        '200':
          description: Successful request. Returns a list of owners associated with the processing account.
          content:
            application/json:
              schema:
                type: object
                title: paginated Owners
                allOf: &ref_229
                  - type: object
                    description: Contains the pagination properties that you use to navigate through a list of results.
                    properties: *ref_32
                  - type: object
                    properties:
                      data:
                        type: array
                        description: Array of owner objects.
                        items:
                          type: object
                          title: owner
                          required: *ref_27
                          properties: *ref_28
              examples:
                listProcessingAccountOwners:
                  summary: Paginated list of processing account owners
                  description: Retrieve owners associated with a processing account.
                  value: &ref_268
                    limit: 2
                    count: 2
                    hasMore: true
                    links:
                      - rel: previous
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/12345/owners?before=12345&limit=2
                      - rel: next
                        method: get
                        href: https://api.payroc.com/v1/processing-accounts/12346/owners?after=12346&limit=2
                    data:
                      - ownerId: 12345
                        firstName: Joe
                        middleName: Scott
                        lastName: Bloggs
                        dateOfBirth: '1964-03-22'
                        address:
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        identifiers:
                          - type: nationalId
                            value: xxx-xx-1234
                        contactMethods:
                          - type: email
                            value: joe.bloggs@example.com
                          - type: phone
                            value: '1234567890'
                        relationship:
                          equityPercentage: 49
                          title: CFO
                          isControlProng: false
                          isAuthorizedSignatory: false
                      - ownerId: 12346
                        firstName: Jane
                        middleName: Emma
                        lastName: Bloggs
                        dateOfBirth: '1964-03-22'
                        address:
                          address1: 1 Example Ave.
                          address2: example line 2
                          address3: example line 3
                          city: Example city
                          state: Illinois
                          country: US
                          postalCode: '60056'
                        identifiers:
                          - type: nationalId
                            value: xxx-xx-4321
                        contactMethods:
                          - type: email
                            value: jane.bloggs@example.com
                          - type: phone
                            value: '1234567890'
                        relationship:
                          equityPercentage: 51
                          title: CEO
                          isControlProng: true
                          isAuthorizedSignatory: false
                noActivity:
                  summary: No records found
                  description: Valid request, but no records match the criteria.
                  value: *ref_48
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
  /contacts/{contactId}:
    get:
      tags:
        - Contacts
      summary: Retrieve contact
      description: Retrieve a specific contact.
      operationId: getContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          style: simple
          explode: false
          schema: &ref_113
            type: integer
      responses:
        '200':
          description: Successful request. Returns the requested contact.
          content:
            application/json:
              schema:
                type: object
                title: contact
                required: *ref_111
                properties: *ref_112
              examples:
                contact:
                  summary: Contact object
                  description: Contact object
                  value: &ref_269
                    contactId: 1543
                    type: manager
                    firstName: Joe
                    middleName: scott
                    lastName: Bloggs
                    identifiers:
                      - type: nationalId
                        value: xxx-xx-4320
                    contactMethods:
                      - type: email
                        value: joe.bloggs@example.com
                      - type: phone
                        value: '2025550104'
                      - type: mobile
                        value: '0987654321'
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
    put:
      tags:
        - Contacts
      summary: Update contact
      description: Update a specific contact.
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          style: simple
          explode: false
          schema: *ref_113
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: contact
              required: *ref_111
              properties: *ref_112
      responses:
        '204':
          description: Successful request. We updated the contact.
        '400':
          description: Validation errors.
          content:
            application/json:
              schema:
                type: object
                properties: *ref_8
                required: *ref_9
              examples:
                validationError:
                  summary: Bad Request
                  description: One or more validation errors occurred
                  value: *ref_10
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '406':
          description: Not acceptable
          content: *ref_18
        '500':
          description: An error has occured
          content: *ref_13
    delete:
      tags:
        - Contacts
      summary: Delete contact
      description: Delete a contact.
      operationId: deleteContact
      parameters:
        - name: contactId
          in: path
          description: Unique identifier for the contact.
          required: true
          style: simple
          explode: false
          schema: *ref_113
      responses:
        '204':
          description: Successful request. We deleted the contact.
        '400':
          description: Invalid request
          content: *ref_14
        '401':
          description: Identity could not be verified
          content: *ref_11
        '403':
          description: Do not have permissions to perform this action
          content: *ref_12
        '404':
          description: Resource not found
          content: *ref_17
        '500':
          description: An error has occured
          content: *ref_13
components:
  securitySchemes:
    bearerAuth:
      type: http
      description: 'Example: Authorization: Bearer <token>'
      scheme: bearer
      bearerFormat: JWT
  parameters:
    before:
      name: before
      in: query
      required: false
      description: Points to the resource identifier that you want to receive your results before. Typically, this is the first resource on the previous page.
      explode: false
      schema: *ref_29
    after:
      name: after
      in: query
      description: Points to the resource identifier that you want to receive your results after. Typically, this is the last resource on the previous page.
      schema: *ref_30
    limit:
      name: limit
      in: query
      description: States the total amount of results the response is limited to.
      schema: *ref_31
    idempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      description: Unique identifier that you generate for each request. You must use the UUID v4 format for the identifier.
      schema: *ref_21
    recipientId:
      name: recipientId
      description: Unique identifier of the funding recipient.
      in: path
      required: true
      style: simple
      explode: false
      schema: *ref_15
    fundingAccountId:
      name: fundingAccountId
      in: path
      required: true
      description: Unique identifier of the funding account.
      style: simple
      explode: false
      schema: *ref_33
    ownerId:
      name: ownerId
      in: path
      description: Unique identifier for the owner.
      required: true
      style: simple
      explode: false
      schema: *ref_35
    pricingIntentId:
      in: path
      name: pricingIntentId
      schema: *ref_51
      required: true
      description: Unique identifier of the pricing intent.
    dateFrom:
      name: dateFrom
      in: query
      description: Retrieve activity that occured since `dateFrom`. We can return activity from only the last two years.
      required: true
      schema: *ref_58
    dateTo:
      name: dateTo
      in: query
      required: true
      description: Retrieve activity that occured before `dateTo`.
      schema: *ref_59
    instructionId:
      name: instructionId
      in: path
      required: true
      description: Unique identifier of the funding instruction.
      schema: *ref_114
    merchantId:
      name: merchantId
      in: query
      description: Unique identifier of the merchant.
      schema: *ref_64
    batchId:
      name: batchId
      description: Unique identifier of the batch.
      in: path
      required: true
      style: simple
      schema: *ref_115
    keyDate:
      name: date
      in: query
      required: true
      description: Date to retrieve results from. You must provide either the 'batchId' or the 'date'.
      schema: *ref_70
    batchIdQuery:
      name: batchId
      in: query
      required: true
      description: Unique identifier of the batch. You must provide either the 'batchId' or the 'date'.
      schema: *ref_71
    transactionType:
      name: transactionType
      in: query
      required: false
      description: Type of transaction.
      schema: *ref_116
    transactionId:
      name: transactionId
      description: Unique identifier of the transaction.
      in: path
      required: true
      style: simple
      schema: *ref_117
    authorizationId:
      name: authorizationId
      description: Unique identifier of the authorization.
      in: path
      required: true
      style: simple
      schema: *ref_118
    disputeId:
      name: disputeId
      description: Unique identifier of the dispute.
      in: path
      required: true
      style: simple
      schema: *ref_119
    merchantPlatformId:
      name: merchantPlatformId
      in: path
      description: Unique identifier of the merchant platform.
      required: true
      style: simple
      explode: false
      schema: *ref_98
    processingAccountId:
      name: processingAccountId
      in: path
      description: Unique identifier of the processing account.
      required: true
      style: simple
      explode: false
      schema: *ref_110
    contactId:
      name: contactId
      in: path
      description: Unique identifier for the contact.
      required: true
      style: simple
      explode: false
      schema: *ref_113
  schemas:
    '400':
      type: object
      properties: *ref_8
      required: *ref_9
    '401':
      type: object
      properties: *ref_120
      required: *ref_121
    '403':
      type: object
      properties: *ref_122
      required: *ref_123
    '404':
      type: object
      properties: *ref_124
      required: *ref_125
    '406':
      type: object
      properties: *ref_126
      required: *ref_127
    '409':
      type: object
      properties: *ref_24
      required: *ref_25
    '415':
      type: object
      properties: *ref_128
      required: *ref_129
    '500':
      type: object
      properties: *ref_130
      required: *ref_131
    link:
      type: object
      description: Object that contains information about a HATEOAS link. If we can't match a dispute to a transaction, we don't return a 'link' object.
      properties: *ref_3
      required: *ref_4
      example: *ref_5
    paginatedList:
      type: object
      description: Contains the pagination properties that you use to navigate through a list of results.
      properties: *ref_32
    address:
      required: *ref_0
      type: object
      title: address
      description: Object that contains information about the address.
      properties: *ref_1
    contactMethodEmail:
      required: *ref_132
      type: object
      title: Email contact method
      properties: *ref_133
    contactMethodPhone:
      required: *ref_134
      type: object
      title: Phone number contact method
      properties: *ref_135
    contactMethodMobile:
      required: *ref_136
      type: object
      title: Mobile number contact method
      properties: *ref_137
    contactMethodFax:
      required: *ref_138
      type: object
      title: Fax number contact method
      properties: *ref_139
    contactMethod:
      oneOf: *ref_2
    fundingRecipient:
      required: *ref_6
      type: object
      title: funding recipient
      properties: *ref_7
    paginatedFundRecipients:
      type: object
      title: paginated funding recipients
      allOf: *ref_140
    identifier:
      required: *ref_92
      type: object
      title: identifier
      properties: *ref_93
    ownerRelationship:
      required: *ref_141
      type: object
      title: Owner relationship
      properties: *ref_142
      description: Object that contains information about the owner's relationship to the business.
    owner:
      type: object
      title: owner
      required: *ref_27
      properties: *ref_28
    PaymentMethodAch:
      type: object
      title: ACH payment method
      properties: *ref_143
    paymentMethods:
      uniqueItems: true
      type: array
      description: Array of PaymentMethodAch objects.
      xml: *ref_144
      items: *ref_145
    fundingAccount:
      required: *ref_19
      type: object
      title: funding account
      properties: *ref_20
    createFundingRecipient:
      required: *ref_146
      type: object
      title: create funding recipient
      properties: *ref_147
    listFundingAccounts:
      type: object
      title: paginated funding accounts
      allOf: *ref_148
    baseIntent:
      type: object
      title: base pricing intent
      description: Object that contains information about the base fees.
      properties: *ref_149
      required: *ref_150
    baseUs:
      type: object
      title: US base fees
      description: Object that contains information about U.S. base fees.
      properties: *ref_151
      required: *ref_152
    percentage:
      description: Percentage value up to 2 decimal places.
      title: percentage
      type: number
      format: double
      minimum: 0
      maximum: 100
      example: 1.25
    amount:
      type: integer
      minimum: 0
    processorFee:
      type: object
      title: Processor Fee
      description: Object that contains information about the processor fees.
      properties: *ref_36
    pinDebit:
      type: object
      required: *ref_39
      properties: *ref_40
    electronicBenefitsTransfer:
      type: object
      required: *ref_41
      properties: *ref_42
    enhancedInterchange:
      type: object
      required: *ref_43
      properties: *ref_44
    specialityCards:
      type: object
      required: *ref_45
      properties: *ref_46
    interchangePlus:
      type: object
      title: Interchange Plus Plan
      description: Object that contains information about Interchange Plus.
      properties: *ref_153
      required: *ref_154
    qualRates:
      type: object
      required: *ref_37
      properties: *ref_38
    interchangePlusTiered3:
      type: object
      title: Interchange Plus with three tiers
      description: Object that contains information about Interchange Plus with three tiers.
      properties: *ref_155
      required: *ref_156
    tiered3:
      type: object
      title: Tiered pricing with three tiers
      description: Object that contains information about tiered pricing with three tiers.
      properties: *ref_157
      required: *ref_158
    qualRatesWithPremium:
      type: object
      allOf: *ref_47
    tiered4:
      type: object
      title: Tiered pricing with four tiers
      description: Object that contains information about tiered pricing with four tiers.
      properties: *ref_159
      required: *ref_160
    qualRatesWithPremiumAndRegulated:
      type: object
      allOf: *ref_161
    tiered6:
      type: object
      title: Tiered pricing with six tiers
      description: Object that contains information about tiered pricing with six tiers.
      properties: *ref_162
      required: *ref_163
    flatRate:
      type: object
      title: Flat Rate Plan
      description: Object that contains information about Flat Rate.
      properties: *ref_164
      required: *ref_165
    consumerChoice:
      type: object
      title: Consumer Choice Plan
      description: Object that contains information about ConsumerChoice.
      properties: *ref_166
      required: *ref_167
    rewardPay:
      type: object
      title: RewardPay Plan
      description: Object that contains information about RewardPay.
      properties: *ref_168
      required: *ref_169
    rewardPayChoice:
      type: object
      title: RewardPayChoice Plan
      description: Object that contains information about RewardPayChoice.
      properties: *ref_170
      required: *ref_171
    ach:
      type: object
      properties: *ref_172
    processorFeesUs:
      type: object
      title: US processor fees
      description: Object that contains information about U.S. processor fees.
      properties: *ref_173
    gatewayUs:
      type: object
      description: Object that contains information about the gateway fees.
      title: gateway fees
      properties: *ref_174
      required: *ref_175
    pricingAgreementUs4.0:
      type: object
      title: US pricing agreement version 4.0
      description: Object that contains information about U.S. pricing intents for Merchant Processing Agreement (MPA) 4.0.
      required: *ref_90
      properties: *ref_91
    pricingIntent4.0:
      type: object
      title: pricing intent version 4.0
      description: Object that contains information about a pricing intent for Merchant Processing Agreement (MPA) 4.0.
      allOf: *ref_176
    pricingIntent:
      type: object
      title: pricing intent
      description: Object that contains information about a pricing intent.
      oneOf: *ref_49
    paginatedPricingIntent:
      type: object
      title: paginated pricing intents
      description: Object that contains information about your pricing intents.
      allOf: *ref_177
    patchDocument:
      description: JSONPatch document, specified in RFC 6902.
      required: *ref_178
      properties: *ref_179
    patchRequest:
      type: array
      description: A JSONPatch document as defined by RFC 6902
      example: *ref_180
      items: *ref_181
    instruction:
      type: object
      description: Inform the payfac what to do with the specified funds. **
      title: funding instruction
      properties: *ref_52
    merchantBalance:
      type: object
      description: Object that contains information about the total funds available to the merchant.
      title: merchant balance
      properties: *ref_182
    activityRecord:
      type: object
      description: Array of activityRecord objects.
      title: activity record
      properties: *ref_183
      required: *ref_184
    merchantSummary:
      type: object
      title: merchant summary
      description: Object that contains information about the merchant.
      properties: *ref_65
      example: *ref_66
    batch:
      type: object
      title: batch
      properties: *ref_62
    settledSummary:
      type: object
      title: settlement summary
      description: Object that contains information about the settlement.
      properties: *ref_185
    batchSummary:
      type: object
      title: batch summary
      description: Object that contains information about the batch. If we can't match a dispute to a batch, we don't return 'batch' object.
      nullable: true
      properties: *ref_72
    cardSummary:
      type: object
      title: card summary
      description: Object that contains information about the card.
      properties: *ref_73
    authorizationSummary:
      type: object
      title: authorization summary
      description: Object that contains information about the authorization.
      properties: *ref_186
    transaction:
      type: object
      title: transaction
      description: Object that contains information about the transaction.
      properties: *ref_69
    transactionSummary:
      type: object
      title: transaction summary
      description: Object that contains summary information about the transaction.
      properties: *ref_75
    authorization:
      type: object
      title: authorization
      description: Object that contains information about the authorization.
      properties: *ref_74
    disputeStatus:
      type: object
      title: dispute status
      description: Object that contains information about the current status of the dispute.
      properties: *ref_76
    dispute:
      type: object
      title: dispute
      description: Object that contains information about the dispute.
      properties: *ref_187
    order:
      required: *ref_79
      type: object
      description: Object that contains details about the transaction.
      properties: *ref_80
    tip:
      required: *ref_188
      type: object
      description: Object that contains information about the tip.
      properties: *ref_189
    tax:
      required: *ref_190
      type: object
      properties: *ref_191
    surcharge:
      type: object
      description: |
        Object that contains information about the surcharge.
      properties: *ref_192
    choiceRate:
      required: *ref_193
      type: object
      readOnly: true
      properties: *ref_194
      description: |
        The choice rate.  
        **Note:** This field is required if dual pricing was offered.
    dualPricing:
      required: *ref_195
      type: object
      description: Object that contains information about dual pricing.
      properties: *ref_196
    breakdown:
      required: *ref_197
      type: object
      description: Object that contains information about the breakdown of the transaction.
      properties: *ref_198
    paymentInstructionOrder:
      required: *ref_199
      type: object
      description: Object that contains information about the payment.
      allOf: *ref_200
    shipping:
      description: Object that contains information about the customer and their shipping address.
      type: object
      properties: *ref_201
    customer:
      type: object
      description: Customer contact and address details.
      properties: *ref_81
    ipAddress:
      required: *ref_82
      type: object
      writeOnly: true
      description: Object that contains information about the IP address of the device that sent the request.
      properties: *ref_83
    credentialOnFile:
      type: object
      description: Object that contains information about saving the customer’s payment details.
      properties: *ref_202
    ebtDetails:
      required: *ref_203
      type: object
      description: Object that contains information about the Electronic Benefit Transfer (EBT) transaction.
      properties: *ref_204
    customizationOptions:
      type: object
      description: Object that contains available options to customize certain aspects of an instruction.
      properties: *ref_84
    paymentInstructionRequest:
      required: *ref_205
      type: object
      description: Object that contains the instructions for initiating a payment on a physical device.
      properties: *ref_206
    deviceInstruction:
      type: object
      description: Object that contains information about the status of the instruction
      properties: *ref_85
    paymentInstruction:
      required: *ref_77
      type: object
      allOf: *ref_78
    refundInstructionOrder:
      required: *ref_207
      type: object
      description: Object that contains information about the refund.
      allOf: *ref_208
    refundInstructionRequest:
      required: *ref_209
      type: object
      description: Object that contains information about the instruction request to initiate a refund on a payment device.
      properties: *ref_210
    refundInstruction:
      required: *ref_88
      type: object
      allOf: *ref_89
    legalAddress:
      title: Legal address
      required: *ref_211
      allOf: *ref_212
    business:
      type: object
      description: Object that contains information about the business.
      title: business
      required: *ref_94
      properties: *ref_95
    signatureByDirectLink:
      title: Signature by direct link
      description: We return a link to the pricing agreement in the response.
      type: object
      required: *ref_213
      properties: *ref_214
    signatureByEmail:
      title: Signature by email
      description: Owner's signature by email.
      type: object
      required: *ref_215
      properties: *ref_216
    signature:
      type: object
      description: Object containing the method we used to capture the owner's signature.
      oneOf: *ref_102
    merchantPlatform:
      type: object
      title: merchant
      required: *ref_96
      properties: *ref_97
    paginatedMerchants:
      type: object
      title: paginated merchant platforms
      allOf: *ref_217
    processing:
      type: object
      title: processing
      required: *ref_99
      properties: *ref_100
    commonFunding:
      type: object
      description: Object that contains information about the funding schedule of the processing account.
      properties: *ref_101
    createFunding:
      type: object
      allOf: *ref_218
    pricingTemplate:
      type: object
      title: Pricing intent
      required: *ref_219
      properties: *ref_220
    pricingAgreement:
      type: object
      title: Pricing agreement
      allOf: *ref_221
    pricing:
      type: object
      description: Object that contains pricing information.
      oneOf: *ref_222
    contact:
      type: object
      title: contact
      required: *ref_111
      properties: *ref_112
    createProcessingAccount:
      required: *ref_103
      type: object
      properties: *ref_104
    createMerchantAccount:
      type: object
      title: create merchant platform
      required: *ref_223
      properties: *ref_224
    fundingAccountSummary:
      type: object
      title: funding account summary
      properties: *ref_225
    funding:
      type: object
      description: Object that contains funding information.
      allOf: *ref_226
    processingAccount:
      required: *ref_105
      type: object
      properties: *ref_106
    paginatedProcessingAccounts:
      type: object
      title: paginated processing accounts
      allOf: *ref_227
    paginatedContacts:
      type: object
      title: paginated Contacts
      allOf: *ref_228
    paginatedOwners:
      type: object
      title: paginated Owners
      allOf: *ref_229
  examples:
    paginatedFundRecipients:
      summary: Paginated funding recipients.
      description: Paginated list of funding recipients.
      value: *ref_230
    noActivity:
      summary: No records found
      description: Valid request, but no records match the criteria.
      value: *ref_48
    validatorError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_10
    notAuthorized:
      summary: Not Authorized
      description: Your identity could not be verified
      value: *ref_231
    forbidden:
      summary: Forbidden
      description: You do not have the required permission
      value: *ref_232
    apiError:
      summary: Api error
      description: Unable to process your request.
      value: *ref_233
    idempotentKeyMissing:
      summary: Idempotency key missing
      description: Idempotency key must be supplied
      value: *ref_23
    kycCheckFailed:
      summary: KYC check failed
      description: KYC check failed
      value: *ref_16
    notAcceptable:
      summary: Not acceptable
      description: Requested representation not supported
      value: *ref_234
    idempotentKeyInUse:
      summary: Idempotency key in use
      description: Idempotency key in use
      value: *ref_26
    fundingRecipient:
      summary: Funding recipient.
      description: Funding recipients.
      value: *ref_235
    notFound:
      summary: Not found
      description: Resource could not be found
      value: *ref_236
    fundingAccounts:
      summary: List of funding accounts
      description: List of funding accounts.
      value: *ref_237
    fundingAccount:
      summary: Funding account
      description: Funding accounts.
      value: *ref_238
    owner:
      summary: Owner object
      description: Owner object
      value: *ref_34
    listFundingAccountExample:
      summary: Paginated funding accounts
      value: *ref_239
    noResults:
      summary: No results found
      description: No results found
      value: *ref_240
    fundingAccountExample:
      summary: Masked funding account example.
      value: *ref_241
    paginatedPricingIntent:
      summary: Paginated pricing intent
      description: Example of a paginated pricing intent.
      value: *ref_242
    pricingIntent:
      summary: Pricing intent
      description: Pricing intent
      value: *ref_50
    listInstructionsExample:
      summary: Paginated instructions list
      value: *ref_243
    parameterError:
      summary: Bad request
      description: One or more validation errors occurred.
      value: *ref_60
    paginationError:
      summary: Bad request
      description: One or more validation errors occurred
      value: *ref_57
    outsideRecordRange:
      summary: Bad request
      description: Requested data outside allowed range.
      value: *ref_61
    newInstructionAccepted:
      summary: New instruction accepted.
      value: *ref_244
    insufficientFunds:
      summary: Insufficient funds
      description: You do not have enough funds to complete the request.
      value: *ref_53
    fundingAccountsRestricted:
      summary: Funding accounts restricted
      description: Funding accounts restricted.
      value: *ref_55
    instructionIdError:
      summary: Bad request
      description: One or more validation errors occurred.
      value: *ref_54
    canNotBeModified:
      summary: Cannot be modified
      description: Resource cannot be modified.
      value: *ref_56
    listBalancesExample:
      summary: Paginated list of merchant balances
      description: Paginated list of merchant balances.
      value: *ref_245
    paginatedList:
      summary: Paginated activity records
      description: Valid payfac account with activity for date range.
      value: *ref_246
    paginatedBatches:
      summary: Paginated batches
      value: *ref_247
    examples-parameterError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_67
    examples-paginationError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_68
    batchIdError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_63
    paginatedTransactions:
      summary: Paginated transactions
      value: *ref_248
    transactionIdError:
      summary: Bad Request
      description: One or more validation errors occurred
      value: *ref_249
    paginatedAuthorizations:
      summary: Paginated authorizations
      value: *ref_250
    paginatedDisputes:
      summary: Paginated disputes
      value: *ref_251
    paymentInstructionRequest:
      summary: Payment Instruction
      description: Submit an instruction for initiating a payment on a physical device.
      value: *ref_252
    paymentInstructionInProgress:
      summary: Payment instruction
      description: Object that contains information about the progress of the payment instruction.
      value: *ref_253
    resourceExists:
      summary: Resource already exists
      description: Resource already exists
      value: *ref_254
    unsupportedMediaType:
      summary: Unsupported media type
      description: The payload is in an unsupported format.
      value: *ref_255
    paymentInstruction:
      summary: Payment instruction
      description: Object that contains information about the progress of the payment instruction.
      value: *ref_256
    refundInstructionRequest:
      summary: Refund instruction
      description: Submit an instruction for initiating a refund on a physical device.
      value: *ref_257
    refundInstructionInProgress:
      summary: Refund instruction
      description: Object that contains information about the progress of the refund instruction.
      value: *ref_258
    refundInstruction:
      summary: Refund instruction
      description: Object that contains information about the progress of the refund instruction.
      value: *ref_259
    listMerchantPlatforms:
      summary: Paginated list of merchant platforms
      description: Retrieve a list of merchant platforms associated with your account.
      value: *ref_260
    merchantPlatformCreated:
      summary: Created merchant platform
      description: New merchant platform created
      value: *ref_261
    processingAccountFailed:
      summary: Failed processing account
      description: We successfully created the merchant platform, but failed to add one or more processing accounts.
      value: *ref_262
    fundingAccountsLimitReached:
      summary: Funding accounts limit reached
      description: Funding accounts restricted. You can not have any more than two funding accounts attached to this entity
      value: *ref_107
    tooManyControlProngs:
      summary: Too many control prongs
      description: Your request included more than one owner as the control prong. You can set only one owner as the control prong.
      value: *ref_108
    noControlProng:
      summary: No control prong or authorized signatory
      description: Your request didn’t indicate which owner is the control prong or the authorized signatory. Set one owner as the control prong or the authorized signatory.
      value: *ref_109
    taxIdInUse:
      summary: Tax ID in use
      description: The tax ID supplied is already in use.
      value: *ref_263
    nationalIdInUse:
      summary: National ID in use
      description: One or more supplied national IDs are not unique. All national IDs must be unique.
      value: *ref_264
    listProcessingAccounts:
      summary: Paginated list of processing account
      description: Retrieve processing accounts associated with a merchant platform.
      value: *ref_265
    examples-fundingAccounts:
      summary: List of funding accounts
      description: List of funding accounts associated with a processing account.
      value: *ref_266
    paginatedContacts:
      summary: Paginated list of processing account contacts
      description: List of contacts associated with a processing account.
      value: *ref_267
    listProcessingAccountOwners:
      summary: Paginated list of processing account owners
      description: Retrieve owners associated with a processing account.
      value: *ref_268
    contact:
      summary: Contact object
      description: Contact object
      value: *ref_269
  responses:
    '400':
      description: Invalid request
      content: *ref_14
    '401':
      description: Identity could not be verified
      content: *ref_11
    '403':
      description: Do not have permissions to perform this action
      content: *ref_12
    '404':
      description: Resource not found
      content: *ref_17
    '406':
      description: Not acceptable
      content: *ref_18
    '409':
      description: Conflict
      content: *ref_86
    '415':
      description: Unsupported media type
      content: *ref_87
    '500':
      description: An error has occured
      content: *ref_13
  headers:
    location:
      description: URI reference to created resource.
      style: simple
      explode: false
      schema: *ref_22
x-tagGroups:
  - name: Boarding
    tags:
      - Contacts
      - Merchant platform
      - Owners
      - Pricing intents
      - Processing account
  - name: Pay by cloud
    tags:
      - Payment instructions
      - Refund instructions
  - name: Funding
    tags:
      - Funding accounts
      - Funding instructions
      - Funding recipient
      - Funding activity
  - name: Reporting
    tags:
      - Settlement
